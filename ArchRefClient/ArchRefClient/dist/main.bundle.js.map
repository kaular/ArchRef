{"version":3,"sources":["webpack:///./src/app/shared/dataservices/metrics/expectedproperty.service.ts","webpack:///./src/app/shared/dataservices/metrics/providedpropertyservice.service.ts","webpack:///./src/app/shared/datamodels/levelgraph/level.ts","webpack:///./src/app/shared/datamodels/metrics/property.ts","webpack:///./src/app/shared/dataservices/levelgraph/levelgraphrelation.service.ts","webpack:///./src/app/shared/dataservices/topologytemplate/nodetemplate.service.ts","webpack:///./src/app/shared/dataservices/topologytemplate/relationshiptemplate.service.ts","webpack:///./src/app/shared/modules/levelgraph/levelgrahdetails/levelgrahdetails.component.ts","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/dashboard/administration/administration.component.ts","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.component.ts","webpack:///./src/app/dashboard/levelgraphtool/levelgraphtool.component.ts","webpack:///./src/app/dashboard/topologytool/topologymodeller/topologymodeller.component.ts","webpack:///./src/app/dashboard/topologytool/topologytemplatetool.component.ts","webpack:///./src/app/shared/constants/levelgraphnodetype.ts","webpack:///./src/app/shared/datamodels/graph/node.ts","webpack:///./src/app/shared/datamodels/graph/relation.ts","webpack:///./src/app/shared/datamodels/utility/path.ts","webpack:///./src/app/shared/datamodels/utility/point.ts","webpack:///./src/app/shared/dataservices/refinement/refinement.service.ts","webpack:///./src/app/shared/modules/levelgraph/levelgraphmodule.ts","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnode.component.ts","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetails.component.ts","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationmodule.ts","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.component.ts","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplate.module.ts","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.component.ts","webpack:///./src/app/shared/modules/repository/repositorydetails/repositorydetails.component.ts","webpack:///./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.component.ts","webpack:///./src/app/shared/modules/topologytemplate/topologytemplatemodule.ts","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.component.ts","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetlails.module.ts","webpack:///./src/app/shared/modules/types/nodetype/nodetypemodule.ts","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshipdetails.module.ts","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshiptypedetails.component.ts","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypemodule.ts","webpack:///./src/app/utility.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/dashboard/administration/administration.module.ts","webpack:///./src/app/dashboard/administration/administration.routes.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/dashboard.routes.ts","webpack:///./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.routes.ts","webpack:///./src/app/dashboard/levelgraphtool/levelgraphtool.module.ts","webpack:///./src/app/dashboard/levelgraphtool/levelgraphtool.routes.ts","webpack:///./src/app/shared/datamodels/entity/entity.ts","webpack:///./src/app/dashboard/topologytool/topologymodeller/topologymodeller.routes.ts","webpack:///./src/app/dashboard/topologytool/topologytemplatetool.module.ts","webpack:///./src/app/dashboard/topologytool/topologytemplatetool.routes.ts","webpack:///./src/app/index.ts","webpack:///./src/app/shared/constants/levelgraphrelationtype.ts","webpack:///./src/app/shared/dataservices/metrics/property.service.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/modules/levelgraph/levelgrahdetails/levelgraphdetails.module.ts","webpack:///./src/app/shared/modules/levelgraph/levelgrahdetails/levelgraphdetails.routes.ts","webpack:///./src/app/shared/modules/levelgraph/levelgraph.component.ts","webpack:///./src/app/shared/dataservices/levelgraph/levelgraph.service.ts","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/generaldata/generaldata.component.ts","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetailsmodule.ts","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetailsroutes.ts","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodemodule.ts","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelation.component.ts","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/generaldata/generaldata.component.ts","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.module.ts","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetailsroutes.ts","webpack:///./src/app/shared/modules/metrics/expectedproperty/expectedproperty.component.ts","webpack:///./src/app/shared/modules/metrics/providedproperty/providedproperty.component.ts","webpack:///./src/logger/logger.ts","webpack:///./src/app/shared/modules/nodetemplate/nodetemplate.component.ts","webpack:///./src/app/shared/modules/nodetemplate/nodetemplate.module.ts","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/generaldata/generaldata.component.ts","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.module.ts","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.routes.ts","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplate.component.ts","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/generaldata/generaldata.component.ts","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.module.ts","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.routes.ts","webpack:///./src/app/shared/modules/repository/repository.component.ts","webpack:///./src/app/shared/modules/repository/repositorydetails/repositorydetails.module.ts","webpack:///./src/app/shared/modules/repository/repositorydetails/repositorydetails.routes.ts","webpack:///./src/app/shared/modules/repository/repositorymodule.ts","webpack:///./src/app/shared/modules/topnav/index.ts","webpack:///./src/app/shared/modules/topnav/topnav.ts","webpack:///./src/app/shared/modules/topologytemplate/topologytemplate.component.ts","webpack:///./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.module.ts","webpack:///./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatesdetails.routes.ts","webpack:///./src/app/shared/modules/types/nodetype/nodetype.component.ts","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/generaldata/generaldata.component.ts","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.routes.ts","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptype.component.ts","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/generaldata/generaldata.component.ts","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshipdetails.routes.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/shared/datamodels/repository/repository.ts","webpack:///./src/app/shared/dataservices/topologytemplate/topologytemplate.service.ts","webpack:///./src/app/shared/dataservices/types/relationshiptype.service.ts","webpack:///./src/app/shared/modules/metrics/property.module.ts","webpack:///./src/app/shared/constants/constants.ts","webpack:///./src/app/shared/datamodels/levelgraph/levelgraph.ts","webpack:///./src/app/shared/datamodels/topology/topologytemplate.ts","webpack:///./src/app/shared/dataservices/repository/repository.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/dashboard/administration/administration.component.css","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.component.css","webpack:///./src/app/dashboard/levelgraphtool/levelgraphtool.component.css","webpack:///./src/app/dashboard/topologytool/topologymodeller/topologymodeller.component.css","webpack:///./src/app/dashboard/topologytool/topologytemplatetool.component.css","webpack:///./src/app/shared/modules/levelgraph/levelgrahdetails/levelgrahdetails.component.css","webpack:///./src/app/shared/modules/levelgraph/levelgraph.component.css","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnode.component.css","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/generaldata/generaldata.component.css","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetails.component.css","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelation.component.css","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/generaldata/generaldata.component.css","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component.css","webpack:///./src/app/shared/modules/metrics/expectedproperty/expectedproperty.component.css","webpack:///./src/app/shared/modules/metrics/providedproperty/providedproperty.component.css","webpack:///./src/app/shared/modules/nodetemplate/nodetemplate.component.css","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/generaldata/generaldata.component.css","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.component.css","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplate.component.css","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/generaldata/generaldata.component.css","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.component.css","webpack:///./src/app/shared/modules/repository/repository.component.css","webpack:///./src/app/shared/modules/repository/repositorydetails/repositorydetails.component.css","webpack:///./src/app/shared/modules/topologytemplate/topologytemplate.component.css","webpack:///./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.component.css","webpack:///./src/app/shared/modules/types/nodetype/nodetype.component.css","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/generaldata/generaldata.component.css","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.component.css","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptype.component.css","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/generaldata/generaldata.component.css","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshiptypedetails.component.css","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/shared/dataservices/exportxml.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/dashboard/administration/administration.component.html","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.component.html","webpack:///./src/app/shared/dataservices/types/nodetype.service.ts","webpack:///./src/app/dashboard/levelgraphtool/levelgraphtool.component.html","webpack:///./src/app/dashboard/topologytool/topologymodeller/topologymodeller.component.html","webpack:///./src/app/dashboard/topologytool/topologytemplatetool.component.html","webpack:///./src/app/shared/modules/levelgraph/levelgrahdetails/levelgrahdetails.component.html","webpack:///./src/app/shared/modules/levelgraph/levelgraph.component.html","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnode.component.html","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/generaldata/generaldata.component.html","webpack:///./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetails.component.html","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelation.component.html","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/generaldata/generaldata.component.html","webpack:///./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component.html","webpack:///./src/app/shared/modules/metrics/expectedproperty/expectedproperty.component.html","webpack:///./src/app/shared/modules/metrics/providedproperty/providedproperty.component.html","webpack:///./src/app/shared/modules/nodetemplate/nodetemplate.component.html","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/generaldata/generaldata.component.html","webpack:///./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.component.html","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplate.component.html","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/generaldata/generaldata.component.html","webpack:///./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.component.html","webpack:///./src/app/shared/modules/repository/repository.component.html","webpack:///./src/app/shared/modules/repository/repositorydetails/repositorydetails.component.html","webpack:///./src/app/shared/modules/topnav/topnav.html","webpack:///./src/app/shared/modules/topologytemplate/topologytemplate.component.html","webpack:///./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.component.html","webpack:///./src/app/shared/modules/types/nodetype/nodetype.component.html","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/generaldata/generaldata.component.html","webpack:///./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.component.html","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptype.component.html","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/generaldata/generaldata.component.html","webpack:///./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshiptypedetails.component.html","webpack:///./src/app/shared/datamodels/levelgraph/levelgraphnode.ts","webpack:///./src/app/shared/datamodels/levelgraph/levelgraphrelation.ts","webpack:///./src/app/shared/datamodels/metrics/expectedproperty.ts","webpack:///./src/app/shared/datamodels/metrics/providedproperty.ts","webpack:///./src/app/shared/datamodels/topology/nodetemplate.ts","webpack:///./src/app/shared/datamodels/topology/relationshiptemplate.ts","webpack:///./src/app/shared/datamodels/types/nodetype.ts","webpack:///./src/app/shared/datamodels/types/relationshiptype.ts","webpack:///./src/app/shared/dataservices/levelgraph/level.service.ts","webpack:///./src/app/shared/dataservices/levelgraph/levelgraphnode.service.ts"],"names":[],"mappings":"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C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"main.bundle.js","sourcesContent":["import { Logger } from '../../../../logger/logger';\nimport { ExpectedProperty } from '../../datamodels/metrics/expectedproperty';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - ExpectedPropertyService  - Implements the calls to the rest interface of the application server and\n *                                       handle the request construction and response extraction for ExpectedProperty data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class ExpectedPropertyService {\n\n  // URL of the REST Interface End-Point\n  private expectedPropertyUrl = '/api/expectedproperties';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getExpectedProperties - Send GET all ExpectedProperties REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getExpectedProperties(): Observable<ExpectedProperty[]> {\n    Logger.info('[REQUEST - ExpectedProperty] Send GET ExpectedProperties Request', ExpectedPropertyService.name);\n    return this.http.get(this.expectedPropertyUrl).map(this.extractExpectedProperties).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getExpectedProperty - Send GET ExpectedProperty REQUEST\n   *\n   * @param - id: number - ID of the ExpectedProperty which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getExpectedProperty(id: number): Observable<ExpectedProperty> {\n    Logger.info('[REQUEST - ExpectedProperty] Send GET ExpectedProperty Request with ID:' + id, ExpectedPropertyService.name);\n    return this.http.get(this.expectedPropertyUrl + '/' + id).map(this.extractExpectedProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createExpectedProperty - Send POST ExpectedProperty REQUEST\n   *\n   * @param - expectedProperty: ExpectedProperty - ExpectedProperty which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createExpectedProperty(expectedProperty: ExpectedProperty): Observable<ExpectedProperty> {\n    Logger.info('[REQUEST - ExpectedProperty] Send POST ExpectedProperty Request', ExpectedPropertyService.name);\n    Logger.data('[REQUEST - ExpectedProperty]' + JSON.stringify(expectedProperty), ExpectedPropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.expectedPropertyUrl, expectedProperty, options).map(this.extractExpectedProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateExpectedProperty - Send PUT ExpectedProperty REQUEST\n   *\n   * @param - expectedProperty: ExpectedProperty - ExpectedProperty which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateExpectedProperty(expectedProperty: ExpectedProperty): Observable<ExpectedProperty> {\n    Logger.info('[REQUEST - ExpectedProperty] Send PUT Request ExpectedProperty', ExpectedPropertyService.name);\n    Logger.data('[REQUEST - ExpectedProperty] ' + JSON.stringify(expectedProperty), ExpectedPropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.expectedPropertyUrl + '/' + expectedProperty.id, expectedProperty, options).map(this.extractExpectedProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteExpectedProperty - Send DELETE ExpectedProperty REQUEST\n   *\n   * @param - id: number - ID of the ExpectedProperty which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteExpectedProperty(id: number): Observable<ExpectedProperty> {\n    Logger.info('[REQUEST - ExpectedProperty] Send DELETE ExpectedProperty Request with ID: ' + id, ExpectedPropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.expectedPropertyUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractExpectedPropertyDataList - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractExpectedProperties(res: Response) {\n    let body = res.json();\n    let expectedPropertyList: ExpectedProperty[] = [];\n    Logger.info('[RESPONSE - ExpectedProperty]: Extract Data of Response Body', ExpectedPropertyService.name);\n    Logger.data('[RESPONSE - ExpectedProperty]: ' + JSON.stringify(body), ExpectedPropertyService.name);\n    for (let expectedProperty of body) {\n      let tempExpectedProperty: ExpectedProperty = new ExpectedProperty(expectedProperty.name, expectedProperty.value);\n      tempExpectedProperty = expectedProperty;\n      expectedPropertyList.push(tempExpectedProperty);\n    }\n    return expectedPropertyList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractExpectedPropertyData - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractExpectedProperty(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - ExpectedProperty]: Extract Data of Response Body', ExpectedPropertyService.name);\n    Logger.data('[RESPONSE - ExpectedProperty]: ' + JSON.stringify(body), ExpectedPropertyService.name);\n    let expectedProperty: ExpectedProperty = new ExpectedProperty(body.name, body.value);\n    expectedProperty = body;\n    return expectedProperty || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/metrics/expectedproperty.service.ts","\nimport { Logger } from '../../../../logger/logger';\nimport { ProvidedProperty } from '../../datamodels/metrics/providedproperty';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service ProvidedPropertyService - Implements the calls to the rest interface of the application server and\n *                                    handle the request construction and response extraction for ProvidedProperty data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class ProvidedPropertyService {\n\n  // URL of the REST Interface End-Point\n  private providedPropertyUrl = '/api/providedproperties';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getProvidedProperties - Send GET all ProvidedProperties REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getProvidedProperties(): Observable<ProvidedProperty[]> {\n    Logger.info('[REQUEST - ProvidedProperty] Send GET ProvidedProperties Request', ProvidedPropertyService.name);\n    return this.http.get(this.providedPropertyUrl).map(this.extractProvidedProperties).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getProvidedProperty - Send GET ProvidedProperty REQUEST\n   *\n   * @param - id: number - ID of the ProvidedProperty which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getProvidedProperty(id: number): Observable<ProvidedProperty> {\n    Logger.info('[REQUEST - ProvidedProperty] Send GET ProvidedProperty Request with ID:' + id, ProvidedPropertyService.name);\n    return this.http.get(this.providedPropertyUrl + '/' + id).map(this.extractProvidedProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createProvidedProperty - Send POST ProvidedProperty REQUEST\n   *\n   * @param - providedProperty: ProvidedProperty - ProvidedProperty which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createProvidedProperty(providedProperty: ProvidedProperty): Observable<ProvidedProperty> {\n    Logger.info('[REQUEST - ProvidedProperty] Send POST ProvidedProperty Request', ProvidedPropertyService.name);\n    Logger.data('[REQUEST - ProvidedProperty]' + JSON.stringify(providedProperty), ProvidedPropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.providedPropertyUrl, providedProperty, options).map(this.extractProvidedProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateProvidedProperty - Send PUT ProvidedProperty REQUEST\n   *\n   * @param - providedProperty: ProvidedProperty - ProvidedProperty which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateProvidedProperty(providedProperty: ProvidedProperty): Observable<ProvidedProperty> {\n    Logger.info('[REQUEST - ProvidedProperty] Send PUT Request ProvidedProperty', ProvidedPropertyService.name);\n    Logger.data('[REQUEST - ProvidedProperty] ' + JSON.stringify(providedProperty), ProvidedPropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.providedPropertyUrl + '/' + providedProperty.id, providedProperty, options).map(this.extractProvidedProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteProvidedProperty - Send DELETE ProvidedProperty REQUEST\n   *\n   * @param - id: number - ID of the ProvidedProperty which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteProvidedProperty(id: number): Observable<ProvidedProperty> {\n    Logger.info('[REQUEST - ProvidedProperty] Send DELETE ProvidedProperty Request with ID: ' + id, ProvidedPropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.providedPropertyUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractProvidedProperties -  Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractProvidedProperties(res: Response) {\n    let body = res.json();\n    let propertyList: ProvidedProperty[] = [];\n    Logger.info('[RESPONSE - ProvidedProperty]: Extract Data of Response Body', ProvidedPropertyService.name);\n    Logger.data('[RESPONSE - ProvidedProperty]: ' + JSON.stringify(body), ProvidedPropertyService.name);\n    for (let providedProperty of body) {\n      let tempProvidedProperty: ProvidedProperty = new ProvidedProperty(providedProperty.name, providedProperty.value);\n      tempProvidedProperty = providedProperty;\n      propertyList.push(tempProvidedProperty);\n    }\n    return propertyList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractProvidedProperty - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractProvidedProperty(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - ProvidedProperty]: Extract Data of Response Body', ProvidedPropertyService.name);\n    Logger.data('[RESPONSE - PROPERTY]: ' + JSON.stringify(body), ProvidedPropertyService.name);\n    let providedProperty: ProvidedProperty = new ProvidedProperty(body.name, body.value);\n    providedProperty = body;\n    return providedProperty || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/metrics/providedpropertyservice.service.ts","import { Constants } from '../../constants/constants';\r\nimport { LevelGraph } from './levelgraph';\r\n\r\n/*******************************************************************************************************************************************************************************************************\r\n *\r\n * @class - Level - Level for the Level Graph Model for display the levels in the LevelGraphModellerComponent\r\n *\r\n * @field - id: number - ID of the level\r\n * @field - depth: number - Depth of the level in the LevelGraph\r\n * @field - visible: boolean - Indicates if a level should be displayed or not in the LevelGraphModellerComponent\r\n * @field - y: number - Y-Position of the level layer in the LevelGraphModellerComponent\r\n * @field - height: number - Height of the level layer in the LevelGraphModellerComponent\r\n * @field - levelGraph: LevelGraph height: number - Corresponding LevelGraph for the Level\r\n * @field - levelGraphId: number - ID of the corresponding LevelGraph\r\n *\r\n * //hint: You may decide to decouple level data from data which is only be used for display reasons in the LevelGraphModellerComponent\r\n * //hint: You may decide to add list for the nodes and relations which are in a level for faster access\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n ******************************************************************************************************************************************************************************************************/\r\nexport class Level {\r\n\r\n  id: number;\r\n  depth: number;\r\n  visible: boolean;\r\n  y: number;\r\n  height: number;\r\n  levelGraph: LevelGraph;\r\n  levelGraphId: number;\r\n\r\n  constructor(depth: number, y: number, levelGraphId: number) {\r\n    this.depth = depth;\r\n    this.y = y;\r\n    this.height = Constants.LEVELHEIGHT;\r\n    this.visible = true;\r\n    this.levelGraphId = levelGraphId;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/levelgraph/level.ts","/*******************************************************************************************************************************************************************************************************\n *\n * @class - Property - Properties are name value pairs\n *\n * @field - id: number - Id of the Property\n * @field - name: string - Name of the Property\n * @field - value: string - Value of the Property\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class Property {\n\n  id: number = null;\n  name = 'Unnamed';\n  value = 'Undefined';\n\n  constructor(name: string, value: string) {\n    this.name = name;\n    this.value = value;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/metrics/property.ts","import { Logger } from '../../../../logger/logger';\nimport { LevelGraphRelation } from '../../datamodels/levelgraph/levelgraphrelation';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - LevelGraphRelationService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for LevelGraphRelations\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class LevelGraphRelationService {\n\n  // URL of the REST Interface End-Point\n  private levelGraphRelationUrl = '/api/levelgraphrelations';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevelGraphRelations - Send GET all Level Graph Relations REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevelGraphRelations(): Observable<LevelGraphRelation[]> {\n    Logger.info('[REQUEST - LEVELGRAPHRELATION]: Send GET Level Graph Relation Request', LevelGraphRelationService.name);\n    return this.http.get(this.levelGraphRelationUrl).map(this.extractLevelGraphRelations).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevelGraphRelation - Send GET Level Graph Relations REQUEST\n   *\n   * @param - id: number - ID of the LevelGraphRelation which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevelGraphRelation(id: number): Observable<LevelGraphRelation> {\n    Logger.info('[REQUEST - LEVELGRAPHRELATION]: Send GET Level Graph Relations Request with ID: ' + id, LevelGraphRelationService.name);\n    return this.http.get(this.levelGraphRelationUrl + '/' + id).map(this.extractLevelGraphRelation).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createLevelGraphRelation - Send POST Level Graph Relations REQUEST\n   *\n   * @param - levelGraphRelation: LevelGraphRelation - LevelGraphRelation which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createLevelGraphRelation(levelGraphRelation: LevelGraphRelation): Observable<LevelGraphRelation> {\n    Logger.info('[REQUEST - LEVELGRAPHRELATION]: Send POST Level Graph Relation Request', LevelGraphRelationService.name);\n    Logger.data('[REQUEST - LEVELGRAPHRELATION]: ' + JSON.stringify(levelGraphRelation), LevelGraphRelationService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.levelGraphRelationUrl, levelGraphRelation, options).map(this.extractLevelGraphRelation).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateLevelGraphRelation- Send PUT Level Graph Relations REQUEST\n   *\n   * @param - levelGraphRelation: LevelGraphRelation - LevelGraphRelation which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateLevelGraphRelation(levelGraphRelation: LevelGraphRelation): Observable<LevelGraphRelation> {\n    Logger.info('[REQUEST - LEVELGRAPHRELATION]: Send PUT Level Graph Relation Request', LevelGraphRelationService.name);\n    Logger.data('[REQUEST - LEVELGRAPHRELATION]: ' + JSON.stringify(levelGraphRelation), LevelGraphRelationService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.levelGraphRelationUrl + '/' + levelGraphRelation.id, levelGraphRelation, options).map(this.extractLevelGraphRelation).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteLevelGraphRelation - Send DELETE Level Graph Relations REQUEST\n   *\n   * @param - id: number - ID of the LevelGraphRelation which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteLevelGraphRelation(id: number): Observable<LevelGraphRelation> {\n    Logger.info('[REQUEST - LEVELGRAPHRELATION]: Send DELETE Level Graph Relation Request', LevelGraphRelationService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.levelGraphRelationUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevelGraphRelations - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractLevelGraphRelations(res: Response) {\n    let body = res.json();\n    let levelGraphRelationList: LevelGraphRelation[] = [];\n    Logger.info('Extract Level Graph Relation Data List', LevelGraphRelationService.name);\n    Logger.info('[RESPONSE - LEVELGRAPHRELATION]: ' + JSON.stringify(body), LevelGraphRelationService.name);\n    for (let levelGraphRelation of body) {\n      let tempLevelGraphRelation: LevelGraphRelation = new LevelGraphRelation(levelGraphRelation.sourceLevelDepth, levelGraphRelation.targetLevelDepth, levelGraphRelation.sourceNodeId, levelGraphRelation.targetNodeId, levelGraphRelation.levelGraphId, levelGraphRelation.path, levelGraphRelation.levelGraphRelationType);\n      tempLevelGraphRelation = levelGraphRelation;\n      levelGraphRelationList.push(levelGraphRelation);\n    }\n    return levelGraphRelationList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevelGraphRelation - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractLevelGraphRelation(res: Response) {\n    let body = res.json();\n    Logger.info('Extract Level Graph Relation Data', LevelGraphRelationService.name);\n    Logger.info('[RESPONSE - LEVELGRAPHRELATION]: ' + JSON.stringify(body), LevelGraphRelationService.name);\n    let levelGraphRelation: LevelGraphRelation = new LevelGraphRelation(body.sourceLevelDepth, body.targetLevelDepth, body.sourceNodeId, body.targetNodeId, body.levelGraphId, body.path, body.levelGraphRelationType);\n    levelGraphRelation = body;\n    return levelGraphRelation || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError- Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/levelgraph/levelgraphrelation.service.ts","import { Logger } from '../../../../logger/logger';\nimport { NodeTemplate } from '../../datamodels/topology/nodetemplate';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - NodeTemplateService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for NodeTemplates\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class NodeTemplateService {\n\n  // URL of the REST Interface End-Point\n  private nodetemplateUrl = '/api/nodetemplates';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getNodeTemplates - Send GET all NodeTemplates REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getNodeTemplates(): Observable<NodeTemplate[]> {\n    Logger.info('[REQUEST - NODETEMPLATE] Send GET Node Templates Request', NodeTemplateService.name);\n    return this.http.get(this.nodetemplateUrl).map(this.extractNodeTemplates).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getNodeTemplate - Send GET NodeTemplate REQUEST\n   *\n   * @param - id: number - ID of the NodeTemplate which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getNodeTemplate(id: number): Observable<NodeTemplate> {\n    Logger.info('[REQUEST - NODETEMPLATE]: Send GET Node Topology Request with ID: ' + id, NodeTemplateService.name);\n    return this.http.get(this.nodetemplateUrl + '/' + id).map(this.extractNodeTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createNodeTemplate - Send POST NodeTemplates REQUEST\n   *\n   * @param - nodeTemplate: NodeTemplate - NodeTemplate which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createNodeTemplate(nodeTemplate: NodeTemplate): Observable<NodeTemplate> {\n    Logger.info('[REQUEST - NODETEMPLATE] Send POST Node Template Request', NodeTemplateService.name);\n    Logger.data('[REQUEST - NODETEMPLATE]' + JSON.stringify(nodeTemplate), NodeTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.nodetemplateUrl, nodeTemplate, options).map(this.extractNodeTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateNodeTemplate - Send PUT NodeTemplate REQUEST\n   *\n   * @param - nodeTemplate: NodeTemplate - NodeTemplate which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateNodeTemplate(nodeTemplate: NodeTemplate): Observable<NodeTemplate> {\n    Logger.info('[REQUEST - NODETEMPLATE] Send PUT Node Template Request', NodeTemplateService.name);\n    Logger.data('[REQUEST - NODETEMPLATE] ' + JSON.stringify(nodeTemplate), NodeTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.nodetemplateUrl + '/' + nodeTemplate.id, nodeTemplate, options).map(this.extractNodeTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteNodeTemplate - Send DELETE NodeTemplate REQUEST\n   *\n   * @param - id: number - ID of the Level which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteNodeTemplate(id: number): Observable<NodeTemplate> {\n    Logger.info('[REQUEST - NODETEMPLATE] Send DELETE NodeTemplate Request with ID: ' + id, NodeTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.nodetemplateUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractNodeTemplates - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractNodeTemplates(res: Response) {\n    let body = res.json();\n    let nodeTemplateList: NodeTemplate[] = [];\n    Logger.info('[RESPONSE - NODETEMPLATE]: Extract Data of Response Body', NodeTemplateService.name);\n    Logger.data('[RESPONSE - NODETEMPLATE]: ' + JSON.stringify(body), NodeTemplateService.name);\n    for (let nodeTemplate of body) {\n      let tempNodeTemplate: NodeTemplate = new NodeTemplate();\n      tempNodeTemplate = nodeTemplate;\n      nodeTemplateList.push(tempNodeTemplate);\n    }\n    return nodeTemplateList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractNodeTemplate - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractNodeTemplate(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - NODETEMPLATE]: Extract Data of Response Body', NodeTemplateService.name);\n    Logger.data('[RESPONSE - NODETEMPLATE]: ' + JSON.stringify(body), NodeTemplateService.name);\n    let nodeTemplate: NodeTemplate = new NodeTemplate();\n    nodeTemplate = body;\n    return nodeTemplate || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - Error Handling\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/topologytemplate/nodetemplate.service.ts","import { Logger } from '../../../../logger/logger';\nimport { RelationshipTemplate } from '../../datamodels/topology/relationshiptemplate';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - RelationshipTemplateService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for Relationship Templates\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class RelationshipTemplateService {\n\n  // URL of the REST Interface End-Point\n  private relationshipTempalteUrl = '/api/relationshiptemplates';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getRelationshipTemplates - Send GET all RelationshipTemplate REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getRelationshipTemplates(): Observable<RelationshipTemplate[]> {\n    Logger.info('[REQUEST - RELATIONSHIPTEMPLATE] Send GET Relationship Templates Request', RelationshipTemplateService.name);\n    return this.http.get(this.relationshipTempalteUrl).map(this.extractRelationshipTemplateDataList).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getRelationshipTemplate - Send GET RelationshipTemplate REQUEST\n   *\n   * @param - id: number - ID of the RelationshipTemplate which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getRelationshipTemplate(id: number): Observable<RelationshipTemplate> {\n    Logger.info('[REQUEST - RELATIONSHIPTEMPLATE]: Send GET Relationship Template Request with ID: ' + id, RelationshipTemplateService.name);\n    return this.http.get(this.relationshipTempalteUrl + '/' + id).map(this.extractRelationshipTemplateData).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createRelationshipTemplate - Send POST RelationshipTemplate REQUEST\n   *\n   * @param - relationshipTemplate: RelationshipTemplate - RelationshipTemplate which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createRelationshipTemplate(relationshipTemplate: RelationshipTemplate): Observable<RelationshipTemplate> {\n    Logger.info('[REQUEST - RELATIONSHIPTEMPLATE] Send POST Relationship Templates Request', RelationshipTemplateService.name);\n    Logger.data('[REQUEST - RELATIONSHIPTEMPLATE]' + JSON.stringify(relationshipTemplate), RelationshipTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.relationshipTempalteUrl, relationshipTemplate, options).map(this.extractRelationshipTemplateData).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateRelationshipTemplate - Send PUT RelationshipTemplate REQUEST\n   *\n   * @param - relationshipTemplate: RelationshipTemplate - RelationshipTemplate which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateRelationshipTemplate(relationshipTemplate: RelationshipTemplate): Observable<RelationshipTemplate> {\n    Logger.info('[REQUEST - RELATIONSHIPTEMPLATE] Send PUT Request Relationship Template', RelationshipTemplateService.name);\n    Logger.data('[REQUEST - RELATIONSHIPTEMPLATE] ' + JSON.stringify(relationshipTemplate), RelationshipTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.relationshipTempalteUrl + '/' + relationshipTemplate.id, relationshipTemplate, options).map(this.extractRelationshipTemplateData).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteRelationshipTemplate - Send DELETE RelationshipTemplate REQUEST\n   *\n   * @param - id: number - ID of the RelationshipTemplate which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteRelationshipTemplate(id: number): Observable<RelationshipTemplate> {\n    Logger.info('[REQUEST - RELATIONSHIPTEMPLATE] Send DELETE Relationship Templates Request with ID: ' + id, RelationshipTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.relationshipTempalteUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractRelationshipTemplateDataList - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractRelationshipTemplateDataList(res: Response) {\n    let body = res.json();\n    let relationshipTemplateList: RelationshipTemplate[] = [];\n    Logger.info('[RESPONSE - RELATIONSHIPTEMPLATE]: Extract Data of Response Body', RelationshipTemplateService.name);\n    Logger.data('[RESPONSE - RELATIONSHIPTEMPLATE]: ' + JSON.stringify(body), RelationshipTemplateService.name);\n    for (let relationshipTemplate of body) {\n      let tempRelationshipTemplate: RelationshipTemplate = new RelationshipTemplate(relationshipTemplate.sourceNodeId, relationshipTemplate.targetNodeId, relationshipTemplate.path, relationshipTemplate.relationshipTypeId, relationshipTemplate.topologyTemplateId);\n      tempRelationshipTemplate = relationshipTemplate;\n      relationshipTemplateList.push(tempRelationshipTemplate);\n    }\n    return relationshipTemplateList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractRelationshipTemplateData - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractRelationshipTemplateData(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - RELATIONSHIPTEMPLATE]: Extract Data of Response Body', RelationshipTemplateService.name);\n    Logger.data('[RESPONSE - RELATIONSHIPTEMPLATE]: ' + JSON.stringify(body), RelationshipTemplateService.name);\n    let relationshipTemplate: RelationshipTemplate = new RelationshipTemplate(body.sourceNodeId, body.targetNodeId, body.path, body.relationshipTypeId, body.topologyTemplateId);\n    relationshipTemplate = body;\n    return relationshipTemplate || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/topologytemplate/relationshiptemplate.service.ts","\nimport { Logger } from '../../../../../logger/logger';\nimport { LevelGraph } from '../../../datamodels/levelgraph/levelgraph';\nimport { LevelGraphService } from '../../../dataservices/levelgraph/levelgraph.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-levelgrahdetails',\n  templateUrl: './levelgrahdetails.component.html',\n  styleUrls: ['./levelgrahdetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphDetailsComponent - Lazy loaded component as wrapper for all other components in the LevelGraphDetailsComponent\n *\n * @field - currentLevelGraph: LevelGraph - LevelGraph which is currently displayed\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may\n *                                     cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphDetailsComponent implements OnInit {\n\n  currentLevelGraph: LevelGraph = new LevelGraph();\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private levelGraphService: LevelGraphService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method ngOnInit is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphDetailsComponent', LevelGraphDetailsComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentLevelGraph.id = params['id'] || null;\n    });\n\n    this.retrieveLevelGraph(this.currentLevelGraph.id);\n\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraph - Call the LevelGraphService for loading repository from database into the application and subscribe for a callback.\n   *\n   * @param - id: number - ID of the LevelGraph which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveLevelGraph(id: number) {\n    Logger.info('Retrieve LevelGraph Data', LevelGraphDetailsComponent.name);\n    this.levelGraphService.getLevelGraph(id)\n      .subscribe(levelGraphResponse => {\n        this.currentLevelGraph = levelGraphResponse;\n        Logger.info('LevelGraph sucessfully retrieved.', LevelGraphDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraph/levelgrahdetails/levelgrahdetails.component.ts","import { Logger } from '../../../../../logger/logger';\nimport { LevelGraphRelation } from '../../../datamodels/levelgraph/levelgraphrelation';\nimport { LevelGraphRelationService } from '../../../dataservices/levelgraph/levelgraphrelation.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-levelgraphrelationdetails',\n  templateUrl: './levelgraphrelationdetails.component.html',\n  styleUrls: ['./levelgraphrelationdetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphRelationDetailsComponent - Lazy loaded component as wrapper for all other components in the LevelGraphRelationDetailsComponent\n *\n * @field - currentLevelGraphRelation: LevelGraphRelation - LevelGraphRelation which is currently displayed\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphRelationDetailsComponent implements OnInit {\n\n  currentLevelGraphRelation: LevelGraphRelation = new LevelGraphRelation(null, null, null, null, null, null, null);\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private levelGraphRelationService: LevelGraphRelationService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphRelationDetailsComponent', LevelGraphRelationDetailsComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentLevelGraphRelation.id = params['id'] || null;\n    });\n\n    this.retrieveLevelGraphRelation(this.currentLevelGraphRelation.id);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraphRelation - Call the LevelGraphRelationService for loading LevelGraphNode from database into the application and subscribe for a callback.\n   *\n   * @param - id: number - ID of the LevelGraphRelation which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveLevelGraphRelation(id: number) {\n    Logger.info('Retrieve LevelGraphRelation Data', LevelGraphRelationDetailsComponent.name);\n    this.levelGraphRelationService.getLevelGraphRelation(id)\n      .subscribe(levelGraphRelationResponse => {\n        this.currentLevelGraphRelation = levelGraphRelationResponse;\n        Logger.info('LevelGraphRelation sucessfully retrieved.', LevelGraphRelationDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n/*********************************************************************************************************************************************************************************************************\n *\n * @component - AppComponent - Lazy loaded component AppComponent\n *\n * @author - Arthur Kaul\n *\n ********************************************************************************************************************************************************************************************************/\nexport class AppComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Logger} from '../../../logger/logger';\nimport {LevelGraph} from '../../shared/datamodels/levelgraph/levelgraph';\nimport {ExpectedProperty} from '../../shared/datamodels/metrics/expectedproperty';\nimport {Property} from '../../shared/datamodels/metrics/property';\nimport {ProvidedProperty} from '../../shared/datamodels/metrics/providedproperty';\nimport {Repository} from '../../shared/datamodels/repository/repository';\nimport {TopologyTemplate} from '../../shared/datamodels/topology/topologytemplate';\nimport {NodeType} from '../../shared/datamodels/types/nodetype';\nimport {RelationshipType} from '../../shared/datamodels/types/relationshiptype';\nimport {ExportXmlService} from '../../shared/dataservices/exportxml.service';\nimport {LevelGraphService} from '../../shared/dataservices/levelgraph/levelgraph.service';\nimport {RepositoryService} from '../../shared/dataservices/repository/repository.service';\nimport {TopologyTemplateService} from '../../shared/dataservices/topologytemplate/topologytemplate.service';\nimport {NodeTypeService} from '../../shared/dataservices/types/nodetype.service';\nimport {Component, OnInit} from '@angular/core';\nimport {FileUploader} from 'ng2-file-upload';\nimport * as FileSaver from 'file-saver';\n\n// URL for XML Import\nconst URL_IMPORT = '/api/import/definition';\n\n// URL for XML Export\nconst URL_EXPORT = '/definition';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n/*****************************************************************************************************************************\n *\n * @component - AdministrationComponent - Lazy loaded component as wrapper for all other components in the AdministrationComponent\n *\n * @author - Arthur Kaul\n *\n ****************************************************************************************************************************/\nexport class AdministrationComponent implements OnInit {\r\n\n  public uploader: FileUploader = new FileUploader({});\n\n  topologyTemplates: TopologyTemplate[] = [];\n  levelGraphs: LevelGraph[] = [];\n  repositories: Repository[] = [];\n\n  constructor(private repositoryService: RepositoryService,\n    private topologyTemplateService: TopologyTemplateService,\n    private levelGraphService: LevelGraphService,\n    private nodeTypeService: NodeTypeService,\n    private xmlExportSerivce: ExportXmlService) {};\n\n  ngOnInit() {\n    this.retrieveTopologyTemplates();\n    this.retrieveRepositories();\n    this.retrieveLevelGraphs();\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   *  @method - retrieveTopologyTemplates - Call the TopologyTemplateService for loading all TopologyTemplates from database into the application\n   *                                        and subscribe for a callback. Currently no pagination/streaming of data is supported\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveTopologyTemplates() {\n    Logger.info('Retrieve TopologyTemplate Data', AdministrationComponent.name);\n    this.topologyTemplateService.getTopologyTemplates()\n      .subscribe(topologyTemplateResponse => {\n        this.topologyTemplates = topologyTemplateResponse;\n        Logger.info('Topology Template sucessfully retrieved.', AdministrationComponent.name);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraphs - Call the LevelGraphService for loading all LevelGraphs from database into the application and subscribe\n   *                                 for a callback. Currently no pagination/streaming of data is supported\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveLevelGraphs() {\n    Logger.info('Retrieve LevelGraph Data', AdministrationComponent.name);\n    this.levelGraphService.getLevelGraphs()\n      .subscribe(levelGraphsResponse => {\n        this.levelGraphs = levelGraphsResponse;\n        Logger.info('Level Graphs sucessfully retrieved.', AdministrationComponent.name);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveRepositories - Call the RepositoryService for loading all repositories from database into the application and subscribe\n   *                                  for a callback. Currently no pagination/streaming of data is supported\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveRepositories() {\n    Logger.info('Retrieve Repository Data', AdministrationComponent.name);\n    this.repositoryService.getRepositories()\n      .subscribe(repositoriesResponse => {\n        this.repositories = repositoriesResponse;\n        Logger.info('Repositories sucessfully retrieved.', AdministrationComponent.name);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - importXml - Call the ImportService for upload a XML file to the server component and import the data of the XML file\n   *\n   *******************************************************************************************************************************************************************************************************/\n  importDefinition() {\n    this.uploader.setOptions({url: URL_IMPORT});\n    this.uploader.uploadAll();\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\n      response = JSON.parse(response);\n      for (let levelGraph of response.levelGraphs) {\n        this.levelGraphService.updateLevelGraph(levelGraph)\n          .subscribe(levelGraphResponse => {\n             this.levelGraphs.push(levelGraphResponse);\n          },\n          (error) => {\n            \n          });\n      }\n\n      for (let topologyTemplates of response.topologyTemplates) {\n        this.topologyTemplateService.updateTopologyTemplate(topologyTemplates)\n          .subscribe(topologyTemplateResponse => {\n             this.topologyTemplates.push(topologyTemplateResponse);\n          },\n          (error) => {\n        \n          });\n      }\n\n      this.repositories.push(response.repositories);\n\n    };\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - exportLevelGraph - Call the ExportService for retrieve a repository in XML data structure and export the data of the body as XML file to Client/Bowser\n   *\n   * @param - levelGraph: LevelGraph - LevelGraph which should be exported from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  exportDefinition() {\n    this.xmlExportSerivce.getXmlFile(URL_EXPORT).subscribe(\n      res => {\n        FileSaver.saveAs(res, 'ArchRefDefinition.xml');\n      },\n      (error) => {\n      \n      });\n  }\r\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/administration/administration.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-cmp',\n  templateUrl: 'dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\n/*****************************************************************************************************************************\n *\n * @component - DashboardComponent - Lazy loaded component as wrapper for all other application components and for displaying the start\n *                                   page of the application\n *\n * @author - Arthur Kaul\n *\n ****************************************************************************************************************************/\nexport class DashboardComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import {Logger} from '../../../../logger/logger';\nimport {Constants} from '../../../shared/constants/constants';\nimport {LevelGraphNodeType} from '../../../shared/constants/levelgraphnodetype';\nimport {LevelGraphRelationType} from '../../../shared/constants/levelgraphrelationtype';\nimport {Entity} from '../../../shared/datamodels/entity/entity';\nimport {Level} from '../../../shared/datamodels/levelgraph/level';\nimport {LevelGraph} from '../../../shared/datamodels/levelgraph/levelgraph';\nimport {LevelGraphNode} from '../../../shared/datamodels/levelgraph/levelgraphnode';\nimport {LevelGraphRelation} from '../../../shared/datamodels/levelgraph/levelgraphrelation';\nimport {ExpectedProperty} from '../../../shared/datamodels/metrics/expectedproperty';\nimport {ProvidedProperty} from '../../../shared/datamodels/metrics/providedproperty';\nimport {Path} from '../../../shared/datamodels/utility/path';\nimport {Point} from '../../../shared/datamodels/utility/point';\nimport {Repository} from '../../../shared/datamodels/repository/repository';\nimport {RepositoryService} from '../../../shared/dataservices/repository/repository.service';\nimport {LevelService} from '../../../shared/dataservices/levelgraph/level.service';\nimport {LevelGraphService} from '../../../shared/dataservices/levelgraph/levelgraph.service';\nimport {LevelGraphNodeService} from '../../../shared/dataservices/levelgraph/levelgraphnode.service';\nimport {LevelGraphRelationService} from '../../../shared/dataservices/levelgraph/levelgraphrelation.service';\nimport {ExpectedPropertyService} from '../../../shared/dataservices/metrics/expectedproperty.service';\nimport {ProvidedPropertyService} from '../../../shared/dataservices/metrics/providedpropertyservice.service';\nimport {Utility} from '../../../utility';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-levelgraphmodeller',\n  templateUrl: './levelgraphmodeller.component.html',\n  styleUrls: ['./levelgraphmodeller.component.css']\n})\n\n/*********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphModellerComponent for model a LevelGraph for the refinement of topologies\n *\n * @field - currentDragData: any - Container for storing the data which are moved from the tool box to the draw area and should be created\n * @field - typeCurrentDragData: string - Type of the current drag data\n *\n * @field - repositories: Repository[] - All available repositories in the database\n * @field - selectedRepository: Repository - Currently selected repository\n *\n * @field - entity: Entity - Current selected Entity for add new expected or provided properties\n * @field - createdProvidedProperty: ProvidedProperty - Provided property which should be added\n * @field - createdExpectedProperty: ExpectedProperty - Expected property which should be added\n *\n * @field - currentLevelGraph: LevelGraph - Current LevelGraph which is displayed in the LevelGraphModeller\n * @field - currentLevelGraphNode: LevelGraphNode - Current LevelGraphNode which should be created or moved in the level\n * @field - currentLevelGraphRelation: LevelGraphRelation - Current LevelGraphRelation which should be drawn and created\n *\n * @field - lastMousePositionY: number - Last known x position of the mouse. Needed to calculate the delta of a mouse move event\n * @field - lastMousePositionX: number - Last known y position of the mouse. Needed to calculate the delta of a mouse move event\n *\n * @field - drag: boolean - True if drag and drop event is enabled else false\n * @field - drawRelation: boolean - True if you currently draw a relation else false\n *\n * @field - moveNode: boolean - True if you currently move a node around in the level area\n * @field - changeLevelHeight: boolean - True if you currently change the height of the level area\n *\n * @field - toolList: [] -  The Relation Types of a levelGraph currently implemented as fixed array but you may decide to transform\n *                          this types into class if the have specific attributes which are different from each other\n * @field - levelGraphRelationTypes: [] -The Relation Types of a levelGraph currently implemented as constants Types but you may decide\n *                                       to transform this types into class if the have specific attributes which are different from each other\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may\n *                                       cause a \"Over-Flashing\" for the user experience\n *\n ********************************************************************************************************************************************************************************************************/\nexport class LevelGraphModellerComponent implements OnInit {\n\n  currentDragData: any;\n  typeCurrentDragData: string;\n\n  repositories: Repository[] = [];\n  selectedRepository: Repository = new Repository();\n\n  entity: Entity = new Entity();\n  createdProvidedProperty = new ProvidedProperty('Unnamed', 'Undefined');\n  createdExpectedProperty = new ExpectedProperty('Unnamed', 'Undefined');\n\n  currentLevelGraph: LevelGraph = new LevelGraph();\n  currentLevelGraphNode: LevelGraphNode = new LevelGraphNode();\n  currentLevelGraphRelation: LevelGraphRelation = new LevelGraphRelation(null, null, null, null, null, null, null);\n\n  lastMousePositionY = 0;\n  lastMousePositionX = 0;\n\n  drag = false;\n  drawRelation = false;\n  moveNode = false;\n  changeLevelHeight = false;\n\n  exitPoint: boolean;\n  entryPoint: boolean;\n\n  toolList = [\n    {name: 'Move Node', checked: true},\n    {name: 'ConnectOverTo', checked: false},\n    {name: 'RefineTo', checked: false}\n  ];\n\n  levelGraphRelationTypes = [\n    {name: 'ConnectOverTo', checked: true},\n    {name: 'RefineTo', checked: true},\n  ];\n\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private levelGraphService: LevelGraphService,\n    private repositoryService: RepositoryService,\n    private levelGraphNodeService: LevelGraphNodeService,\n    private levelService: LevelService,\n    private levelGraphRelationService: LevelGraphRelationService,\n    private providedPropertyService: ProvidedPropertyService,\n    private expectedPropertySerivce: ExpectedPropertyService) {\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   ******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Initialize LevelGraphModellerComponent', LevelGraphModellerComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentLevelGraph.id = params['id'] || '';\n    });\n\n//    this.flashMessage.timeoutInMS = Constants.FLASHMESSAGETIMEOUT;\n    this.selectedRepository.name = 'Select Repository';\n    this.retrieveLevelGraph(this.currentLevelGraph.id);\n    this.retrieveRepositories();\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Retrieve Methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveRepositories -Call the RepositoryService for loading all repositories from database into the application and subscribe\n   *                                 for a callback. Currently no pagination/streaming of data is supported\n   *\n   ******************************************************************************************************************************************************************************************************/\n  retrieveRepositories() {\n    Logger.info('Retrieve Repositories Data', LevelGraphModellerComponent.name);\n    this.repositoryService.getRepositories()\n      .subscribe(repositoriesResponse => {\n        this.repositories = repositoriesResponse;\n        Logger.info('Repositories sucessfully retrieved.', LevelGraphModellerComponent.name);\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraph - Call the LevelGraphService for loading repository from database into the application and subscribe\n   *                                 for a callback.\n   *\n   * @param id: number - ID of the level graph which should be retrieved from the database\n   *\n   ******************************************************************************************************************************************************************************************************/\n  retrieveLevelGraph(id: number) {\n    this.levelGraphService.getLevelGraph(id)\n      .subscribe(levelGraphResponse => {\n        this.currentLevelGraph = levelGraphResponse;\n        Logger.info('Level Graph with id: ' + levelGraphResponse.id + ' was retrieved sucessfully.', LevelGraphModellerComponent.name);\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Update Methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - updateLevelGraph - Call the LevelGraphService Update Method for update the data in the database\n   *\n   ******************************************************************************************************************************************************************************************************/\n  updateLevelGraph() {\n    this.levelGraphService.updateLevelGraph(this.currentLevelGraph)\n      .subscribe(levelGraph => {\n        this.currentLevelGraph = levelGraph;\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Create Methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - createLevelGraphNode - Call the LevelGraphNodeService for creating a new LevelGraphNode in the database\n   *                                  and subscribe for a callback\n   *\n   ******************************************************************************************************************************************************************************************************/\n  createLevelGraphNode(levelGraphNode: LevelGraphNode) {\n    this.levelGraphNodeService.createLevelGraphNode(levelGraphNode)\n      .subscribe(levelGraphNodeResponse => {\n        this.currentLevelGraph.levelGraphNodes.push(levelGraphNodeResponse);\n        Logger.info('Level Graph Node with id: ' + levelGraphNodeResponse.id + ' was created sucessfully.', LevelGraphModellerComponent.name);\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - createLevelGraphRelation - Call the LevelGraphRelationService for creating a new LevelGraphRelation in the database\n   *                                      and subscribe for a callback\n   *\n   ******************************************************************************************************************************************************************************************************/\n  createLevelGraphRelation() {\n    this.levelGraphRelationService.createLevelGraphRelation(this.currentLevelGraphRelation)\n      .subscribe(levelGraphRelationResponse => {\n        this.currentLevelGraph.levelGraphRelations.push(levelGraphRelationResponse);\n        Logger.info('Level Graph Relation created sucessfully.', LevelGraphModellerComponent.name);\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Delete Methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteLevelGraphNode - Call the LevelGraphNodeService for delete a LevelGraphNode from the database and subscribe for a callback.\n   *\n   * @param - levelGraphNode: LevelGraphNode - LevelGraphNode witch should be deleted\n   *\n   ******************************************************************************************************************************************************************************************************/\n  deleteLevelGraphNode(levelGraphNode: LevelGraphNode) {\n    this.levelGraphNodeService.deleteLevelGraphNode(levelGraphNode.id).subscribe(levelGraphNodeResponse => {\n\n      for (let levelGraphRelation of this.currentLevelGraph.levelGraphRelations) {\n        if (levelGraphRelation.sourceNodeId === levelGraphNode.id) {\n          for (let node of this.currentLevelGraph.levelGraphNodes) {\n            if (node.id === levelGraphRelation.targetNodeId) {\n              node.inLevelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, node.inLevelGraphRelations);\n            }\n          }\n          this.currentLevelGraph.levelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, this.currentLevelGraph.levelGraphRelations);\n\n        }\n\n        if (levelGraphRelation.targetNodeId === levelGraphNode.id) {\n          for (let node of this.currentLevelGraph.levelGraphNodes) {\n            if (node.id === levelGraphRelation.sourceNodeId) {\n              node.outLevelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, node.outLevelGraphRelations);\n            }\n          }\n          this.currentLevelGraph.levelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, this.currentLevelGraph.levelGraphRelations);\n        }\n      }\n\n      this.currentLevelGraph.levelGraphNodes = Utility.deleteElementFromArry(levelGraphNode.id, this.currentLevelGraph.levelGraphNodes);\n      //    this.levelGraphService.getLevelGraph(this.currentLevelGraph.id).subscribe(levelGraphResponse => this.currentLevelGraph = levelGraphResponse);\n      Logger.info('Level Graph Node with id: ' + levelGraphNode.id + ' was deleted sucessfully.', LevelGraphModellerComponent.name);\n    },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - delelteLevelGraphRelation - Delete level graph relation and update the level graph\n   *\n   * @param - levelGraphRelation: LevelGraphRelation - LevelGraphRelation witch should be deleted\n   *\n   ******************************************************************************************************************************************************************************************************/\n  deleteLevelGraphRelation(levelGraphRelation: LevelGraphRelation) {\n    this.levelGraphRelationService.deleteLevelGraphRelation(levelGraphRelation.id)\n      .subscribe(levelGraphRelationResponse => {\n\n        for (let node of this.currentLevelGraph.levelGraphNodes) {\n          if (node.id === levelGraphRelation.sourceNodeId) {\n            node.outLevelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, node.outLevelGraphRelations);\n          }\n\n          if (node.id === levelGraphRelation.targetNodeId) {\n            node.inLevelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, node.inLevelGraphRelations);\n          }\n        }\n\n        this.currentLevelGraph.levelGraphRelations = Utility.deleteElementFromArry(levelGraphRelation.id, this.currentLevelGraph.levelGraphRelations);\n\n        // this.levelGraphService.getLevelGraph(this.currentLevelGraph.id).subscribe(levelGraphResponse => this.currentLevelGraph = levelGraphResponse);\n        Logger.info('Level Graph Relation with id: ' + levelGraphRelation.id + ' was deleted sucessfully.', LevelGraphModellerComponent.name);\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Move Node Event Handling\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - startMoveNode - Start moving a node in the level area if the moving tool is selected\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseDown Event\n   * @param - levelGraphNode: LevelGraphNode - LevelGraphNode which should be moved\n   *\n   ******************************************************************************************************************************************************************************************************/\n  startMoveNode(event: MouseEvent, levelGraphNode) {\n    if (!this.moveNode && this.toolList[0].checked) {\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n      this.currentLevelGraphNode = levelGraphNode;\n      this.moveNode = true;\n    }\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onMoveNode - Move a node and his in and outgoing edges in his level area if the moving tool is selected\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseMove Event\n   * @param - level: Level - Level in which the node should be moved\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onMoveNode(event: MouseEvent, level: Level) {\n\n    if (this.moveNode) {\n\n      let newMousePositionY = event.offsetY;\n      let newMousePositionX = event.offsetX;\n      let deltaY = (newMousePositionY - this.lastMousePositionY);\n      let deltaX = (newMousePositionX - this.lastMousePositionX);\n\n      // Change Node Position\n      if (((this.currentLevelGraphNode.x + deltaX) > 0)) {\n        this.currentLevelGraphNode.x = (this.currentLevelGraphNode.x + deltaX);\n      }\n\n      if ((this.currentLevelGraphNode.y + deltaY) > 0 && ((this.currentLevelGraphNode.y + deltaY + this.currentLevelGraphNode.height) < (level.height))) {\n        this.currentLevelGraphNode.y = (this.currentLevelGraphNode.y + deltaY);\n      }\n\n      // Change Relation Position\n      for (let levelGraphRelation of this.currentLevelGraph.levelGraphRelations) {\n\n        // Change Incoming Relation End Point Position\n        if (this.currentLevelGraphNode.id === levelGraphRelation.targetNodeId) {\n          if (levelGraphRelation.levelGraphRelationType === LevelGraphRelationType.REFINE_TO) {\n            if ((levelGraphRelation.path.points[1].x + deltaX) > (0 + Constants.LABELOFFSET + (Constants.NODEWIDTH / 2))) {\n              levelGraphRelation.path.points[1].x = levelGraphRelation.path.points[1].x + deltaX;\n            }\n            if ((levelGraphRelation.path.points[1].y + deltaY) > level.y + 0 + Constants.NODEHEIGHT / 2 && ((levelGraphRelation.path.points[1].y + deltaY) < (level.y + level.height - Constants.NODEHEIGHT / 2))) {\n              levelGraphRelation.path.points[1].y = levelGraphRelation.path.points[1].y + deltaY;\n            }\n          } else {\n            if ((levelGraphRelation.path.points[1].x + deltaX) > (0 + (Constants.NODEWIDTH / 2))) {\n              levelGraphRelation.path.points[1].x = levelGraphRelation.path.points[1].x + deltaX;\n            }\n            if ((levelGraphRelation.path.points[1].y + deltaY) > 0 + Constants.NODEHEIGHT / 2 && ((levelGraphRelation.path.points[1].y + deltaY) < (level.height - Constants.NODEHEIGHT / 2))) {\n              levelGraphRelation.path.points[1].y = levelGraphRelation.path.points[1].y + deltaY;\n            }\n          }\n        }\n\n        // Change Outgoing Relation Start Point Position\n        if (this.currentLevelGraphNode.id === levelGraphRelation.sourceNodeId) {\n          if (levelGraphRelation.levelGraphRelationType === LevelGraphRelationType.REFINE_TO) {\n            if ((levelGraphRelation.path.points[0].x + deltaX) > 0 + Constants.LABELOFFSET + Constants.NODEWIDTH / 2) {\n              levelGraphRelation.path.points[0].x = levelGraphRelation.path.points[0].x + deltaX;\n            }\n            if ((levelGraphRelation.path.points[0].y + deltaY) > level.y + 0 + Constants.NODEHEIGHT / 2 && ((levelGraphRelation.path.points[0].y + deltaY) < (level.y + level.height - Constants.NODEHEIGHT / 2))) {\n              levelGraphRelation.path.points[0].y = levelGraphRelation.path.points[0].y + deltaY;\n            }\n          } else {\n            if ((levelGraphRelation.path.points[0].x + deltaX) > 0 + Constants.NODEWIDTH / 2) {\n              levelGraphRelation.path.points[0].x = levelGraphRelation.path.points[0].x + deltaX;\n            }\n            if ((levelGraphRelation.path.points[0].y + deltaY) > 0 + Constants.NODEHEIGHT / 2 && ((levelGraphRelation.path.points[0].y + deltaY) < (level.height - Constants.NODEHEIGHT / 2))) {\n              levelGraphRelation.path.points[0].y = levelGraphRelation.path.points[0].y + deltaY;\n            }\n          }\n        }\n\n        let tempPath = new Path(levelGraphRelation.path.points);\n        levelGraphRelation.path = tempPath;\n      }\n\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n    }\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - stopMoveNode - Stop the moving event of a node and his in and outgoing edges in his level area if the moving tool is selected\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseUp Event\n   *\n   ******************************************************************************************************************************************************************************************************/\n  stopMoveNode(event: MouseEvent) {\n    if (this.moveNode) {\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n      this.updateLevelGraph();\n      this.moveNode = false;\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Draw Relation Event Handling\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - startDrawRelation - Start the draw relation event if one of the draw relation tool is selected\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseDown Event\n   * @param - level: Level - Level of the source node\n   * @param - sourceNode: LevelGraphNode - Source Node of the LevelGraphRelation\n   *\n   ******************************************************************************************************************************************************************************************************/\n  startDrawRelation(event: MouseEvent, level: Level, sourceNode: LevelGraphNode) {\n\n    if (this.toolList[1].checked || this.toolList[2].checked) {\n      this.drawRelation = true;\n\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n\n      let levelGraphRelationType: string;\n\n      let startPoint: Point;\n      let endPoint: Point;\n\n      if (this.toolList[2].checked) {\n        levelGraphRelationType = LevelGraphRelationType.REFINE_TO;\n        startPoint = new Point(this.lastMousePositionX, this.lastMousePositionY);\n        endPoint = new Point(this.lastMousePositionX - 5, this.lastMousePositionY - 5);\n      } else {\n        startPoint = new Point(this.lastMousePositionX - 50, this.lastMousePositionY - level.y);\n        endPoint = new Point(this.lastMousePositionX - 50 - 5, this.lastMousePositionY - level.y - 5);\n        levelGraphRelationType = LevelGraphRelationType.CONNECT_OVER_TO;\n      }\n\n      let tempPoints: Point[] = [];\n      tempPoints.push(startPoint);\n      tempPoints.push(endPoint);\n\n      let tempPath = new Path(tempPoints);\n      this.currentLevelGraphRelation = new LevelGraphRelation(level.depth, level.depth, sourceNode.id, sourceNode.id, this.currentLevelGraph.id, tempPath, levelGraphRelationType);\n      this.currentLevelGraphRelation.levelGraph = this.currentLevelGraph;\n      this.currentLevelGraphRelation.sourceLevelGraphNode = sourceNode;\n      this.currentLevelGraphRelation.sourceLevel = level;\n      this.currentLevelGraphRelation.sourceLevelId = level.id;\n    }\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onDrawRelation - Update the end point position of the path of a relation\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseMove Event\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onDrawRelation(event: MouseEvent) {\n\n    if (this.drawRelation) {\n      let newMousePositionY = event.offsetY;\n      let newMousePositionX = event.offsetX;\n      let deltaY = (newMousePositionY - this.lastMousePositionY);\n      let deltaX = (newMousePositionX - this.lastMousePositionX);\n\n      this.currentLevelGraphRelation.path.points[1].x = this.currentLevelGraphRelation.path.points[1].x + deltaX;\n      this.currentLevelGraphRelation.path.points[1].y = this.currentLevelGraphRelation.path.points[1].y + deltaY;\n      this.currentLevelGraphRelation.path.updatePath();\n\n      this.lastMousePositionY = newMousePositionY;\n      this.lastMousePositionX = newMousePositionX;\n    }\n\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - stopDrawRelation - Stop the draw relation event and draw a relation if it is allowed to draw it\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseUp Event\n   * @param - targetNode: LevelGraphNode - Target Node of the relation which should be draw\n   * @param - targetLevel: Level - Level of the target node\n   *\n   ******************************************************************************************************************************************************************************************************/\n  stopDrawRelation(event, targetNode: LevelGraphNode, targetLevel: Level) {\n\n    if (this.drawRelation) {\n      let sourceNode = this.currentLevelGraphRelation.sourceLevelGraphNode;\n      let sourceCenterX = sourceNode.x + sourceNode.width / 2;\n      let sourceCenterY = sourceNode.y + sourceNode.height / 2;\n      let targetCenterX = targetNode.x + targetNode.width / 2;\n      let targetCenterY = targetNode.y + targetNode.height / 2;\n      this.currentLevelGraphRelation.targetLevelDepth = targetLevel.depth;\n      this.currentLevelGraphRelation.targetLevel = targetLevel;\n      this.currentLevelGraphRelation.targetLevelId = targetLevel.id;\n      this.currentLevelGraphRelation.targetNodeId = targetNode.id;\n      this.currentLevelGraphRelation.targetLevelGraphNode = targetNode;\n\n      if (!this.currentLevelGraphRelation.isSourceNodeEqualTargetNode()) {\n\n        if (!this.isRelationExist(sourceNode, targetNode)) {\n\n          if (this.toolList[1].checked && this.isConnectedToRelationDrawAllowed(sourceNode, targetNode)) {\n            this.currentLevelGraphRelation.path.points[0].x = sourceCenterX;\n            this.currentLevelGraphRelation.path.points[0].y = sourceCenterY;\n            this.currentLevelGraphRelation.path.points[1].y = targetCenterY;\n            this.currentLevelGraphRelation.path.points[1].x = targetCenterX;\n            this.currentLevelGraphRelation.path.updatePath();\n            this.createLevelGraphRelation();\n          } else if (this.toolList[2].checked && this.isRefineToRelationDrawAllowed(sourceNode, targetNode, targetLevel)) {\n            this.currentLevelGraphRelation.path.points[0].x = sourceCenterX + Constants.LABELOFFSET;\n            this.currentLevelGraphRelation.path.points[1].y = targetCenterY + targetLevel.y;\n            this.currentLevelGraphRelation.path.points[1].x = targetCenterX + Constants.LABELOFFSET;\n            this.currentLevelGraphRelation.path.updatePath();\n            if ((sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) || (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE)) {\n              this.currentLevelGraphRelation.entryPoint = true;\n              this.currentLevelGraphRelation.exitPoint = true;\n            }\n            sourceNode.providedProperties = sourceNode.providedProperties.concat(targetNode.providedProperties);\n            this.createLevelGraphRelation();\n          }\n        }\n      } else {\n//        this.flashMessage.message = 'Self-Loops are not allowed in a Level Graph';\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      }\n\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n      this.drawRelation = false;\n    }\n\r\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Drag and Drop Event Handling\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onDrag - is called to start drag and drop of level graph nodes from toolbox to the draw area\n   *\n   * @param - event: Event - Event Object of the onDrag Event\n   * @param - dragData: any, - Level on which the node will be droped\n   * @param - typeDragData: any, - Type of the data which is dragged from the toolbox\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onDrag(event, dragData: any, typeDragData: string) {\n    this.currentDragData = dragData;\n    this.typeCurrentDragData = typeDragData;\n    this.drag = true;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onDragOver is called to allow a drag over between different div containers\n   *\n   * @param - event: Event - Event Object of the onDragOver Event\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onDragOver(event: MouseEvent) {\n    event.preventDefault();\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onDrop is called to create a LevelGraphNode in the drawArea\n   *\n   * @param - event: Event - Event Object of the onDrop Event\n   * @param - level: Level - Level on which the node will be droped\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onDrop(event, level: Level) {\n\n    if (this.drag === true) {\n      let levelGraphNode = new LevelGraphNode();\n      levelGraphNode.level = level;\n      levelGraphNode.levelId = level.id;\n      levelGraphNode.levelDepth = level.depth;\n      levelGraphNode.levelGraph = this.currentLevelGraph;\n      levelGraphNode.levelGraphId = this.currentLevelGraph.id;\n\n      if (event.offsetX - Constants.LABELOFFSET - Constants.NODEWIDTH / 2 < 0) {\n        levelGraphNode.x = 0;\n      } else {\n        levelGraphNode.x = event.offsetX - Constants.LABELOFFSET - Constants.NODEWIDTH / 2;\n      }\n\n      if (event.offsetY - level.y - Constants.NODEHEIGHT / 2 < 0) {\n        levelGraphNode.y = 0;\n      } else {\n        levelGraphNode.y = event.offsetY - level.y - Constants.NODEHEIGHT / 2;\n      }\n\n\n      if (this.typeCurrentDragData === LevelGraphNodeType.NODETYPEFRAGMENT || this.typeCurrentDragData === LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT) {\n        if (level.depth > Constants.LOWESTABSTRACTIONLEVEL) {\n          if (this.typeCurrentDragData === LevelGraphNodeType.NODETYPEFRAGMENT) {\n            levelGraphNode.levelGraphNodeType = LevelGraphNodeType.NODETYPEFRAGMENT;\n          } else {\n            levelGraphNode.levelGraphNodeType = LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT;\n          }\n          levelGraphNode.name = 'Unnamed';\n          this.createLevelGraphNode(levelGraphNode);\n        } else {\n//          this.flashMessage.message = 'Fragment Nodes cannot be added to level ' + Constants.LOWESTABSTRACTIONLEVEL + ' of a level graph!';\n//          this.flashMessage.isSuccess = false;\n//          this.flashMessage.isError = true;\n//          this.flashMessageService.display(this.flashMessage);\n        }\n      } else {\n        levelGraphNode.name = this.currentDragData.name;\n\n        for (let property of this.currentDragData.providedProperties) {\n          let tempProperty = new ProvidedProperty(property.name, property.value);\n          levelGraphNode.providedProperties.push(tempProperty);\n        }\n\n        levelGraphNode.levelGraphNodeType = this.typeCurrentDragData;\n        levelGraphNode.levelGraphNodeTypeId = this.currentDragData.id;\n        levelGraphNode.icon = this.currentDragData.icon;\n\n        this.createLevelGraphNode(levelGraphNode);\n      }\n      this.drag = false;\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - ChangeLevelHeight Event Handling\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - startChangeLevelHeight - Start the level change height event\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseDown Event\n   *\n   ******************************************************************************************************************************************************************************************************/\n  startChangeLevelHeight(event: MouseEvent) {\n    this.changeLevelHeight = true;\n    this.lastMousePositionY = event.offsetY;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - changeLevelHeight - Change level height of the level draw area\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseMove Event\n   * @param - level: Level - Level witch should be changed\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onChangeLevelHeight(event: MouseEvent, level: Level) {\n\n    let newMousePositionY = event.offsetY;\n    let delta = (newMousePositionY - this.lastMousePositionY);\n    if (this.changeLevelHeight && (level.height + delta) >= 0) {\n\n      level.height = (level.height + delta);\n\n      for (let tempLevel of this.currentLevelGraph.levels) {\n        if (level.id === tempLevel.id) {\n          tempLevel.height = (level.height);\n        }\n      }\n\n      for (let relation of this.currentLevelGraph.levelGraphRelations) {\n\n        if (relation.levelGraphRelationType === 'REFINE_TO') {\n          if (relation.sourceLevelDepth > level.depth) {\n            relation.path.points[0].y = relation.path.points[0].y + delta;\n          }\n          if (relation.targetLevelDepth > level.depth) {\n            relation.path.points[1].y = relation.path.points[1].y + delta;\n          }\n          let tempPath = new Path(relation.path.points);\n          relation.path = tempPath;\n        }\n      }\n\n      for (let tempLevel of this.currentLevelGraph.levels) {\n        if (tempLevel.visible && tempLevel.depth > level.depth) {\n          tempLevel.y = tempLevel.y + delta;\n        }\n      }\n    }\n    this.lastMousePositionY = newMousePositionY;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - stopChangeLevelHeight - Stop the level change height event and update the level graph data\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseUp Event\n   *\n   ******************************************************************************************************************************************************************************************************/\n  stopChangeLevelHeight(event: MouseEvent) {\n    this.changeLevelHeight = false;\n    this.lastMousePositionY = event.offsetY;\n    this.updateLevelGraph();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Filter/Show Methods for show and hide data\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onShowLevel - Show a Level if it is currently invisible or hide a Level if it is currently visible\n   *\n   * @param -level:Level - Level which should be displayed or hide from the draw area\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onShowLevel(level: Level) {\n\n    if (level.visible) {\n      level.visible = false;\n      for (let templevel of this.currentLevelGraph.levels) {\n        if (templevel.visible && templevel.depth > level.depth) {\n          templevel.y = templevel.y - level.height - Constants.LEVELGAPOFFSET;\n        }\n      }\n    } else {\n      level.visible = true;\n      for (let templevel of this.currentLevelGraph.levels) {\n        if (templevel.visible && (templevel.depth + 1) === level.depth) {\n          level.y = templevel.y + templevel.height + Constants.LEVELGAPOFFSET;\n        } else if (templevel.depth > level.depth) {\n          templevel.y = templevel.y + level.height + Constants.LEVELGAPOFFSET;\n        }\n      }\n    }\n\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - showRefineToRelation - Show or hide the refienToRelations if the level height is changed and overlay a level\n   *\n   * @param - levelGraphRelation: LevelGraphRelation - Checks if a RefineTo Relation should be displayed or not accorrding to the level\n   *                                                   height of all level areas\n   *\n   ******************************************************************************************************************************************************************************************************/\n  showRefineToRelation(levelGraphRelation: LevelGraphRelation) {\n\n    for (let level of this.currentLevelGraph.levels) {\n      if (!level.visible) {\n        if (levelGraphRelation.sourceLevelDepth === level.depth || levelGraphRelation.targetLevelDepth === level.depth) {\n          return false;\n        }\n      } else {\n        if (levelGraphRelation.sourceLevelDepth < level.depth) {\n          if (levelGraphRelation.path.points[0].y + Constants.LEVELGAPOFFSET * (level.depth - 1) >= level.y) {\n            return false;\n          }\n        }\n        if (levelGraphRelation.targetLevelDepth < level.depth) {\n          if (levelGraphRelation.path.points[1].y >= level.y) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Check Methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - isRelationExist - checks if a directed relation exist between to nodes\n   *\n   * @param - sourceNode: LevelGraphNode - Source node of the relation\n   * @param - targetNode: LevelGraphNode - Target node of the relation\n   *\n   ******************************************************************************************************************************************************************************************************/\n  isRelationExist(sourceNode: LevelGraphNode, targetNode: LevelGraphNode) {\n\n    for (let targetRelation of targetNode.inLevelGraphRelations) {\n      for (let sourceRelation of sourceNode.outLevelGraphRelations) {\n        if (targetRelation.id === sourceRelation.id) {\n//          this.flashMessage.message = 'There already exist a relation between this nodes!';\n//          this.flashMessage.isSuccess = false;\n//          this.flashMessage.isError = true;\n//          this.flashMessageService.display(this.flashMessage);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - isConnectedToRelationDrawAllowed - check if a draw of a connectedTo relation is allowed\n   *\n   * @param - sourceNode: LevelGraphNode - Source node of the relation\n   * @param - targetNode: LevelGraphNode - Target node of the relation\n   *\n   ******************************************************************************************************************************************************************************************************/\n  isConnectedToRelationDrawAllowed(sourceNode: LevelGraphNode, targetNode: LevelGraphNode) {\n    if (this.currentLevelGraphRelation.isTargetNodeSourceNodeInSameLevel()) {\n      if (sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) {\n        return true;\n      } else {\n//        this.flashMessage.message = 'ConnectedTo relation can only been draw between a Level Graph Node of Type RelationshipType and Level Graph Node of Type NodeType!';\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n        return false;\n      }\n    } else {\n//      this.flashMessage.message = 'ConnectedTo relations can only been drawn between two nodes in the same Level!';\n//      this.flashMessage.isSuccess = false;\n//      this.flashMessage.isError = true;\n//      this.flashMessageService.display(this.flashMessage);\n      return false;\n    }\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - isRefineToRelationDrawAllowed - check if a draw of a refineTo to relation is allowed\n   *\n   * @param - sourceNode: LevelGraphNode - Source node of the relation\n   * @param - targetNode: LevelGraphNode - Target node of the relation\n   *\n   ******************************************************************************************************************************************************************************************************/\n  isRefineToRelationDrawAllowed(sourceNode: LevelGraphNode, targetNode: LevelGraphNode, targetLevel: Level) {\n\n    if (this.currentLevelGraphRelation.sourceLevelDepth < targetLevel.depth) {\n\n      if (sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPEFRAGMENT) {\n        return true;\n      } else {\n//        this.flashMessage.message = 'Refine To relations can only be drawn between to nodes of same type in different levels or between a node and a node of type fragment!';\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n        return false;\n      }\n    } else {\n      if (sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE) {\n        return true;\n      } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) {\n        return true;\n      } else {\n//        this.flashMessage.message = 'RefineTo relations can only been drawn between nodes in the same level from a level graph node of type fragment to a  level graph node of type relationship or nodetype.';\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      }\n      return false;\n    }\n\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Small Helper Methods like change, select, view, add methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - addLevel - Add a new Level to the level graph\n   *\n   ******************************************************************************************************************************************************************************************************/\n  addLevel() {\n\n    let y = 0;\n    for (let level of this.currentLevelGraph.levels) {\n      if (level.visible) {\n        y = y + level.height + Constants.LEVELGAPOFFSET;\n      }\n    }\n\n    let tempLevel: Level = new Level(this.currentLevelGraph.levels.length, y, this.currentLevelGraph.id);\n    tempLevel.levelGraph = this.currentLevelGraph;\n    this.levelService.createLevel(tempLevel)\n      .subscribe(levelResponse => {\n        this.currentLevelGraph.levels.push(levelResponse);\n        Logger.info('Level with id: ' + levelResponse.id + ' was created sucessfully.', LevelGraphModellerComponent.name);\n      },\n      (error) => {\n//        this.flashMessage.message = error;\n//        this.flashMessage.isSuccess = false;\n//        this.flashMessage.isError = true;\n//        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - removeLevel - Remove a level from the level graph\n   *\n   ******************************************************************************************************************************************************************************************************/\n  removeLevel() {\n    if (this.currentLevelGraph.levels.length > 2) {\n\n      this.levelService.deleteLevel(this.currentLevelGraph.levels[this.currentLevelGraph.levels.length - 1].id)\n        .subscribe(response => {\n          this.currentLevelGraph.removeLevel(this.currentLevelGraph.levels[this.currentLevelGraph.levels.length - 1].id);\n          Logger.info('Level with id: ' + this.currentLevelGraph.levels[this.currentLevelGraph.levels.length - 1].id + ' was deleted sucessfully.', LevelGraphModellerComponent.name);\n        },\n        (error) => {\n//          this.flashMessage.message = error;\n//          this.flashMessage.isSuccess = false;\n//          this.flashMessage.isError = true;\n//          this.flashMessageService.display(this.flashMessage);\n        });\n    } else {\n//      this.flashMessage.message = 'A Level Graph must have at least 2 levels.';\n//      this.flashMessage.isSuccess = false;\n//      this.flashMessage.isError = true;\n//      this.flashMessageService.display(this.flashMessage);\n    }\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - stopAllEvents is called onMouseUpEvent on the draw area to set all flags to false for safety reasons\n   *\n   ******************************************************************************************************************************************************************************************************/\n  stopAllEvents() {\n    this.drawRelation = false;\n    this.changeLevelHeight = false;\n    this.moveNode = false;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - onSelectedRepository - Set the data of the current selectedRepository\n   *\n   * @param - repository: Repository - Repository which is selected\n   *\n   ******************************************************************************************************************************************************************************************************/\n  onSelectRepository(repository: Repository) {\n    this.selectedRepository = repository;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - changeTool change the selected tool for model a level graph\n   *\n   *  @param - tool: any - Tool which is selected\n   *\n   ******************************************************************************************************************************************************************************************************/\n  changeTool(tool: any) {\n\n    for (let t of this.toolList) {\n      t.checked = false;\n    }\n    tool.checked = true;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - setEntity - Set Entity to which a expected or provided property should be added\n   *\n   *  @param - entity: any - Entity which should be set\n   *\n   ******************************************************************************************************************************************************************************************************/\n  setEntity(entity: any) {\n    this.entity = entity;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - addProvidedProperty - Add a ProvidedProperty to the current set entity\n   *\n   ******************************************************************************************************************************************************************************************************/\n  addProvidedProperty() {\n    this.createdProvidedProperty.entityProvided = this.entity;\n    this.createdProvidedProperty.entityProvidedId = this.entity.id;\n    this.providedPropertyService.createProvidedProperty(this.createdProvidedProperty).subscribe(providedPropertyResponse => this.entity.providedProperties.push(providedPropertyResponse));\r\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - addExpectedProperty - Add a ExpectedProperty to the current set entity\n   *\n   ******************************************************************************************************************************************************************************************************/\n  addExpectedProperty() {\n    this.createdExpectedProperty.entityExpected = this.entity;\n    this.createdExpectedProperty.entityExpectedId = this.entity.id;\n    this.expectedPropertySerivce.createExpectedProperty(this.createdExpectedProperty).subscribe(expectedPropertyResponse => this.entity.expectedProperties.push(expectedPropertyResponse));\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - addExpectedProperty - Add a ExpectedProperty to the current set entity\n   *\n   ******************************************************************************************************************************************************************************************************/\n  setEntryExitProperty() {\n    this.currentLevelGraphRelation.exitPoint = this.exitPoint;\n    this.currentLevelGraphRelation.entryPoint = this.entryPoint;\n    this.updateLevelGraph();\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - isEntryExitRelation - Set the entry and exit property of a refineTo relation\n   *\n   ******************************************************************************************************************************************************************************************************/\n  isEntryExitRelation(relation: LevelGraphRelation) {\n    let sourceNode: LevelGraphNode;\n    let targetNode: LevelGraphNode;\n\n    for (let node of this.currentLevelGraph.levelGraphNodes) {\n      if (relation.sourceNodeId === node.id) {\n        sourceNode = node;\n      }\n      if (relation.targetNodeId === node.id) {\n        targetNode = node;\n      }\n    }\n\n    if (sourceNode.levelGraphNodeType === LevelGraphNodeType.NODETYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) {\n      return true;\n    } else if (sourceNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPEFRAGMENT && targetNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE) {\n      return true;\n    } else {\n      return false;\n    }\n\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   *  @method - setLevelGraphRelation - Set current selected relation and the values of the entry and exit point of the relation\n   *\n   ******************************************************************************************************************************************************************************************************/\n  setLevelGraphRelation(relation: LevelGraphRelation) {\n    this.currentLevelGraphRelation = relation;\n    this.entryPoint = relation.entryPoint;\n    this.exitPoint = relation.exitPoint;\n  }\n\n  setLevelGraphNode(levelGraphNode: LevelGraphNode) {\n    this.currentLevelGraphNode = levelGraphNode;\r\n  }\n\n  editLevelGraphNodeName(name: string) {\n    this.currentLevelGraphNode.name = name;\n    this.currentLevelGraph.levelGraphNodes = Utility.updateElementInArry(this.currentLevelGraphNode, this.currentLevelGraph.levelGraphNodes);\n    this.updateLevelGraph();\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.component.ts","import {Logger} from '../../../logger/logger';\r\nimport {LevelGraph} from '../../shared/datamodels/levelgraph/levelgraph';\r\nimport {LevelGraphService} from '../../shared/dataservices/levelgraph/levelgraph.service';\r\nimport {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-levelgraphtool',\r\n  templateUrl: './levelgraphtool.component.html',\r\n  styleUrls: ['./levelgraphtool.component.css']\r\n})\r\n\r\n/*******************************************************************************************************************\r\n *\r\n * @component - LevelGraphToolComponent as wrapper component for the LevelGraphComponent so that you can extend the\r\n *              tool component flexible with other components\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n ******************************************************************************************************************/\r\nexport class LevelGraphToolComponent implements OnInit {\r\n\r\n  levelGraphs: LevelGraph[] = [];\r\n\r\n  constructor(\r\n    private levelGraphService: LevelGraphService,\r\n  ) {};\r\n\r\n  ngOnInit() {\r\n    this.retrieveLevelGraphs();\r\n  }\r\n  \r\n  /********************************************************************************************************************************************************************************************************\r\n  *\r\n  * @method - retrieveLevelGraphs - Call the LevelGraphService for loading all LevelGraphs from database into the application and subscribe\r\n  *                                 for a callback. Currently no pagination/streaming of data is supported\r\n  *\r\n  *******************************************************************************************************************************************************************************************************/\r\n  retrieveLevelGraphs() {\r\n    Logger.info('Retrieve LevelGraph Data', LevelGraphToolComponent.name);\r\n    this.levelGraphService.getLevelGraphs()\r\n      .subscribe(levelGraphsResponse => {\r\n        this.levelGraphs = levelGraphsResponse;\r\n        Logger.info('Level Graphs sucessfully retrieved.', LevelGraphToolComponent.name);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/levelgraphtool/levelgraphtool.component.ts","import {Logger} from '../../../../logger/logger';\nimport {Constants} from '../../../shared/constants/constants';\nimport {LevelGraphNodeType} from '../../../shared/constants/levelgraphnodetype';\nimport {LevelGraphRelationType} from '../../../shared/constants/levelgraphrelationtype';\nimport {Entity} from '../../../shared/datamodels/entity/entity';\nimport {LevelGraph} from '../../../shared/datamodels/levelgraph/levelgraph';\nimport {LevelGraphNode} from '../../../shared/datamodels/levelgraph/levelgraphnode';\nimport {ExpectedProperty} from '../../../shared/datamodels/metrics/expectedproperty';\nimport {ProvidedProperty} from '../../../shared/datamodels/metrics/providedproperty';\nimport {Repository} from '../../../shared/datamodels/repository/repository';\nimport {NodeTemplate} from '../../../shared/datamodels/topology/nodetemplate';\nimport {RelationshipTemplate} from '../../../shared/datamodels/topology/relationshiptemplate';\nimport {TopologyTemplate} from '../../../shared/datamodels/topology/topologytemplate';\nimport {RelationshipType} from '../../../shared/datamodels/types/relationshiptype';\nimport {Path} from '../../../shared/datamodels/utility/path';\nimport {Point} from '../../../shared/datamodels/utility/point';\nimport {LevelService} from '../../../shared/dataservices/levelgraph/level.service';\nimport {LevelGraphService} from '../../../shared/dataservices/levelgraph/levelgraph.service';\nimport {LevelGraphNodeService} from '../../../shared/dataservices/levelgraph/levelgraphnode.service';\nimport {ExpectedPropertyService} from '../../../shared/dataservices/metrics/expectedproperty.service';\nimport {ProvidedPropertyService} from '../../../shared/dataservices/metrics/providedpropertyservice.service';\nimport {RefinementService} from '../../../shared/dataservices/refinement/refinement.service';\nimport {RepositoryService} from '../../../shared/dataservices/repository/repository.service';\nimport {NodeTemplateService} from '../../../shared/dataservices/topologytemplate/nodetemplate.service';\nimport {NodeTypeService} from '../../../shared/dataservices/types/nodetype.service';\nimport {RelationshipTemplateService} from '../../../shared/dataservices/topologytemplate/relationshiptemplate.service';\nimport {RelationshipTypeService} from '../../../shared/dataservices/types/relationshiptype.service';\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TopologyTemplateService} from '../../../shared/dataservices/topologytemplate/topologytemplate.service';\nimport {Utility} from '../../../utility';\nimport {FlashMessageService} from 'angular2-flash-message';\nimport {FlashMessage} from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-topologymodeller',\n  templateUrl: './topologymodeller.component.html',\n  styleUrls: ['./topologymodeller.component.css']\n})\n\n/*****************************************************************************************************************************************************\n *\n * @component - TopologyModellerComponent Class - With this component you can display, model or refine a TopologyTemplate. It implements different retrieve,\n *                                                update, create and delete methods for different data types like NodeTemplates, RelationshipTemplates,\n *                                                TopologyTemplates, etc. Also it implements all Events which are used for model a TopologyTemplate like\n *                                                move a node and draw a relation. And it`s call the refinement algorithm on the server side and subscribe\n *                                                for a response.\n *\n * @field - rootTopologyTemplate: TopologyTemplate - Root TopologyTemplate which have to be modeled by the user\n * @field - currentTopologyTemplate: TopologyTemplate - Current displayed TopologyTemplate in the ModellerComponent\n * @field - currentNodeTemplate: NodeTemplate - NodeTemplate which should be moved with the move tool\n * @field - currentRelationshipTemplate - RelationshipTemplate - RelationshipTemplate which should be draw and created on the draw area with the draw tool\n * @field - levelGraphs: LevelGraph[] - List of all available LevelGraphs in the database\n * @field - selectedLevelGraph: LevelGraph - Current selected levelGraph in the tool box\n * @field - repositories: Repository[] - List of all available repositories in the database\n * @field - selectedRepository: Repository - Current selected repository in the tool box\n * @field - maxAbstractionLevel: number - Maximal number of different abstraction levels of the rootTopology default 2 because a Level Graph has\n *                                        at least two different levels\n * @field - lastMousePositionY: number - Last known x position of the mouse. Needed to calculate the delta of a mouse move event\n * @field - lastMousePositionX: number - Last known y position of the mouse. Needed to calculate the delta of a mouse move event\n * @field - currentDragData: any - Container for storing the data which are moved from the tool box to the draw area and should be created\n * @field - entity: Entity - Current selected Entity for add new expected or provided properties\n * @field - createdProvidedProperty: ProvidedProperty - Provided property which should be added\n * @field - createdExpectedProperty: ExpectedProperty - Expected property which should be added\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may\n *                                       cause a \"Over-Flashing\" for the user experience\n * @field - dragNodeType: boolean - True if you drag a nodeType from the repository tool box to the draw area\n * @field - dragLevelGraphNode: boolean - True if you drag a levelGraphNode from the level graph tool box to the draw area\n * @field - moveNode: boolean - True if you move a node in the draw area\n * @field - drawRelation: boolean - True if you draw a relationTemplate with a relationType from a repository and not directly from a level graph\n * @field - drawCurrentLevelGraphCompliantRelation: boolean - True if you draw a relationsTemplate with a relationType from a level graph node of a level graph\n * @field - currentLevelGraphCompliantRelationshipTypes: boolean - Collection of the relationshipTypes of a node template witch a compliant to a level graph node\n *\n * @author - Arthur Kaul\n *\n *****************************************************************************************************************************************************/\nexport class TopologyModellerComponent implements OnInit {\n\n  currentTopologyTemplate = new TopologyTemplate();\n  currentTopologyTemplates: TopologyTemplate[] = [];\n\n  currentNodeTemplate: NodeTemplate = new NodeTemplate();\n  currentRelationshipTemplate: RelationshipTemplate = new RelationshipTemplate(0, 0, null, 0, 0);\n\n\n  levelGraphs: LevelGraph[] = [];\n\n  selectedLevelGraph: LevelGraph = new LevelGraph();\n  selectedLevelGraphNodeNodeType: LevelGraphNode[] = [];\n  selectedLevelGraphNodeNodeTypeCurrentAbstractionLevel: LevelGraphNode[] = [];\n  selectedLevelGraphNodeRelationType: LevelGraphNode[] = [];\n  selectedLevelGraphNodeRelationTypeCurrentAbstractionLevel: LevelGraphNode[] = [];\n\n  repositories: Repository[] = [];\n\n  selectedRepository: Repository = new Repository();\n\n  currentAbstractionLevel = 0;\n\n  lastMousePositionY = 0;\n  lastMousePositionX = 0;\n\n  currentDragData: any;\n\n  dragNodeType = false;\n  dragLevelGraphNode = false;\n  moveNode = false;\n  drawRelation = false;\n  drawCurrentLevelGraphRelation = false;\n  drawCurrentLevelGraphCompliantRelation = false;\n  currentLevelGraphCompliantRelationshipTypes: LevelGraphNode[] = [];\n\n  entity: Entity = new Entity();\n  createProvidedProperty = new ProvidedProperty('Unnamed', 'Undefined');\n  createExpectedProperty = new ExpectedProperty('Unnamed', 'Undefined');\n\n  public flashMessage = new FlashMessage();\n\n  constructor(private repositoryService: RepositoryService,\n    private levelGraphNodeService: LevelGraphNodeService,\n    private levelService: LevelService,\n    private flashMessageService: FlashMessageService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private topologyTemplateService: TopologyTemplateService,\n    private nodeTypeService: NodeTypeService,\n    private relationshipTypeService: RelationshipTypeService,\n    private levelGraphService: LevelGraphService,\n    private nodeTemplateService: NodeTemplateService,\n    private providedPropertyService: ProvidedPropertyService,\n    private expectedPropertyService: ExpectedPropertyService,\n    private relationshipTemplateService: RelationshipTemplateService,\n    private refinementService: RefinementService) {}\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   ****************************************************************************************************************************************/\n  ngOnInit() {\n\n    Logger.info('Initialize TopologyModellerComponent', TopologyModellerComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentTopologyTemplate.id = params['id'] || '';\n    });\n\n    this.flashMessage.timeoutInMS = Constants.FLASHMESSAGETIMEOUT;\n    this.retrieveTopologyTemplate(this.currentTopologyTemplate.id);\n    this.retrieveRepositories();\n    this.retrieveLevelGraphs();\n    this.selectedRepository.name = 'Select Repository';\n    this.selectedLevelGraph.name = 'Select Level Graph';\n\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Retrieve Methods\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - retrieveTopologyTemplate - Call the TopologyTemplateService for loading a TopologyTemplate from database into the application\n   *                                      and subscribe for a callback.\n   *\n   * @param - id: number - Number of TopologyTemplate which should be loaded from the database\n   *\n   ****************************************************************************************************************************************/\n  retrieveTopologyTemplate(id: number) {\n    Logger.info('Retrieve TopologyTemplate Data', TopologyModellerComponent.name);\n    this.topologyTemplateService.getTopologyTemplate(id)\n      .subscribe(topologyTemplateResponse => {\n        this.currentTopologyTemplate = topologyTemplateResponse;\n        this.currentAbstractionLevel = topologyTemplateResponse.abstractionLevel;\n        this.currentTopologyTemplates.push(topologyTemplateResponse);\n        Logger.info('Topology Template with id: ' + topologyTemplateResponse.id + ' and name: ' + topologyTemplateResponse.name + 'was retrieved sucessfully.', TopologyModellerComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - retrieveRepositories - Call the RepositoryService for loading a Repository from database into the application\n   *                                  and subscribe for a callback.\n   *\n   ****************************************************************************************************************************************/\n  retrieveRepositories() {\n    Logger.info('Retrieve Repositories Data', TopologyModellerComponent.name);\n    this.repositoryService.getRepositories()\n      .subscribe(repositoriesResponse => {\n        this.repositories = repositoriesResponse;\n        Logger.info('Repositories retrieved sucessfully.', TopologyModellerComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraphs - Call the LevelGraphService for loading all LevelGraphs from database into the application and subscribe\n   *                                 for a callback. Currently no pagination/streaming of data is supported\n   *\n   ****************************************************************************************************************************************/\n  retrieveLevelGraphs() {\n    Logger.info('Retrieve LevelGraphs Data', TopologyModellerComponent.name);\n    this.levelGraphService.getLevelGraphs().subscribe(levelGraphsResponse => {\n      this.levelGraphs = levelGraphsResponse;\n      Logger.info('LevelGraphs were retrieved sucessfully', TopologyModellerComponent.name);\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Update Methods\n  //\n  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - updateTopologyTemplate - Call the TopologyTemplateService Update Method for updating the current TopologyTemplate\n   *                                    in the database and subscribe for a callback\n   *\n   ****************************************************************************************************************************************/\n  updateTopologyTemplate() {\n    this.topologyTemplateService.updateTopologyTemplate(this.currentTopologyTemplate)\n      .subscribe(topologyTemplateResponse => {\n        //        this.currentTopologyTemplate = topologyTemplateResponse;\r\n      }, (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isSuccess = false;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Create Methods\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - createNodeTemplate - Call the NodeTemplateService for creating a new NodeTemplate in the database\n   *                                and subscribe for a callback\n   *\n   * @param - nodeTemplate: NodeTemplate - NodeTemplate which should be stored in the database\n   *\n   ****************************************************************************************************************************************/\n  createNodeTemplate(nodeTemplate: NodeTemplate) {\n    Logger.info('Create NodeTemplate', TopologyModellerComponent.name);\n    this.nodeTemplateService.createNodeTemplate(nodeTemplate)\n      .subscribe(nodeTemplateResponse => {\n        this.currentTopologyTemplate.nodeTemplates.push(nodeTemplateResponse);\n        Logger.info('Node Template was sucessfully created with id: ' + nodeTemplateResponse.id, TopologyModellerComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - createLevelGraphRelation - Call the RelationshipTemplateService for creating a new RelationshipTemplate in the database\n   *                                      and subscribe for a callback\n   *\n   * @param - relationshipTemplate: RelationshipTemplate - RelationshipTemplate which should be stored in the database\n   *\n   ****************************************************************************************************************************************/\n  createRelationshipTemplate(relationshipTemplate: RelationshipTemplate) {\n    Logger.info('Create RelationshipTemplate', TopologyModellerComponent.name);\n    this.relationshipTemplateService.createRelationshipTemplate(relationshipTemplate).subscribe(relationshipTemplateResponse => {\n      this.currentTopologyTemplate.relationshipTemplates.push(relationshipTemplateResponse);\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isSuccess = false;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Delete Methods\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - deleteNodeTemplate - Call the NodeTemplateService for delete a NodeTemplate from the database and subscribe for a callback.\n   *\n   * @param - id: number - ID of the NodeTemplate witch should be deleted from the database\n   *\n   ****************************************************************************************************************************************/\n  deleteNodeTemplate(nodeTemplate: NodeTemplate) {\n    Logger.info('Delete NodeTemplate', TopologyModellerComponent.name);\n    this.nodeTemplateService.deleteNodeTemplate(nodeTemplate.id).subscribe(nodeTemplateResponse => {\n      // this.topologyTemplateService.getTopologyTemplate(this.currentTopologyTemplate.id).subscribe(topologyTemplateResponse => this.currentTopologyTemplate = topologyTemplateResponse);\n\n      for (let relationshipTemplate of this.currentTopologyTemplate.relationshipTemplates) {\n        if (relationshipTemplate.sourceNodeId === nodeTemplate.id) {\n          for (let node of this.currentTopologyTemplate.nodeTemplates) {\n            if (node.id === relationshipTemplate.targetNodeId) {\n              node.inRelationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, node.inRelationshipTemplates);\n            }\n          }\n          this.currentTopologyTemplate.relationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, this.currentTopologyTemplate.relationshipTemplates);\n\n        }\n\n        if (relationshipTemplate.targetNodeId === nodeTemplate.id) {\n          for (let node of this.currentTopologyTemplate.nodeTemplates) {\n            if (node.id === relationshipTemplate.sourceNodeId) {\n              node.outRelationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, node.outRelationshipTemplates);\n            }\n          }\n          this.currentTopologyTemplate.relationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, this.currentTopologyTemplate.relationshipTemplates);\n        }\n      }\n\n      this.currentTopologyTemplate.nodeTemplates = Utility.deleteElementFromArry(nodeTemplate.id, this.currentTopologyTemplate.nodeTemplates);\n      Logger.info('Node Template with id: ' + nodeTemplate.id + ' was deleted sucessfully.', TopologyModellerComponent.name);\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isSuccess = false;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - deleteRelationshipTemplate - Call the RelationshipTemplateService for delete a NodeTemplate from the database and subscribe for\n   *                                      a callback.\n   *\n   * @param - id: number - ID of the RelationshipTemplate witch should be deleted from the database\n   *\n   ****************************************************************************************************************************************/\n  deleteRelationshipTemplate(relationshipTemplate: RelationshipTemplate) {\n    Logger.info('Delete RelationshipTemplate', TopologyModellerComponent.name);\n    this.relationshipTemplateService.deleteRelationshipTemplate(relationshipTemplate.id)\n      .subscribe(relationshipTemplateResponse => {\n\n        for (let node of this.currentTopologyTemplate.nodeTemplates) {\n          if (node.id === relationshipTemplate.sourceNodeId) {\n            node.outRelationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, node.outRelationshipTemplates);\n          }\n\n\n          if (node.id === relationshipTemplate.targetNodeId) {\n            node.inRelationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, node.inRelationshipTemplates);\n          }\n        }\n        this.currentTopologyTemplate.relationshipTemplates = Utility.deleteElementFromArry(relationshipTemplate.id, this.currentTopologyTemplate.relationshipTemplates);\n        Logger.info('Relationship Template with  id: ' + relationshipTemplateResponse.id + ' was deleted sucessfully.', TopologyModellerComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isSuccess = false;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Drag and Drop Event Handling\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - onDragNodeType - Is called to start drag and drop of NodeTypes from tool box to the draw area\n   *\n   * @param - event: Event - Event Object of the onDrag Event\n   * @param - dragData: any - NodeType data which will be dragged from the tool box to the draw area to create a NodeTemplate of this type\n   *\n   ****************************************************************************************************************************************/\n  onDragNodeType(event, dragData: any) {\n\n    if (!this.dragNodeType) {\n      this.currentDragData = dragData;\n      this.dragNodeType = true;\n    }\n\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - onDragLevelGraphNode - Is called to start drag and drop of level graph nodes from tool box to the draw area\n   *\n   * @param - event: Event - Event Object of the onDrag Event\n   * @param - dragData: any - LevelGraphNode data which will be dragged from the tool box to the draw area to create a NodeTemplate of this\n   *                          type\n   *\n   ****************************************************************************************************************************************/\n  onDragLevelGraphNode(event, dragData: any) {\n\n    if (!this.dragLevelGraphNode) {\n      this.currentDragData = dragData;\n      this.dragLevelGraphNode = true;\n    }\n\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - onDragOver is called to allow a drag over between different div containers\n   *\n   * @param - event: Event - Event Object of the onDragOver Event\n   *\n   ****************************************************************************************************************************************/\n  onDragOver(event) {\n    event.preventDefault();\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - onDrop is called to create a NodeTemplate in the drawArea\n   *\n   * @param - event: Event - Event Object of the onDrop Event\n   *\n   ****************************************************************************************************************************************/\n  onDrop(event) {\n\n    if (this.dragNodeType || this.dragLevelGraphNode) {\n      let tempNodeTemplate = new NodeTemplate();\n      tempNodeTemplate.x = event.offsetX - Constants.NODEWIDTH / 2;\n      tempNodeTemplate.y = event.offsetY - Constants.NODEHEIGHT / 2;\n      tempNodeTemplate.name = this.currentDragData.name;\n      tempNodeTemplate.icon = this.currentDragData.icon;\n      tempNodeTemplate.topologyTemplateId = this.currentTopologyTemplate.id;\n      tempNodeTemplate.topologyTemplate = this.currentTopologyTemplate;\n      tempNodeTemplate.abstractionLevel = this.currentTopologyTemplate.id;\n\n      for (let property of this.currentDragData.providedProperties) {\n        let tempProperty = new ProvidedProperty(property.name, property.value);\n        tempNodeTemplate.providedProperties.push(tempProperty);\n      }\n\n      if (this.dragNodeType) {\n        tempNodeTemplate.nodeTypeId = this.currentDragData.id;\n        tempNodeTemplate.nodeType = this.currentDragData;\n        this.createNodeTemplate(tempNodeTemplate);\n      } else {\r\n\n        this.nodeTypeService.getNodeType(this.currentDragData.levelGraphNodeTypeId).subscribe(nodeTypeResponse => {\n          tempNodeTemplate.nodeTypeId = this.currentDragData.levelGraphNodeTypeId;\n          tempNodeTemplate.nodeType = nodeTypeResponse;\n          tempNodeTemplate.levelGraphNode = this.currentDragData;\n          tempNodeTemplate.levelGraphNodeId = this.currentDragData.id;\n          this.createNodeTemplate(tempNodeTemplate);\n        });\n      }\n\n      this.dragNodeType = false;\n      this.dragLevelGraphNode = false;\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Move Node Event Handling\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - startMoveNode - Start moving a node in drawArea\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseDown Event\n   *\n   ****************************************************************************************************************************************/\n  startMoveNode(event: MouseEvent, nodeTemplate: NodeTemplate) {\n    if (!this.moveNode && !this.drawRelation && !this.drawCurrentLevelGraphCompliantRelation) {\n      this.moveNode = true;\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n      this.currentNodeTemplate = nodeTemplate;\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - onMoveNode - Move a node and his in and outgoing edges in the drawArea\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseMove Event\n   *\n   ****************************************************************************************************************************************/\n  onMoveNode(event: MouseEvent) {\n    if (this.moveNode) {\n      let newMousePositionY = event.offsetY;\n      let newMousePositionX = event.offsetX;\n      let deltaY = (newMousePositionY - this.lastMousePositionY);\n      let deltaX = (newMousePositionX - this.lastMousePositionX);\n\n      if ((this.currentNodeTemplate.x + deltaX) > 0) {\n        this.currentNodeTemplate.x = (this.currentNodeTemplate.x + deltaX);\n      }\n\n      if ((this.currentNodeTemplate.y + deltaY) > 0) {\n        this.currentNodeTemplate.y = (this.currentNodeTemplate.y + deltaY);\n      }\n\n      for (let relationshipTemplate of this.currentTopologyTemplate.relationshipTemplates) {\n        if (this.currentNodeTemplate.id === relationshipTemplate.targetNodeId) {\n          if ((relationshipTemplate.path.points[1].x + deltaX) > (0 + this.currentNodeTemplate.width / 2)) {\n            relationshipTemplate.path.points[1].x = relationshipTemplate.path.points[1].x + deltaX;\n          }\n          if ((relationshipTemplate.path.points[1].y + deltaY) > (0 + this.currentNodeTemplate.height / 2)) {\n            relationshipTemplate.path.points[1].y = relationshipTemplate.path.points[1].y + deltaY;\n          }\n        }\n        if (this.currentNodeTemplate.id === relationshipTemplate.sourceNodeId) {\n          if ((relationshipTemplate.path.points[0].x + deltaX) > (0 + this.currentNodeTemplate.width / 2)) {\n            relationshipTemplate.path.points[0].x = relationshipTemplate.path.points[0].x + deltaX;\n          }\n          if ((relationshipTemplate.path.points[0].y + deltaY) > (0 + this.currentNodeTemplate.height / 2)) {\n            relationshipTemplate.path.points[0].y = relationshipTemplate.path.points[0].y + deltaY;\n          }\n        }\n\n        let tempPath = new Path(relationshipTemplate.path.points);\n        relationshipTemplate.path = tempPath;\n      }\n\n      this.lastMousePositionY = newMousePositionY;\n      this.lastMousePositionX = newMousePositionX;\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - stopMoveNode - Stop the moving event of the NodeTemplate and create a new NodeTemplate in the TopologyTemplate\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseUp Event\n   *\n   ****************************************************************************************************************************************/\n  stopMoveNode(event) {\n    if (this.moveNode) {\n      this.moveNode = false;\n      this.lastMousePositionY = event.offsetY;\n      this.lastMousePositionX = event.offsetX;\n      this.updateTopologyTemplate();\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Refinement Handling\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - startRefinement - Call the RefinementSerive for refine the currentTopologyTemplate and subscribe for a callback.\n   *\n   *\n   ****************************************************************************************************************************************/\n  startRefinement(smi: number, steps: number) {\n    this.updateTopologyTemplate();\n    let levelGraph: LevelGraph = this.mergeLevelGraphs();\n\n    let maxLevel = 0;\n    for (let level of levelGraph.levels) {\n      if (level.depth > maxLevel) {\n        maxLevel = level.depth;\n      }\n    }\n\n    if (maxLevel <= this.currentTopologyTemplate.abstractionLevel) {\n      this.flashMessage.message = 'Topology Template can`t be refined with this Level Graphs, because the level of abstraction of the Topology Template is higher or equal to the abstraction levels of the selected Level Graphs';\n      this.flashMessage.isSuccess = false;\n      this.flashMessage.isError = true;\n      this.flashMessageService.display(this.flashMessage);\n    } else {\n\n      this.flashMessage.message = 'Refinement Startet in Background';\n      this.flashMessage.isSuccess = true;\n      this.flashMessageService.display(this.flashMessage);\n      let startTime = Date.now();\n\n      if (steps === 1) {\n        this.refinementService.refineOneStepTopologyTemplate(this.currentTopologyTemplate.id, levelGraph, smi).subscribe(topologyTemplateResponse => {\n          this.currentTopologyTemplate = topologyTemplateResponse;\n          this.updateTopologyTemplate();\n          let endTime = Date.now();\n          this.flashMessage.message = 'Refinement Finished successfuly in' + (startTime - endTime);\n          this.flashMessage.isSuccess = true;\n          this.flashMessageService.display(this.flashMessage);\n        },\n          (error) => {\n            this.updateTopologyTemplate();\n            this.flashMessage.message = error;\n            this.flashMessage.isSuccess = false;\n            this.flashMessage.isError = true;\n            this.flashMessageService.display(this.flashMessage);\n          });\n      } else {\n        this.refinementService.refineTopologyTemplate(this.currentTopologyTemplate.id, levelGraph, smi).subscribe(topologyTemplateResponse => {\n          this.currentTopologyTemplate = topologyTemplateResponse;\n          this.updateTopologyTemplate();\n          let endTime = Date.now();\n          this.flashMessage.message = 'Refinement Finished successfuly in' + (startTime - endTime);\n          this.flashMessage.isSuccess = true;\n          this.flashMessageService.display(this.flashMessage);\n        },\n          (error) => {\n            this.flashMessage.message = error;\n            this.flashMessage.isSuccess = false;\n            this.flashMessage.isError = true;\n            this.flashMessageService.display(this.flashMessage);\n          });\n      }\n\n    }\n  }\n\n  /*************************************************************************************************************************************\n   *\n   * @method - mergeLevelGraph - Merge all data of the selected Level Graphs into one Level Graph which will be used for the refinement\n   *\n   **************************************************************************************************************************************/\n  mergeLevelGraphs() {\n\n    let levelGraph: LevelGraph = new LevelGraph();\n    for (let levelGraphTemp of this.levelGraphs) {\n      if (levelGraphTemp.checked) {\n        levelGraph.levels = levelGraph.levels.concat(levelGraphTemp.levels);\n        levelGraph.levelGraphNodes = levelGraph.levelGraphNodes.concat(levelGraphTemp.levelGraphNodes);\n        levelGraph.levelGraphRelations = levelGraph.levelGraphRelations.concat(levelGraphTemp.levelGraphRelations);\n      }\n    }\n\n    return levelGraph;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Draw Relation Event Handling\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - startDrawRelation - Start the draw relation event of an independent relationshipTemplate\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseDown Event\n   * @param - relationshipType: RelationshipType - RelationshiptType of the RelationshiptTemplate which should be created\n   * @param - sourceNode: NodeTemplate - sourceNode of the RelationshipTemplate\n   *\n   ****************************************************************************************************************************************/\n  startDrawRelation(event: MouseEvent, relationshipType: RelationshipType, sourceNode: NodeTemplate) {\n    if (!this.drawRelation) {\n      this.drawRelation = true;\n      this.setDrawCurrentLevelGraphRelationValues(event, relationshipType, sourceNode);\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - startDrawCurrentLevelGraphRelation - Start the draw relation event of a relationshipTemplate which is derived from\n   *                                                the level graph\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseDown Event\n   * @param - levelGraphNode: LevelGraphNode - LevelGraphNode of RelationshipType from which the RelationshiptTemplate should be derived\n   * @param - sourceNode: NodeTemplate - sourceNode of the RelationshipTemplate\n   *\n   ****************************************************************************************************************************************/\n  startDrawCurrentLevelGraphRelation(event: MouseEvent, levelGraphNode: LevelGraphNode, sourceNode: NodeTemplate) {\n    if (!this.drawCurrentLevelGraphRelation) {\n      this.drawCurrentLevelGraphRelation = true;\n      this.setDrawCurrentLevelGraphRelationValues(event, levelGraphNode, sourceNode);\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method startDrawCurrentLevelGraphCompliantRelation - Start the draw relation of a relationshipTemplate which is derived from\n   *                                                the level graph and is compliant to the level graph\n   *\n   * @param event: MouseEvent - Event Object of the onMouseDown Event\n   * @param levelGraphNode: LevelGraphNode - LevelGraphNode of the RelationshiptTemplate which should be created\n   * @param sourceNode: NodeTemplate - sourceNode of the RelationshipTemplate\n   *\n   ****************************************************************************************************************************************/\n  startDrawCurrentLevelGraphCompliantRelation(event: MouseEvent, levelGraphNode: LevelGraphNode, sourceNode: NodeTemplate) {\n    if (!this.drawCurrentLevelGraphCompliantRelation) {\n      this.drawCurrentLevelGraphCompliantRelation = true;\n      this.setDrawCurrentLevelGraphRelationValues(event, levelGraphNode, sourceNode);\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method startDrawCurrentLevelGraphCompliantRelation - Set the data of the relation which should be drawn\n   *\n   * @param event: MouseEvent - Event Object of the onMouseDown Event\n   * @param parentData: any - Level Graph Node or RelationshipType\n   * @param sourceNode: NodeTemplate - sourceNode of the RelationshipTemplate\n   *\n   ****************************************************************************************************************************************/\n  setDrawCurrentLevelGraphRelationValues(event: MouseEvent, parentData: any, sourceNode: NodeTemplate) {\n    this.lastMousePositionY = event.offsetY;\n    this.lastMousePositionX = event.offsetX;\n\n    let startPoint: Point;\n    let endPoint: Point;\n    startPoint = new Point(sourceNode.x + sourceNode.width / 2, sourceNode.y + sourceNode.height / 2);\n    endPoint = new Point(sourceNode.x + sourceNode.width / 2 - 5, sourceNode.y + sourceNode.height / 2 - 5);\n\n    let tempPoints: Point[] = [];\n    tempPoints.push(startPoint);\n    tempPoints.push(endPoint);\n    let tempPath = new Path(tempPoints);\n\n    if (this.drawCurrentLevelGraphCompliantRelation || this.drawCurrentLevelGraphRelation) {\n\n      this.currentRelationshipTemplate = new RelationshipTemplate(sourceNode.id, sourceNode.id, tempPath, parentData.levelGraphNodeTypeId, this.currentTopologyTemplate.id);\n      this.currentRelationshipTemplate.levelGraphNode = parentData;\n      this.currentRelationshipTemplate.levelGraphNodeId = parentData.id;\n      this.relationshipTypeService.getRelationshipType(parentData.levelGraphNodeTypeId).subscribe(relationshipTypeResponse => {\n        this.currentRelationshipTemplate.relationshipType = relationshipTypeResponse;\n\n      });\n\n    } else {\n\n      this.currentRelationshipTemplate = new RelationshipTemplate(sourceNode.id, sourceNode.id, tempPath, parentData.id, this.currentTopologyTemplate.id);\n      this.relationshipTypeService.getRelationshipType(parentData.id).subscribe(relationshipTypeResponse => {\n        this.currentRelationshipTemplate.relationshipType = relationshipTypeResponse;\n      });\n\n    }\n\n    for (let property of parentData.providedProperties) {\n      let tempProperty = new ProvidedProperty(property.name, property.value);\n      this.currentRelationshipTemplate.providedProperties.push(tempProperty);\n    }\n    this.currentRelationshipTemplate.topologyTemplate = this.currentTopologyTemplate;\n    this.currentRelationshipTemplate.topologyTemplateId = this.currentTopologyTemplate.id;\n    this.currentRelationshipTemplate.name = parentData.name;\n    this.currentRelationshipTemplate.sourceNodeTemplate = sourceNode;\n    this.currentRelationshipTemplate.abstractionLevel = this.currentTopologyTemplate.abstractionLevel;\n\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - onDrawLevelGraphRelation - Update the end point position of the path of a relation\n   *\n   * @param - event: MouseEvent - Event Object of the onMouseMove Event\n   *\n   ****************************************************************************************************************************************/\n  onDrawLevelGraphRelation(event: MouseEvent) {\n\n    if (this.drawRelation || this.drawCurrentLevelGraphCompliantRelation || this.drawCurrentLevelGraphRelation) {\n      this.currentRelationshipTemplate.path.points[1].x = event.offsetX;\n      this.currentRelationshipTemplate.path.points[1].y = event.offsetY;\n      this.currentRelationshipTemplate.path.updatePath();\n    }\n\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method - stopDrawRelation - Stop the draw relation event and draw a relation if it is allow to draw it\n   *\n   * @param - targetNode: NodeTemplate - Target Node of the relation which should be created\n   *\n   ****************************************************************************************************************************************/\n  stopDrawLevelGraphRelation(targetNode: NodeTemplate) {\n    if (this.drawRelation || this.drawCurrentLevelGraphRelation || (this.drawCurrentLevelGraphCompliantRelation && this.isRelationLevelGraphCompliant(targetNode))) {\n\n      this.currentRelationshipTemplate.targetNodeId = targetNode.id;\n      this.currentRelationshipTemplate.path.points[1].x = targetNode.x + targetNode.width / 2;\n      this.currentRelationshipTemplate.path.points[1].y = targetNode.y + targetNode.height / 2;\n      this.currentRelationshipTemplate.path.updatePath();\n      this.currentRelationshipTemplate.targetNodeTemplate = targetNode;\n\n      if (!this.currentRelationshipTemplate.isSourceNodeEqualTargetNode()) {\n        this.createRelationshipTemplate(this.currentRelationshipTemplate);\n      } else {\n        this.flashMessage.message = 'Self-Loops are not allowed in a Topology Template';\n        this.flashMessage.isSuccess = false;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      }\n    }\n    this.drawRelation = false;\n    this.drawCurrentLevelGraphCompliantRelation = false;\n    this.drawCurrentLevelGraphRelation = false;\n\r\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Check Methods\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method isRelationLevelGraphCompliant - Checks if a relation which should be created is compliant to the current selected Level graph\n   *\n   * @param targetNode: NodeTemplate - Target Node of the relation which should be created\n   *\n   ****************************************************************************************************************************************/\n  isRelationLevelGraphCompliant(targetNode: NodeTemplate) {\n    for (let levelGraphRelation of this.currentRelationshipTemplate.levelGraphNode.outLevelGraphRelations) {\n      for (let levelGraphNode of this.selectedLevelGraph.levelGraphNodes) {\n        if (levelGraphNode.id === levelGraphRelation.targetNodeId && levelGraphNode.levelGraphNodeTypeId === targetNode.nodeTypeId) {\n          return true;\n        }\n      }\n    }\n    this.flashMessage.message = 'NodeType of NodeTemplate is not compliant to the RelationshipType of the current draw RelationTemplate';\n    this.flashMessage.isSuccess = false;\n    this.flashMessage.isError = true;\n    this.flashMessageService.display(this.flashMessage);\n\n    return false;\r\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  // @section - Small Helper Methods like change, select, view, add methods\n  //\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /*****************************************************************************************************************************************\n   *\n   * @method onSelectedLevelGraph - Set the data of the currently selected LevelGraph and the available LevelGraphNodes\n   *\n   * @param levelGraph: LevelGraph - LevelGraph which should be set\n   *\n   ****************************************************************************************************************************************/\n  onSelectLevelGraph(levelGraph: LevelGraph) {\n    this.selectedLevelGraph = levelGraph;\n    this.selectedLevelGraphNodeNodeType = [];\n    this.selectedLevelGraphNodeNodeTypeCurrentAbstractionLevel = [];\n    this.selectedLevelGraphNodeRelationType = [];\n    this.selectedLevelGraphNodeRelationTypeCurrentAbstractionLevel = [];\n\n    for (let levelGraphNode of this.selectedLevelGraph.levelGraphNodes) {\n\n      if (levelGraphNode.levelGraphNodeType === LevelGraphNodeType.NODETYPE) {\n        if (levelGraphNode.levelDepth === this.currentTopologyTemplate.abstractionLevel) {\n          this.selectedLevelGraphNodeNodeTypeCurrentAbstractionLevel.push(levelGraphNode);\r\n        }\n        this.selectedLevelGraphNodeNodeType.push(levelGraphNode);\n      } else if (levelGraphNode.levelGraphNodeType === LevelGraphNodeType.RELATIONSHIPTYPE) {\n        if (levelGraphNode.levelDepth === this.currentTopologyTemplate.abstractionLevel) {\n          this.selectedLevelGraphNodeRelationTypeCurrentAbstractionLevel.push(levelGraphNode);\n        }\n        this.selectedLevelGraphNodeRelationType.push(levelGraphNode);\n      }\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method onSelectRepository - Set the data of the currently selected Repository\n   *\n   * @param repository: Repository - Repository which should be set\n   *\n   ****************************************************************************************************************************************/\n  onSelectRepository(repository: Repository) {\n    this.selectedRepository = repository;\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method stopDrawRelation - Stop the draw relation event and draw a relation if it is allowed to draw it\n   *\n   * @param event: MouseEvent - Event Object of the onMouseUp Event\n   * @param targetNode: LevelGraphNode - Target Node of the relation which should be draw\n   * @param targetLevel: Level - Target Level is the level of the target node\n   *\n   ****************************************************************************************************************************************/\n  setCurrentLevelGraphCompliantRelationshipTypes(event, levelGraphNodeId: number) {\n\n    if (event.which === 3) {\n      this.currentLevelGraphCompliantRelationshipTypes = [];\n\n      for (let levelGraphNode of this.selectedLevelGraphNodeRelationTypeCurrentAbstractionLevel) {\n        for (let levelGraphRelation of levelGraphNode.inLevelGraphRelations) {\n          if (levelGraphRelation.sourceNodeId === levelGraphNodeId) {\n            this.currentLevelGraphCompliantRelationshipTypes.push(levelGraphNode);\n          }\n        }\n      }\n    }\n\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method stopAllEvents - Stop all the events\n   *\n   ****************************************************************************************************************************************/\n  stopAllEvents() {\n    this.dragNodeType = false;\n    this.dragLevelGraphNode = false;\n    this.moveNode = false;\n    this.drawRelation = false;\n    this.drawCurrentLevelGraphCompliantRelation = false;\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method loadSpecificTopologyTemplates - Load a specific topologyTemplate of the current displayed topologyTemplate in the modeler\n   *\n   ****************************************************************************************************************************************/\n  loadSpecificTopologyTemplates() {\n    this.currentTopologyTemplates = this.currentTopologyTemplate.childTopologyTemplates;\n    this.currentTopologyTemplate = this.currentTopologyTemplate.childTopologyTemplates[0];\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method loadAbstractTopologyTemplates - Load the abstract topologyTemplate of the current displayed topologyTemplate in the modeler\n   *\n   ****************************************************************************************************************************************/\n  loadAbstractTopologyTemplates() {\r\n    this.topologyTemplateService.getTopologyTemplate(this.currentTopologyTemplate.parentTopologyTemplateId)\n      .subscribe(topologyTemplateResponse => {\n        this.currentTopologyTemplate = topologyTemplateResponse;\n        if (this.currentTopologyTemplate.parentTopologyTemplateId !== null) {\n          this.topologyTemplateService.getTopologyTemplate(this.currentTopologyTemplate.parentTopologyTemplateId)\n            .subscribe(parent => {\n              this.currentTopologyTemplates = parent.childTopologyTemplates;\n              for (let i = 0; i < this.currentTopologyTemplates.length; i++) {\n                if (this.currentTopologyTemplates[i].id === this.currentTopologyTemplate.id) {\n                  this.currentTopologyTemplate = this.currentTopologyTemplates[i];\n                }\n              }\n            },\n            (error) => {\n              this.flashMessage.message = error;\n              this.flashMessage.isError = true;\n              this.flashMessageService.display(this.flashMessage);\n            });\n\n        } else {\n          this.currentTopologyTemplates = [];\n          this.currentTopologyTemplates.push(this.currentTopologyTemplate);\n\n        }\n\n      },\n\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n\n  /*****************************************************************************************************************************************\n   *\n   * @method prevTopology - Load the previous topologyTemplate of the current abstraction level in the modeler\n   *\n   ****************************************************************************************************************************************/\n  prevTopology() {\n    this.currentTopologyTemplate = this.currentTopologyTemplates[this.currentTopologyTemplates.indexOf(this.currentTopologyTemplate) - 1];\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method prevTopology - Load the next topologyTemplate of the current abstraction level in the modeler\n   *\n   ****************************************************************************************************************************************/\n  nextTopology() {\n    this.currentTopologyTemplate = this.currentTopologyTemplates[this.currentTopologyTemplates.indexOf(this.currentTopologyTemplate) + 1];\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method stopDrawRelation - Stop the draw relation event and draw a relation if it is allowed to draw it\n   *\n   * @param entity: any - Event Object of the onMouseUp Event\n   *\n   ****************************************************************************************************************************************/\n  setEntity(entity: any) {\n    this.entity = entity;\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method addExpectedProperty - Add expected property to a nodeTemplate or a relationshipTemplate\n   *\n   ****************************************************************************************************************************************/\n  addExpectedProperty() {\n    this.createExpectedProperty.entityExpected = this.entity;\n    this.createExpectedProperty.entityExpectedId = this.entity.id;\n    this.expectedPropertyService.createExpectedProperty(this.createExpectedProperty).subscribe(expectedPropertyResponse => this.entity.expectedProperties.push(expectedPropertyResponse));\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method addProvidedProperty - Stop the draw relation event and draw a relation if it is allowed to draw it\n   *\n   ****************************************************************************************************************************************/\n  addProvidedProperty() {\n    this.createProvidedProperty.entityProvided = this.entity;\n    this.createProvidedProperty.entityProvidedId = this.entity.id;\n    this.providedPropertyService.createProvidedProperty(this.createProvidedProperty).subscribe(providedPropertyResponse => this.entity.providedProperties.push(providedPropertyResponse));\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method setUsedLevelGraphs - Select the level graph which where used for modeling a topologyTemplate\n   *\n   ****************************************************************************************************************************************/\n  setUsedLevelGraphs() {\n\n    for (let levelGraph of this.levelGraphs) {\n      levelGraph.checked = false;\n    }\n\n    for (let levelGraph of this.levelGraphs) {\n      for (let levelGraphNode of levelGraph.levelGraphNodes) {\n        for (let relationshipTemplate of this.currentTopologyTemplate.relationshipTemplates) {\n          if (levelGraphNode.id === relationshipTemplate.levelGraphNodeId) {\n            levelGraph.checked = true;\n          }\n        }\n\n        for (let nodeTemplate of this.currentTopologyTemplate.nodeTemplates) {\n          if (levelGraphNode.id === nodeTemplate.levelGraphNodeId) {\n            levelGraph.checked = true;\n          }\n        }\n      }\n    }\n  }\n\n  /*****************************************************************************************************************************************\n   *\n   * @method onCheckLevelGraph - Select a level Graph for refinement\n   *\n   ****************************************************************************************************************************************/\n  onCheckLevelGraph(levelGraph) {\n    if (levelGraph.checked) {\n      levelGraph.checked = false;\n    } else {\n      levelGraph.checked = true;\n    }\n  }\n\n  setNodeTemplate(nodeTemplate: NodeTemplate) {\n    this.currentNodeTemplate = nodeTemplate;\n  }\n\n  editNodeTemplateName(name: string) {\n    this.currentNodeTemplate.name = name;\n    this.currentTopologyTemplate.nodeTemplates = Utility.updateElementInArry(this.currentNodeTemplate, this.currentTopologyTemplate.nodeTemplates);\n    this.updateTopologyTemplate();\n  }\n\n  setRelationshipTemplate(relationshipTemplate: RelationshipTemplate) {\n    this.currentRelationshipTemplate = relationshipTemplate;\n  }\n\n  editRelationshipTemplateName(name: string) {\n    this.currentRelationshipTemplate.name = name;\n    this.currentTopologyTemplate.relationshipTemplates = Utility.updateElementInArry(this.currentRelationshipTemplate, this.currentTopologyTemplate.relationshipTemplates);\n    this.updateTopologyTemplate();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/topologytool/topologymodeller/topologymodeller.component.ts","import {Logger} from '../../../logger/logger';\nimport {TopologyTemplate} from '../../shared/datamodels/topology/topologytemplate';\nimport {TopologyTemplateService} from '../../shared/dataservices/topologytemplate/topologytemplate.service';\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-topologytemplatetool',\n  templateUrl: './topologytemplatetool.component.html',\n  styleUrls: ['./topologytemplatetool.component.css']\n})\n\n/****************************************************************************************************************************************\n *\n * @component - TopologyTemplateToolComponent - Lazy loaded component as wrapper for a better view result and for decoupling header\n *                                              from the data panel\n *\n * @author - Arthur Kaul\n *\n ***************************************************************************************************************************************/\nexport class TopologyTemplateToolComponent implements OnInit {\n\n  topologyTemplates: TopologyTemplate[] = [];\n\n  constructor(private topologyTemplateService: TopologyTemplateService\n  ) {}\n\n  ngOnInit() {\n    this.retrieveTopologyTemplates();\n  }\n\n  /********************************************************************************************************************************************************************************************************\n  *\n  *  @method - retrieveTopologyTemplates - Call the TopologyTemplateService for loading all TopologyTemplates from database into the application\n  *                                        and subscribe for a callback. Currently no pagination/streaming of data is supported\n  *\n  *******************************************************************************************************************************************************************************************************/\n  retrieveTopologyTemplates() {\n    Logger.info('Retrieve TopologyTemplate Data', TopologyTemplateToolComponent.name);\n    this.topologyTemplateService.getTopologyTemplates()\n      .subscribe(topologyTemplateResponse => {\n        this.topologyTemplates = topologyTemplateResponse;\n        Logger.info('Topology Template sucessfully retrieved.', TopologyTemplateToolComponent.name);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/topologytool/topologytemplatetool.component.ts","/**********************************************************************************************************************************************************************************************************\n *\n * @class - LevelGraphNodeType - Collection of all constant types of a LevelGraphNode which are currently supported by the application.\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphNodeType {\n  public static readonly NODETYPE = 'NODETYPE';\n  public static readonly RELATIONSHIPTYPE = 'RELATIONSHIPTYPE';\n  public static readonly NODETYPEFRAGMENT = 'NODETYPEFRAGMENT';\n  public static readonly RELATIONSHIPTYPEFRAGMENT = 'RELATIONSHIPTYPEFRAGMENT';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/levelgraphnodetype.ts","/*******************************************************************************************************************************************************************************************************\n *\n * @class - Node - Superclass for all models which should be displayed as rectangles in the GraphModellerComponents or in the TopologyTemplateModell. It extends the entity class.\n *\n * @superclass - Entity\n * @superField - id: number - ID of the Node\n * @superField - name: string - Name of the Node\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the Node\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the Node\n *\n * @field - x: number - x Position of the left upper corner of a rectangle\n * @field - y: number - y Position of the left upper corner of a rectangle\n * @field - width: number - Width of the rectangle\n * @field - height: number - Height of the rectangle\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nimport { Constants } from '../../constants/constants';\nimport { Entity } from '../entity/entity';\n\nexport class Node extends Entity {\n\n  x: number = 0;\n  y: number = 0;\n  width: number = Constants.NODEWIDTH;;\n  height: number = Constants.NODEHEIGHT;;\n\n  constructor() {\n    super();\n    this.x = 0;\n    this.y = 0;\n    this.width = Constants.NODEWIDTH;\n    this.height = Constants.NODEHEIGHT;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/graph/node.ts","import { Entity } from '../entity/entity';\nimport { Path } from '../utility/path';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - Relation - Superclass for all models which should be displayed as lines in GraphModellerComponents. It extends the entity class.\n *\n * @superclass - Entity\n * @superField - id: number - ID of the Relation\n * @superField - name: string - Name of the Relation\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the Relation\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the Relation\n *\n * @field - sourceNodeId: number - ID of the Source Node of relation\n * @field - targetNodeId: number - ID of the Target Node of relation\n * @field - path: Path - Path of the line from source node to target node\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class Relation extends Entity {\n\n  sourceNodeId: number;\n  targetNodeId: number;\n  path: Path;\n\n  constructor(sourceNodeId: number, targetNodeId: number, path: Path) {\n    super();\n    this.sourceNodeId = sourceNodeId;\n    this.targetNodeId = targetNodeId;\n    this.path = path;\n  };\n\n  /*****************************************************************************************************************************************************************************************************\n   *\n   * @method - isSourceNodeEqualTargetNode - Check if the relation is a self-loop relation\n   *\n   ****************************************************************************************************************************************************************************************************/\n  isSourceNodeEqualTargetNode() {\n    return (this.sourceNodeId === this.targetNodeId);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/graph/relation.ts","import {Point} from './point';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - Path - A Collection of Points used for drawing relations/paths in a view\n *\n * @field - id: number - ID of a path in a view\n * @field - pathDataString: string - Specific representation of a path as a string so that SVG Path/Line elements can interpret the data\n * @field - points: Point[] - Array of all point in a path\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class Path {\n\n  id: number;\n  pathDataString: string;\n  points: Point[];\n\n  constructor(points: Point[]) {\n    this.points = points;\n    this.createPath(points);\n  }\n\n  createPath(points: Point[]) {\n    this.pathDataString = '';\n    for (let point of points) {\n      this.pathDataString = this.pathDataString + point.x + ',' + point.y + ' ';\n    }\n  }\n\n  addPointToPath(point: Point) {\n    this.pathDataString = this.pathDataString + point.x + ',' + point.y + ' ';\n  }\n\n  updatePath() {\n    this.pathDataString = '';\n    for (let point of this.points) {\n      this.pathDataString = this.pathDataString + point.x + ',' + point.y + ' ';\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/utility/path.ts","/*******************************************************************************************************************************************************************************************************\n *\n * @class - Point - A point in a coordinate system used for drawing\n *\n * @field - x: number - X-Position in a Cartesian coordinate system\n * @field - y: number - Y-Position in a Cartesian coordinate system\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class Point {\n\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/utility/point.ts","import { Logger } from '../../../../logger/logger';\nimport { LevelGraph } from '../../datamodels/levelgraph/levelgraph';\nimport { TopologyTemplate } from '../../datamodels/topology/topologytemplate';\nimport { TopologyTemplateService } from '../topologytemplate/topologytemplate.service';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/*********************************************************************************************************************************************************************************************************\n *\n * @service - RefinementService  - Implements the request call to the server interface and wait for a response to extract the results of the refinement process\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class RefinementService {\n\n  // URL of the REST Interface End-Point\n  private refinmentAlgorithmURL = '/api/refinement';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - Send GET refineTopologyTemplate REQUEST\n   *\n   * @param - idTopologyTemplate: number - ID of the TopologyTemplate which should be refined\n   * @param - steps: number - Number of refinement steps\n   * @param - levelGraphs: LevelGraphs - Merged Level Graph which should be used for refinement\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public refineTopologyTemplate(idTopologyTemplate: number, levelGraph: LevelGraph, smi: number): Observable<TopologyTemplate> {\n    Logger.info('[REQUEST - REFINEMNET]: Send GET Refined Topology Template Request', RefinementService.name);\n    Logger.info('[REQUEST - REFINEMNET]: ' + JSON.stringify(levelGraph), TopologyTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.refinmentAlgorithmURL + '/refineTopologyTemplate/' + idTopologyTemplate + '/' + smi, levelGraph, options).map(this.extractTopologyTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - Send GET refineOneStepTopologyTemplate REQUEST\n   *\n   * @param - idTopologyTemplate: number - ID of the TopologyTemplate which should be refined\n   * @param - levelGraph: LevelGraph - Merged Level Graph which should be used for refinement\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public refineOneStepTopologyTemplate(idTopologyTemplate: number, levelGraph: LevelGraph, smi: number): Observable<TopologyTemplate> {\n    Logger.info('[REQUEST - REFINEMNET]: Send GET Refined Topology Template Request', RefinementService.name);\n    Logger.info('[REQUEST - REFINEMNET]: ' + JSON.stringify(levelGraph), TopologyTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.refinmentAlgorithmURL + '/refineOneStepTopologyTemplate/' + idTopologyTemplate + '/' + smi, levelGraph, options).map(this.extractTopologyTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractTopologyTemplates(res) {\n    let body = res.json();\n    let topologyTemplateList: TopologyTemplate[] = [];\n    Logger.info('[RESPONSE - REFINEMNET]: Extract Topology Template Data List', TopologyTemplateService.name);\n    Logger.info('[RESPONSE - REFINEMNET]: ' + JSON.stringify(body), TopologyTemplateService.name);\n    for (let topologytemplate of body) {\n      let tempTopologyTemplate: TopologyTemplate = new TopologyTemplate();\n      tempTopologyTemplate = topologytemplate;\n      topologyTemplateList.push(tempTopologyTemplate);\n    }\n    return topologyTemplateList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - Extract data from response data object\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractTopologyTemplate(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - REFINEMNET]: ' + JSON.stringify(body), TopologyTemplateService.name);\n    Logger.info('[RESPONSE - REFINEMNET]: Extract Topology Template Data', TopologyTemplateService.name);\n    let topologyTemplate: TopologyTemplate = new TopologyTemplate();\n    topologyTemplate = body;\n    return topologyTemplate || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - Error Handling\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/refinement/refinement.service.ts","import { LevelGraphDetailsModule } from './levelgrahdetails/levelgraphdetails.module';\nimport { LevelGraphComponent } from './levelgraph.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n\n@NgModule({\n  imports: [\n    FileUploadModule,\n    FormsModule,\n    CommonModule,\n    LevelGraphDetailsModule,\n    RouterModule\n  ],\n  declarations: [LevelGraphComponent],\n  exports: [LevelGraphComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - LevelGraphModule - Lazy loaded module as wrapper for all application modules and components which\n *                            should be accessible in the LevelGraphModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraph/levelgraphmodule.ts","\nimport { Logger } from '../../../../logger/logger';\nimport { LevelGraph } from '../../datamodels/levelgraph/levelgraph';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-levelgraphnode',\n  templateUrl: './levelgraphnode.component.html',\n  styleUrls: ['./levelgraphnode.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphNodeComponent - Lazy loaded component as wrapper for all other components in the LevelGraphNodeComponent\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphNodeComponent implements OnInit {\n\n  @Input()\n  currentLevelGraph: LevelGraph;\n\n  constructor() { }\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphNodeComponent', LevelGraphNodeComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphnode/levelgraphnode.component.ts","\nimport { Logger } from '../../../../../logger/logger';\nimport { LevelGraphNode } from '../../../datamodels/levelgraph/levelgraphnode';\nimport { LevelGraphNodeService } from '../../../dataservices/levelgraph/levelgraphnode.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-levelgraphnodedetails',\n  templateUrl: './levelgraphnodedetails.component.html',\n  styleUrls: ['./levelgraphnodedetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphNodeDetailsComponent - Lazy loaded component as wrapper for all other components in the LevelGraphNodeDetailsComponent\n *\n * @field - currentLevelGraphNode: LevelGraphNode - LevelGraphNode which is currently displayed\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                     cause a \"Over Flash\" for the user experience\n *\n * @author Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphNodeDetailsComponent implements OnInit {\n\n  currentLevelGraphNode: LevelGraphNode = new LevelGraphNode();\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private levelGraphNodeService: LevelGraphNodeService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphNodeDetailsComponent', LevelGraphNodeDetailsComponent.name);\n    this.route.queryParams.subscribe(params => {\n      this.currentLevelGraphNode.id = params['id'] || null;\n    });\n\n    this.retrieveLevelGraphNode(this.currentLevelGraphNode.id);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraphNode - Call the LevelGraphNodeService for loading LevelGraphNode from database into the application and subscribe for a callback.\n   *\n   * @param - id: number - ID of the LevelGraphNode which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveLevelGraphNode(id: number) {\n    Logger.info('Retrieve LevelGraphNode Data', LevelGraphNodeDetailsComponent.name);\n    this.levelGraphNodeService.getLevelGraphNode(id)\n      .subscribe(levelGraphNodeResponse => {\n        this.currentLevelGraphNode = levelGraphNodeResponse;\n        Logger.info('LevelGraphNode sucessfully retrieved.', LevelGraphNodeDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetails.component.ts","import { LevelGraphRelationComponent } from './levelgraphrelation.component';\r\nimport { LevelGraphRelationDetailsModule } from './levelgraphrelationdetails/levelgraphrelationdetails.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    RouterModule,\r\n    LevelGraphRelationDetailsModule\r\n  ],\r\n  declarations: [LevelGraphRelationComponent],\r\n  exports: [LevelGraphRelationComponent]\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @module - LevelGraphModule - Lazy loaded module as wrapper for all application modules and components which should be accessible in the LevelGraphModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class LevelGraphRelationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationmodule.ts","import { Logger } from '../../../../../logger/logger';\nimport { NodeTemplate } from '../../../datamodels/topology/nodetemplate';\nimport { NodeTemplateService } from '../../../dataservices/topologytemplate/nodetemplate.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nodetemplatedetails',\n  templateUrl: './nodetemplatedetails.component.html',\n  styleUrls: ['./nodetemplatedetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - NodeTemplateDetailsComponent - Lazy loaded component as wrapper for all other components in the NodeTemplateDetailsComponent\n *\n * @field - currentNodeTemplate: NodeTemplate - NodeTemplate which is currently displayed\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTemplateDetailsComponent implements OnInit {\n\n  currentNodeTemplate: NodeTemplate = new NodeTemplate();\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private nodeTemplateService: NodeTemplateService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize NodeTemplateDetailsComponent', NodeTemplateDetailsComponent.name);\n    this.route.queryParams.subscribe(params => {\n      this.currentNodeTemplate.id = params['id'] || null;\n    });\n\n    this.retrieveNodeTemplate(this.currentNodeTemplate.id);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveNodeTemplate - Call the NodeTemplateService for loading NodeTemplate from database into the application and subscribe for a callback.\n   *\n   * @param - id: number - ID of the NodeTemplate which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveNodeTemplate(id: number) {\n    Logger.info('Retrieve NodeTemplate Data', NodeTemplateDetailsComponent.name);\n    this.nodeTemplateService.getNodeTemplate(id)\n      .subscribe(nodeTemplateResponse => {\n        this.currentNodeTemplate = nodeTemplateResponse;\n        Logger.info('NodeTemplate sucessfully retrieved.', NodeTemplateDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.component.ts","import { RelationshipTemplateComponent } from './relationshiptemplate.component';\nimport { RelationshipTemplateDetailsModule } from './relationshiptemplatedetails/relationshiptemplatedetails.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    RelationshipTemplateDetailsModule\n  ],\n  declarations: [RelationshipTemplateComponent],\n  exports: [RelationshipTemplateComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - RelationshipTemplateModule - Lazy loaded module as wrapper for all application modules and components which should be accessible in the RelationshipTemplateModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTemplateModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplate.module.ts","import { Logger } from '../../../../../logger/logger';\nimport { RelationshipTemplate } from '../../../datamodels/topology/relationshiptemplate';\nimport { RelationshipTemplateService } from '../../../dataservices/topologytemplate/relationshiptemplate.service';\nimport { LevelGraphRelationDetailsComponent } from '../../levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-relationshiptemplatedetails',\n  templateUrl: './relationshiptemplatedetails.component.html',\n  styleUrls: ['./relationshiptemplatedetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - RelationshipTemplateDetailsComponent - Lazy loaded component as wrapper for all other components in the RelationshipTemplateDetailsComponent\n *\n * @field - currentRelationshipTemplate: RelationshipTemplate - RelationshipTemplate which is currently displayed\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTemplateDetailsComponent implements OnInit {\n\n  currentRelationshipTemplate: RelationshipTemplate = new RelationshipTemplate(null, null, null, null, null);\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private relationshipTemplateService: RelationshipTemplateService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphRelationDetailsComponent', LevelGraphRelationDetailsComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentRelationshipTemplate.id = params['id'] || null;\n    });\n\n    this.retrieveRelationshipTemplate(this.currentRelationshipTemplate.id);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraphRelation - Call the LevelGraphRelationService for loading LevelGraphNode from database into the application and subscribe for a callback.\n   *\n   * @param - id: number - ID of the LevelGraphRelation which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveRelationshipTemplate(id: number) {\n    Logger.info('Retrieve RelationshipTemplate Data', LevelGraphRelationDetailsComponent.name);\n    this.relationshipTemplateService.getRelationshipTemplate(id)\n      .subscribe(relationshipTemplateResponse => {\n        this.currentRelationshipTemplate = relationshipTemplateResponse;\n        Logger.info('RelationshipTemplate sucessfully retrieved.', LevelGraphRelationDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.component.ts","import { Logger } from '../../../../../logger/logger';\nimport { Repository } from '../../../datamodels/repository/repository';\nimport { RepositoryService } from '../../../dataservices/repository/repository.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-repositorydetails',\n  templateUrl: './repositorydetails.component.html',\n  styleUrls: ['./repositorydetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - RepositoryDetailsComponent - Lazy loaded component as wrapper for all other components in the\n *                                           RepositoryDetailsComponent\n *\n * @field - currentRepository: Repository - Repository which is currently displayed\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RepositoryDetailsComponent implements OnInit {\n\n  currentRepository: Repository = new Repository();\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private repositoryService: RepositoryService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method ngOnInit is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize RepositoryDetailsComponent', RepositoryDetailsComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentRepository.id = params['id'] || null;\n    });\n\n    this.retrieveRepositoryData(this.currentRepository.id);\n\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method retrieveRepositoryData - Call the RepositoryService for loading repository from database into the application and subscribe\n   *                                  for a callback.\n   *\n   * @param id: string - ID of the Repository which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveRepositoryData(id: string) {\n    Logger.info('Retrieve Repository Data', RepositoryDetailsComponent.name);\n    this.repositoryService.getRepository(id)\n      .subscribe(repositoryResponse => {\n        this.currentRepository = repositoryResponse;\n        Logger.info('Repositories sucessfully retrieved.', RepositoryDetailsComponent.name);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/repository/repositorydetails/repositorydetails.component.ts","import { Logger } from '../../../../../logger/logger';\nimport { TopologyTemplate } from '../../../datamodels/topology/topologytemplate';\nimport { TopologyTemplateService } from '../../../dataservices/topologytemplate/topologytemplate.service';\nimport { LevelGraphDetailsComponent } from '../../levelgraph/levelgrahdetails/levelgrahdetails.component';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-topologytemplatedetails',\n  templateUrl: './topologytemplatedetails.component.html',\n  styleUrls: ['./topologytemplatedetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component TopologyTemplateDetailsComponent - Lazy loaded component as wrapper for all other components in the\n *                                               TopologyTemplateDetailsComponent\n *\n * @author Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class TopologyTemplateDetailsComponent implements OnInit {\n\n  currentTopologyTemplate: TopologyTemplate = new TopologyTemplate();\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private topologyTemplateService: TopologyTemplateService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method ngOnInit is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphDetailsComponent', LevelGraphDetailsComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentTopologyTemplate.id = params['id'] || null;\n    });\n\n    this.retrieveTopologyTemplate(this.currentTopologyTemplate.id);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method retrieveRepositoryData - Call the RepositoryService for loading repository from database into the application and subscribe\n   *                                  for a callback.\n   *\n   * @param id: number - ID of the Repository which should be loaded from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveTopologyTemplate(id: number) {\n    Logger.info('Retrieve LevelGraph Data', LevelGraphDetailsComponent.name);\n    this.topologyTemplateService.getTopologyTemplate(id)\n      .subscribe(levelGraphResponse => {\n        this.currentTopologyTemplate = levelGraphResponse;\n        Logger.info('LevelGraph sucessfully retrieved.', LevelGraphDetailsComponent.name);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.component.ts","import { TopologyTemplateComponent } from './topologytemplate.component';\r\nimport { TopologyTemplateDetailsModule } from './topologytemplatedetails/topologytemplatedetails.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    FileUploadModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    TopologyTemplateDetailsModule,\r\n     RouterModule\r\n  ],\r\n  declarations: [TopologyTemplateComponent],\r\n  exports: [TopologyTemplateComponent]\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @module - TopologyTemplateModule - Lazy loaded module as wrapper for all application modules and components which\r\n *                                    should be accessible in the TopologyTemplateModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class TopologyTemplateModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topologytemplate/topologytemplatemodule.ts","import { Logger } from '../../../../../../logger/logger';\nimport { NodeType } from '../../../../../shared/datamodels/types/nodetype';\nimport { NodeTypeService } from '../../../../../shared/dataservices/types/nodetype.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-nodetypedetails',\n  templateUrl: './nodetypedetails.component.html',\n  styleUrls: ['./nodetypedetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - NodeTypeDetailsComponent Class - The component displays the details of a NodeType Object.\n *\n *\n * @field - currentNodeType: NodeType -  NodeType which is currently selected\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTypeDetailsComponent implements OnInit {\n\n  currentNodeType: NodeType = new NodeType();\n\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router, private nodeTypeService: NodeTypeService, private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize NodeTypeDetails Component', NodeTypeDetailsComponent.name);\n    this.route.queryParams.subscribe(params => {\n      this.currentNodeType.id = params['id'] || null;\n    });\n\n    this.retrieveNodeType(this.currentNodeType.id);\n\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveNodeType - Load NodeType with id from the database\n   *\n   * @param - id: number - ID of the NodeType witch should be loaded\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveNodeType(id: number) {\n    Logger.info('Retrieve Node Type Data', NodeTypeDetailsComponent.name);\n    this.nodeTypeService.getNodeType(id)\n      .subscribe(nodeTypeResponse => {\n        this.currentNodeType = nodeTypeResponse;\n        Logger.info('Node Type sucessfully retrieved.', NodeTypeDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.component.ts","import { PropertyModule } from '../../../../../shared/modules/metrics/property.module';\r\nimport { GeneralDataComponent } from './generaldata/generaldata.component';\r\nimport { NodeTypeDetailsComponent } from './nodetypedetails.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FileUploadModule, RouterModule, Ng2BootstrapModule.forRoot(), PropertyModule],\r\n    declarations: [NodeTypeDetailsComponent, GeneralDataComponent],\r\n    exports: [NodeTypeDetailsComponent, GeneralDataComponent]\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @module - NodeTypeDetailsModule - Lazy loaded module as wrapper for all application modules and components which\r\n *                                   should be accessible in the NodeTypeDetailsModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class NodeTypeDetailsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetlails.module.ts","import { NodeTypeComponent } from './nodetype.component';\nimport { NodeTypeDetailsModule } from './nodetypedetails/nodetypedetlails.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n@NgModule({\n  imports: [\n    FileUploadModule,\n    FormsModule,\n    CommonModule,\n    NodeTypeDetailsModule,\n    RouterModule\n  ],\n  declarations: [NodeTypeComponent],\n  exports: [NodeTypeComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - NodeTypeModule - Lazy loaded module as wrapper for all application modules and components which\n *                            should be accessible in the NodeTypeModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTypeModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/nodetype/nodetypemodule.ts","import { PropertyModule } from '../../../../../shared/modules/metrics/property.module';\r\nimport { GeneralDataComponent } from './generaldata/generaldata.component';\r\nimport { RelationshipTypeDetailsComponent } from './relationshiptypedetails.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FileUploadModule, RouterModule, Ng2BootstrapModule.forRoot(), PropertyModule],\r\n  declarations: [RelationshipTypeDetailsComponent, GeneralDataComponent],\r\n  exports: [RelationshipTypeDetailsComponent, GeneralDataComponent]\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @module - RelationshipTypeDetailsModule - Lazy loaded module as wrapper for all application modules and components which\r\n *                                           should be accessible in the RelationshipTypeDetailsModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class RelationshipTypeDetailsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshipdetails.module.ts","import { Logger } from '../../../../../../logger/logger';\nimport { RelationshipType } from '../../../../../shared/datamodels/types/relationshiptype';\nimport { RelationshipTypeService } from '../../../../../shared/dataservices/types/relationshiptype.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-relationshiptypedetails',\n  templateUrl: './relationshiptypedetails.component.html',\n  styleUrls: ['./relationshiptypedetails.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - RelationshipTypeDetailsComponent Class - The component displays the detaisl of a RelationshipType Object.\n *\n *\n * @field - currentRelationshipType: RelationshipType -  RelationshipType which is currently selected\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTypeDetailsComponent implements OnInit {\n\n  currentRelationshipType: RelationshipType = new RelationshipType();\n\n  public flashMessage = new FlashMessage();\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private relationshipTypeService: RelationshipTypeService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize RelationshipTypeDetails Component', RelationshipTypeDetailsComponent.name);\n\n    this.route.queryParams.subscribe(params => {\n      this.currentRelationshipType.id = params['id'] || null;\n    });\n\n    this.retrieveRelationshipType(this.currentRelationshipType.id);\n\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveRelationshipType - Load RelationshipType with id from the database\n   *\n   * @param - id: number - ID of the RelationshipType witch should be loaded\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveRelationshipType(id: number) {\n     Logger.info('Retrieve RelationshipType Data', RelationshipTypeDetailsComponent.name);\n    this.relationshipTypeService.getRelationshipType(id)\n      .subscribe(relationshipTypeResponse => {\n        this.currentRelationshipType = relationshipTypeResponse;\n        Logger.info('Relationship Type sucessfully retrieved.', RelationshipTypeDetailsComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshiptypedetails.component.ts","import { RelationshipTypeComponent } from './relationshiptype.component';\nimport { RelationshipTypeDetailsModule } from './relationshiptypedetails/relationshipdetails.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    FormsModule,\n    CommonModule,\n    FileUploadModule,\n    RelationshipTypeDetailsModule\n  ],\n  declarations: [RelationshipTypeComponent],\n  exports: [RelationshipTypeComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - RelationshipTypeModule - Lazy loaded module as wrapper for all application modules and components which\n *                                    should be accessible in the RelationshipTypeModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTypeModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypemodule.ts","/*********************************************************************************************************************************************************************************************************\n *\n * @class - Utility - Helper class for different methods like update a element in an array or delete an element from an array\n *\n * @author - Arthur Kaul\n *\n ********************************************************************************************************************************************************************************************************/\nexport class Utility {\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteElementFromArry - Delete an element from an array\n   *\n   * @param - id: number - ID of the element which should be removed from the array\n   * @param - array: any[] - Array of the elements\n   *\n   ******************************************************************************************************************************************************************************************************/\n  static deleteElementFromArry(id: number, array: any[]) {\n    array = array.filter(function(obj) {\n\n      return obj.id !== id;\n    });\n\n    return array;\n  }\n  \n    static deleteElementFromArryS(id: string, array: any[]) {\n    array = array.filter(function(obj) {\n\n      return obj.id !== id;\n    });\n\n    return array;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - updateElementInArry - Update an element from an array\n   *\n   * @param - element: any - Element which should be updated in the array\n   * @param - array: any[] - Array of the elements\n   *\n   ******************************************************************************************************************************************************************************************************/\n  static updateElementInArry(element: any, array: any[]) {\n\n    for (let i = 0; i < array.length; i++) {\n\n      if (element.id === array[i].id) {\n        array[i] = element;\n      }\n\n    }\n\n    return array;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utility.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 458;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 458\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { AppComponent } from './app.component';\nimport { routes } from './app.routes';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { ExportXmlService } from './shared/dataservices/exportxml.service';\nimport { RepositoryService } from './shared/dataservices/repository/repository.service';\nimport { LevelService } from './shared/dataservices/levelgraph/level.service';\nimport { LevelGraphService } from './shared/dataservices/levelgraph/levelgraph.service';\nimport { LevelGraphNodeService } from './shared/dataservices/levelgraph/levelgraphnode.service';\nimport { LevelGraphRelationService } from './shared/dataservices/levelgraph/levelgraphrelation.service';\nimport { ExpectedPropertyService } from './shared/dataservices/metrics/expectedproperty.service';\nimport { NodeTypeService } from './shared/dataservices/types/nodetype.service';\nimport { RelationshipTypeService } from './shared/dataservices/types/relationshiptype.service';\nimport { TopologyTemplateService } from './shared/dataservices/topologytemplate/topologytemplate.service';\nimport { NodeTemplateService } from './shared/dataservices/topologytemplate/nodetemplate.service';\nimport { RelationshipTemplateService } from './shared/dataservices/topologytemplate/relationshiptemplate.service';\nimport { PropertyService } from './shared/dataservices/metrics/property.service';\nimport { ProvidedPropertyService } from './shared/dataservices/metrics/providedpropertyservice.service';\nimport { RefinementService } from './shared/dataservices/refinement/refinement.service';\nimport 'hammerjs';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(routes),\n    DashboardModule\n  ],\n  providers: [ExportXmlService, RefinementService, ExpectedPropertyService, ProvidedPropertyService, PropertyService, RepositoryService, RelationshipTemplateService, NodeTemplateService, LevelGraphRelationService, NodeTypeService, RelationshipTypeService, LevelGraphService, LevelService, LevelGraphNodeService, TopologyTemplateService],\n  bootstrap: [AppComponent]\n})\n\n/*********************************************************************************************************************************************************************************************************\n *\n * @module - AppModule - Module as wrapper for the whole application modules and components. It is the root module of the application.\n *                       You should register all services here so that the are accessible from everywhere.\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes } from '@angular/router';\n\nimport { DashboardRoutes } from './dashboard/dashboard.routes';\n\n/*********************************************************************************************************************************************************************************************************\n *\n * @route - Routes - Path for the entry point of the application and for all components and modules which\n *                   should be accessible from the application root\n *\n * @author - Arthur Kaul\n *\n ********************************************************************************************************************************************************************************************************/\nexport const routes: Routes = [\n  ...DashboardRoutes,\n  { path: '**', redirectTo: 'dashboard/administration', pathMatch: 'full' }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","import { LevelGraphModule } from '../../shared/modules/levelgraph/levelgraphmodule';\r\nimport { PropertyModule } from '../../shared/modules/metrics/property.module';\r\nimport { AdministrationComponent } from './administration.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\r\nimport { RepositoryModule } from '../../shared/modules/repository/repositorymodule';\r\nimport { TopologyTemplateModule } from '../../shared/modules/topologytemplate/topologytemplatemodule';\r\nimport { NodeTypeModule } from '../../shared/modules/types/nodetype/nodetypemodule';\r\nimport { RelationshipTypeModule } from '../../shared/modules/types/relationshiptype/relationshiptypemodule';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\n\r\n@NgModule({\r\n  imports: [FileUploadModule, LevelGraphModule, RepositoryModule, TopologyTemplateModule, NodeTypeModule, RelationshipTypeModule, PropertyModule, CommonModule, RouterModule, Ng2BootstrapModule.forRoot()],\r\n  declarations: [AdministrationComponent],\r\n  exports: [AdministrationComponent]\r\n})\r\n\r\n/*******************************************************************************************************************\r\n *\r\n * @module - AdministrationModule - Lazy loaded module as wrapper for all application modules and components which\r\n *                                  should be accessible in the AdministrationModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n ******************************************************************************************************************/\r\nexport class AdministrationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/administration/administration.module.ts","import { AdministrationComponent } from './administration.component';\n\nimport { Route } from '@angular/router';\n\n/*******************************************************************************************************************\n *\n * @route - AdministrationRoutes - Path for the navigation to the AdministrationModule\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const AdministrationRoutes: Route[] = [\n  {\n    path: 'administration',\n    component: AdministrationComponent\n\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/administration/administration.routes.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\nimport { DashboardComponent } from './dashboard.component';\nimport { TopNavComponent } from '../shared/index';\nimport { AdministrationModule } from './administration/administration.module';\nimport { LevelGraphToolModule } from './levelgraphtool/levelgraphtool.module';\nimport { TopologyTemplateToolModule } from './topologytool/topologytemplatetool.module';\n\n@NgModule({\n  imports: [\n    TopologyTemplateToolModule,\n    LevelGraphToolModule,\n    CommonModule,\n    RouterModule,\n    AdministrationModule,\n    Ng2BootstrapModule.forRoot()\n  ],\n  declarations: [DashboardComponent, TopNavComponent],\n  exports: [DashboardComponent, TopNavComponent]\n})\n\n/*******************************************************************************************************************\n *\n * @module - DashboardModule - Lazy loaded module as wrapper for all application modules and components which should\n *                             be accessible in the TopologyToolModule\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport class DashboardModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.module.ts","import { LevelGraphDetailsRoutes } from '../shared/modules/levelgraph/levelgrahdetails/levelgraphdetails.routes';\nimport { LevelGraphNodeDetailsRoutes } from '../shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetailsroutes';\nimport { LevelGraphRelationDetailsRoutes } from '../shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetailsroutes';\nimport { NodeTemplateDetailsRoutes } from '../shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.routes';\nimport { RelationshipTemplateDetailsRoutes } from '../shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.routes';\nimport { RepositoryDetailsRoutes } from '../shared/modules/repository/repositorydetails/repositorydetails.routes';\nimport { TopologyTemplatesDetailsRoutes } from '../shared/modules/topologytemplate/topologytemplatedetails/topologytemplatesdetails.routes';\nimport { NodeTypeDetailsRoutes } from '../shared/modules/types/nodetype/nodetypedetails/nodetypedetails.routes';\nimport { RelationshipDetailsRoutes } from '../shared/modules/types/relationshiptype/relationshiptypedetails/relationshipdetails.routes';\nimport { Route } from '@angular/router';\nimport { AdministrationRoutes } from './administration/administration.routes';\nimport { DashboardComponent } from './dashboard.component';\nimport { LevelGraphModellerRoutes } from './levelgraphtool/levelgraphmodeller/levelgraphmodeller.routes';\nimport { LevelGraphToolRoutes } from './levelgraphtool/levelgraphtool.routes';\nimport { TopologyModellerRoutes } from './topologytool/topologymodeller/topologymodeller.routes';\nimport { TopologyTemplateToolRoutes } from './topologytool/topologytemplatetool.routes';\n\n/*******************************************************************************************************************\n *\n * @route - DashboardRoutes - Path for the navigation handling in the front-end for all components and modules which\n *                            should be accessible from the DashboardModule\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const DashboardRoutes: Route[] = [\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    children: [\n      ...AdministrationRoutes,\n      ...LevelGraphToolRoutes,\n      ...TopologyTemplateToolRoutes,\n      ...LevelGraphModellerRoutes,\n      ...TopologyModellerRoutes,\n      ...RepositoryDetailsRoutes,\n      ...NodeTypeDetailsRoutes,\n      ...RelationshipDetailsRoutes,\n      ...LevelGraphDetailsRoutes,\n      ...LevelGraphNodeDetailsRoutes,\n      ...LevelGraphRelationDetailsRoutes,\n      ...TopologyTemplatesDetailsRoutes,\n      ...NodeTemplateDetailsRoutes,\n      ...RelationshipTemplateDetailsRoutes\n    ],\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.routes.ts","\nimport { LevelGraphModellerComponent } from './levelgraphmodeller.component';\nimport { Route } from '@angular/router';\n\n/*******************************************************************************************************************\n *\n * @route - LevelGraphModellerRoutes path for the navigation handling in the front-end\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const LevelGraphModellerRoutes: Route[] = [\n    {\n      path: 'levelgraphmodeller',\n      component: LevelGraphModellerComponent,\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.routes.ts","import { LevelGraphModellerComponent } from './levelgraphmodeller/levelgraphmodeller.component';\r\nimport { LevelGraphModule } from '../../shared/modules/levelgraph/levelgraphmodule';\r\nimport { NodeTypeDetailsModule } from '../../shared/modules/types/nodetype/nodetypedetails/nodetypedetlails.module';\r\nimport { RelationshipTypeDetailsModule } from '../../shared/modules/types/relationshiptype/relationshiptypedetails/relationshipdetails.module';\r\nimport { LevelGraphToolComponent } from './levelgraphtool.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FileUploadModule } from 'ng2-file-upload';\n\r\n@NgModule({\r\n  imports: [ LevelGraphModule, NodeTypeDetailsModule, RelationshipTypeDetailsModule, FileUploadModule, CommonModule, RouterModule, Ng2BootstrapModule.forRoot()],\r\n  declarations: [LevelGraphToolComponent, LevelGraphModellerComponent ],\r\n  exports: [LevelGraphToolComponent, LevelGraphModellerComponent ]\r\n})\r\n\r\n/*******************************************************************************************************************\r\n *\r\n * @module - LevelGraphToolModule for importing other modules and declaration/export the components\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n ******************************************************************************************************************/\r\nexport class LevelGraphToolModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/levelgraphtool/levelgraphtool.module.ts","import { LevelGraphToolComponent } from './levelgraphtool.component';\nimport { Route } from '@angular/router';\n\n/*******************************************************************************************************************\n *\n * @route - LevelGraphToolRoutes path for the navigation handling in the front-end\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const LevelGraphToolRoutes: Route[] = [\n  {\n    path: 'levelgraphtool',\n    component: LevelGraphToolComponent,\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/levelgraphtool/levelgraphtool.routes.ts","import { ExpectedProperty } from '../metrics/expectedproperty';\nimport { ProvidedProperty } from '../metrics/providedproperty';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - Entity - Superclass for all entities like LevelGraphNodes, NodeTypes, NodeTemplates. etc. if you want to extend the data of all this objects for example with metrics put this\n *                   data as fields into this class like the expected and provided properties.\n *\n * @field - id: number - ID of the Entity\n * @field - name: string - Name of the Entity\n * @field - expectedProperties: ExpectedProperty[] - Array of expected properties of the entity\n * @field - providedProperties: ProvidedProperty[] - Array of provided properties of the entity\n *\n * @hint - Further improvement: You may decide to add an view object as field for graphical representation to decouple view data from processing data\n * @hint - Currently only a default constructor is supported one some data models you may decide to overload this constructors\n * @hint - Currently no getters and setters are used for accessing the fields you may decide to implement them. But this may lead to errors at runtime if you set the fields to private because,\n *         sometimes you have Objects of type any which don`t no the getter and setter of the field and you have to at this places the . operator.\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class Entity {\n\n  id: number;\n  name: string;\n  expectedProperties: ExpectedProperty[];\n  providedProperties: ProvidedProperty[];\n\n  icon: string;\n\n  constructor() {\n    this.id = null;\n    this.name = 'Unnamed';\n    this.expectedProperties = [];\n    this.providedProperties = [];\n    this.icon = '/assets/img/nodeTypeDefault.png';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/entity/entity.ts","import { TopologyModellerComponent } from './topologymodeller.component';\nimport { Route } from '@angular/router';\n\n/*******************************************************************************************************************\n *\n * @route - TopologyModellerRoutes - Path to the TopologyModellerComponent\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const TopologyModellerRoutes: Route[] = [\n    {\n      path: 'topologymodeller',\n      component: TopologyModellerComponent,\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/topologytool/topologymodeller/topologymodeller.routes.ts","import { TopologyModellerComponent } from './topologymodeller/topologymodeller.component';\r\nimport { TopologyTemplateModule } from '../../shared/modules/topologytemplate/topologytemplatemodule';\r\nimport { TopologyTemplateToolComponent } from './topologytemplatetool.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    imports: [TopologyTemplateModule, CommonModule, RouterModule, Ng2BootstrapModule.forRoot()],\r\n    declarations: [TopologyTemplateToolComponent, TopologyModellerComponent],\r\n    exports: [TopologyTemplateToolComponent, TopologyModellerComponent]\r\n})\r\n\r\n/****************************************************************************************************************************************\r\n *\r\n * @module - TopologyTemplateToolModule - Lazy loaded module as wrapper for all components which should be accessible in the\r\n *                                        TopologyToolModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n ***************************************************************************************************************************************/\r\nexport class TopologyTemplateToolModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/topologytool/topologytemplatetool.module.ts","import { TopologyTemplateToolComponent } from './topologytemplatetool.component';\nimport { Route } from '@angular/router';\n\n/*******************************************************************************************************************\n *\n * @route - TopologyTemplateToolRoutes - Path to the TopologyTemplateToolComponent\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const TopologyTemplateToolRoutes: Route[] = [\n    {\n      path: 'topologytemplatetool',\n      component: TopologyTemplateToolComponent,\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/topologytool/topologytemplatetool.routes.ts","/*********************************************************************************************************************************************************************************************************\n *  This barrel file provides the export for the lazy loaded AppComponent.\n ********************************************************************************************************************************************************************************************************/\nexport * from './app.module';\nexport * from './app.component';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","/**********************************************************************************************************************************************************************************************************\n *\n * @class - LevelGraphRelationType - Collection of all constant types of a LevelGraphRelation which are currently supported by the application\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphRelationType {\n  public static readonly REFINE_TO = 'REFINE_TO';\n  public static readonly CONNECT_OVER_TO = 'CONNECT_OVER_TO';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/levelgraphrelationtype.ts","import { Logger } from '../../../../logger/logger';\nimport { Property } from '../../datamodels/metrics/property';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - PropertyService  - Implements the calls to the rest interface of the application server and\n *                               handle the request construction and response extraction for Property data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class PropertyService {\n\n  // URL of the REST Interface End-Point\n  private propertyUrl = '/api/properties';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getProperties - Send GET all Properties REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getProperties(): Observable<Property[]> {\n    Logger.info('[REQUEST - PROPERTY] Send GET Properties Request', PropertyService.name);\n    return this.http.get(this.propertyUrl).map(this.extractProperties).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getProperty - Send GET Property REQUEST\n   *\n   * @param - id: number - Property which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getProperty(id: number): Observable<Property> {\n    Logger.info('[REQUEST - PROPERTY] Send GET Property Request with ID:' + id, PropertyService.name);\n    return this.http.get(this.propertyUrl + '/' + id).map(this.extractProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createProperty - Send POST Property REQUEST\n   *\n   * @param - property: Property - Property which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createProperty(property: Property): Observable<Property> {\n    Logger.info('[REQUEST - PROPERTY] Send POST Property Request', PropertyService.name);\n    Logger.data('[REQUEST - PROPERTY]' + JSON.stringify(property), PropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.propertyUrl, property, options).map(this.extractProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateProperty - Send PUT Property REQUEST\n   *\n   * @param - property: Property - Property which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateProperty(property: Property): Observable<Property> {\n    Logger.info('[REQUEST - PROPERTY] Send PUT Request Property', PropertyService.name);\n    Logger.data('[REQUEST - PROPERTY] ' + JSON.stringify(property), PropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.propertyUrl + '/' + property.id, property, options).map(this.extractProperty).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteProperty - Send DELETE Property REQUEST\n   *\n   * @param - id: number - ID of the Property which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteProperty(id: number): Observable<Property> {\n    Logger.info('[REQUEST - PROPERTY] Send DELETE NodeType Request with ID: ' + id, PropertyService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.propertyUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response -extractProperties - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractProperties(res: Response) {\n    Logger.info('[RESPONSE - PROPERTY]: Extract Data of Response Body', PropertyService.name);\n    let body = res.json();\n    let propertyList: Property[] = [];\n    Logger.data('[RESPONSE - PROPERTY]: ' + JSON.stringify(body), PropertyService.name);\n    for (let property of body) {\n      let tempProperty: Property = new Property(property.name, property.value);\n      tempProperty = property;\n      propertyList.push(tempProperty);\n    }\n    return propertyList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractProperty - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractProperty(res: Response) {\n    Logger.info('[RESPONSE - PROPERTY]: Extract Data of Response Body', PropertyService.name);\n    let body = res.json();\n    Logger.data('[RESPONSE - PROPERTY]: ' + JSON.stringify(body), PropertyService.name);\n    let property: Property = new Property(body.name, body.value);\n    property = body;\n    return property || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/metrics/property.service.ts","/*********************************************************************************************************************************************************************************************************\n * This barrel file provides the exports for the shared resources (services, components).\n ********************************************************************************************************************************************************************************************************/\nexport * from './modules/topnav/index';\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/index.ts","import { LevelGraphNodeModule } from '../../levelgraphnode/levelgraphnodemodule';\nimport { LevelGraphRelationModule } from '../../levelgraphrelation/levelgraphrelationmodule';\nimport { LevelGraphDetailsComponent } from './levelgrahdetails.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\n\n@NgModule({\n  imports: [LevelGraphNodeModule, LevelGraphRelationModule, CommonModule, RouterModule, Ng2BootstrapModule.forRoot()],\n  declarations: [LevelGraphDetailsComponent],\n  exports: [LevelGraphDetailsComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - LevelGraphDetailsModule - Lazy loaded module as wrapper for all application modules and components which\n *                                     should be accessible in the LevelGraphDetailsModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphDetailsModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraph/levelgrahdetails/levelgraphdetails.module.ts","import { LevelGraphDetailsComponent } from './levelgrahdetails.component';\nimport { Route } from '@angular/router';\n\n/********************************************************************************************************************************************************************************************************\n *\n * @route - LevelGraphDetailsRoutes - Path for the navigation to the RepositoryDetailsComponent\n *\n * @author - Arthur Kaul\n *\n *******************************************************************************************************************************************************************************************************/\nexport const LevelGraphDetailsRoutes: Route[] = [\n  {\n    path: 'levelgraph',\n    component: LevelGraphDetailsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraph/levelgrahdetails/levelgraphdetails.routes.ts","import {Logger} from '../../../../logger/logger';\nimport {Constants} from '../../constants/constants';\nimport {Level} from '../../datamodels/levelgraph/level';\nimport {LevelGraph} from '../../datamodels/levelgraph/levelgraph';\nimport {Component, OnInit, Input} from '@angular/core';\n\nimport {FlashMessage} from 'angular2-flash-message';\nimport {LevelService} from '../../dataservices/levelgraph/level.service';\nimport {LevelGraphService} from '../../dataservices/levelgraph/levelgraph.service';\nimport {Utility} from '../../../utility';\nimport {ExportXmlService} from '../../dataservices/exportxml.service';\nimport {FlashMessageService} from 'angular2-flash-message';\nimport * as FileSaver from 'file-saver';\nimport {FileUploader} from 'ng2-file-upload';\n\n\n// URL for XML Import\nconst URL_IMPORT = '/api/import/levelgraph';\n\n// URL for XML Export\nconst URL_EXPORT = '/levelgraph';\n\n\n@Component({\n  selector: 'app-levelgraph',\n  templateUrl: './levelgraph.component.html',\n  styleUrls: ['./levelgraph.component.css']\n})\n\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphComponent - Entry point for the LevelGraphModellerComponent and for select, create, delete, update or edit a Level Graph\n *\n * @fields - levels: number - Number of levels which should be created in the new LevelGraph\n * @fields - levelGraphs: LevelGraph[] - Array of all available LevelGraphs in the database\n * @fields - createdLevelGraph: LevelGraph - Level Graph which should be created\n * @fields - editedLevelGraph: LevelGraph - Level Graph which should be deleted\n * @fields - private flashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                  cause a \"Over Flash\" for the user experience\n *\n * @Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphComponent implements OnInit {\n\n  levels = 3;\n\n  @Input()\n  levelGraphs: LevelGraph[] = [];\n\n  createdLevelGraph: LevelGraph = new LevelGraph();\n  editedLevelGraph: LevelGraph = new LevelGraph();\n  private flashMessage = new FlashMessage();\n  public uploader: FileUploader = new FileUploader({});\n\n  constructor(private xmlExportSerivce: ExportXmlService, private levelGraphService: LevelGraphService, private levelService: LevelService, private flashMessageService: FlashMessageService) {}\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit is called when the component is initialized\n   *\n   ********************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphComponent', LevelGraphComponent.name);\n    this.flashMessage.timeoutInMS = 4000;\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - createLevelGraph - Call the LevelGraphService for creating a new LevelGraph in the database and subscribe for a callback\n   *\n   * @param - numberOfLevels: number - Number of different levels in the LevelGraph\n   *\n   *******************************************************************************************************************************************************************************************************/\n  createLevelGraph(numberOfLevels: number) {\n    Logger.info('Create LevelGraph', LevelGraphComponent.name);\n    this.levelGraphService.createLevelGraph(this.createdLevelGraph).subscribe(levelGraphResponse => {\n      for (let i = 0; i < numberOfLevels; i++) {\n        let tempLevel = new Level((i), (i * Constants.LEVELHEIGHT + i * Constants.LEVELGAPOFFSET), levelGraphResponse.id);\n        tempLevel.levelGraph = levelGraphResponse;\n        this.levelService.createLevel(tempLevel)\n          .subscribe(levelResponse => {\n            levelGraphResponse.levels.push(levelResponse);\n            Logger.info('Level was created sucessfully with id: ' + levelResponse.id, LevelGraphComponent.name);\n          },\n          (error) => {\n            this.flashMessage.message = error;\n            this.flashMessage.isError = true;\n            this.flashMessageService.display(this.flashMessage);\n          });\n      }\n      this.levelGraphs.push(levelGraphResponse);\n      Logger.info('LevelGraph with name: ' + levelGraphResponse.name + ' was created sucessfully with id: ' + levelGraphResponse.id, LevelGraphComponent.name);\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - retrieveLevelGraphs - Call the LevelGraphService for loading all LevelGraphs from database into the application and subscribe\n   *                                 for a callback. Currently no pagination/streaming of data is supported\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveLevelGraphs() {\n    Logger.info('Retrieve LevelGraph Data', LevelGraphComponent.name);\n    this.levelGraphService.getLevelGraphs()\n      .subscribe(levelGraphsResponse => {\n        this.levelGraphs = levelGraphsResponse;\n        Logger.info('Level Graphs sucessfully retrieved.', LevelGraphComponent.name);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - updateLevelGraph - Call the LevelGraphService for updating the LevelGraph in the database and subscribe for a callback.\n   *\n   * @param name: string - New name of the Level Graph\n   *\n   *******************************************************************************************************************************************************************************************************/\n  updateLevelGraph(name: string) {\n    Logger.info('Update LevelGraph', LevelGraphComponent.name);\n    this.editedLevelGraph.name = name;\n    this.levelGraphService.updateLevelGraph(this.editedLevelGraph)\n      .subscribe(levelGraphResponse => {\n        this.levelGraphs = Utility.updateElementInArry(levelGraphResponse, this.levelGraphs);\n        Logger.info('Level Graph with id: ' + levelGraphResponse.id + ' and name:' + levelGraphResponse.name + ' was updated sucessfully.', LevelGraphComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method deleteLevelGraph - Call the LevelGraphService for delete a LevelGraph from the database and subscribe for a callback.\n   *\n   * @param id: number - ID of the LevelGraph witch should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  deleteLevelGraph(id: number) {\n    this.levelGraphService.deleteLevelGraph(id)\n      .subscribe(response => {\n        this.levelGraphs = Utility.deleteElementFromArry(id, this.levelGraphs);\n        Logger.info('Level Graph with id: ' + id + ' was deleted sucessfully.', LevelGraphComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - importLevelGraph - Call the ImportService for upload a XML file to the server component and import the data of the XML file\n   *\n   *******************************************************************************************************************************************************************************************************/\n  importLevelGraph() {\n    this.uploader.setOptions({url: URL_IMPORT});\n    this.uploader.uploadAll();\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      let levelGraph: LevelGraph = new LevelGraph();\n      levelGraph = JSON.parse(response);\n         this.levelGraphService.updateLevelGraph(levelGraph)\n      .subscribe(levelGraphResponse => {\n         this.levelGraphs.push(levelGraphResponse);\n        Logger.info('Level Graph with id: ' + levelGraphResponse.id + ' and name:' + levelGraphResponse.name + ' was updated sucessfully.', LevelGraphComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n    };\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - exportLevelGraph - Call the ExportService for retrieve a repository in XML data structure and export the data of the body as XML file to Client/Bowser\n   *\n   * @param - levelGraph: LevelGraph - LevelGraph which should be exported from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  exportLevelGraph(levelGraph: LevelGraph) {\n    this.xmlExportSerivce.getXmlFile(URL_EXPORT + '/' + levelGraph.id).subscribe(\n      res => {\n        FileSaver.saveAs(res, levelGraph.name + '.xml');\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - setEditedLevelGraph - Set the editable LevelGraph Data\n   * @param - repository - The levelGraph witch should be edit\n   *\n   *******************************************************************************************************************************************************************************************************/\n  setEditedLevelGraph(levelGraph: LevelGraph) {\n    this.editedLevelGraph = levelGraph;\n  }\n\n  addLevel() {\n    this.levels++;\n  }\n\n  removeLevel() {\n    if (this.levels > 2) {\n      this.levels--;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraph/levelgraph.component.ts","import { Logger } from '../../../../logger/logger';\nimport { LevelGraph } from '../../datamodels/levelgraph/levelgraph';\nimport { Injectable } from '@angular/core';\nimport { Response, Headers, RequestOptions, Http } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - LevelGraphService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for LevelGraph Data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class LevelGraphService {\n\n  // URL of the REST Interface End-Point\n  private levelGraphUrl = '/api/levelgraphs';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevelGraphs- Send GET all Level Graphs REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevelGraphs(): Observable<LevelGraph[]> {\n    Logger.info('[REQUEST - LEVELGRAPH]: Send GET Request Level Graphs', LevelGraphService.name);\n    return this.http.get(this.levelGraphUrl).map(this.extractLevelGraphs).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevelGraph - Send GET Level Graph REQUEST\n   *\n   * @param - id: number - ID of the LevelGraph which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevelGraph(id: number): Observable<LevelGraph> {\n    Logger.info('[REQUEST - LEVELGRAPH]: Send GET Request Level Graph with ID: ' + id, LevelGraphService.name);\n    return this.http.get(this.levelGraphUrl + '/' + id)\n      .map(this.extractLevelGraph)\n      .catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createLevelGraph - Send POST Level Graph REQUEST\n   *\n   * @param - levelGraph: LevelGraph - LevelGraph which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createLevelGraph(levelGraph: LevelGraph): Observable<LevelGraph> {\n    Logger.info('[REQUEST - LEVELGRAPH]: Send POST Request Level Graph', LevelGraphService.name);\n    Logger.data('[REQUEST - LEVELGRAPH]: ' + JSON.stringify(levelGraph), LevelGraphService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.levelGraphUrl, levelGraph, options)\n      .map(this.extractLevelGraph)\n      .catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateLevelGraph - Send PUT Level Graph REQUEST\n   *\n   * @param - levelGraph: LevelGraph - LevelGraphRelation which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateLevelGraph(levelGraph: LevelGraph): Observable<LevelGraph> {\n    Logger.info('[REQUEST - LEVELGRAPH]: Send PUT Request Level Graph', LevelGraphService.name);\n    Logger.data('[REQUEST - LEVELGRAPH]: ' + JSON.stringify(levelGraph), LevelGraphService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.levelGraphUrl + '/' + levelGraph.id, levelGraph, options)\n      .map(this.extractLevelGraph)\n      .catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteLevelGraph - Send DELETE Level Graph REQUEST\n   *\n   * @param - id: number - ID of the LevelGraph which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteLevelGraph(id: number): Observable<LevelGraph> {\n    Logger.info('[REQUEST - LEVELGRAPH]: Send DELETE Request Level Graph', LevelGraphService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.levelGraphUrl + '/' + id, options)\n      .map(res => res)\n      .catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevelGraphs - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractLevelGraphs(res: Response) {\n    let body = res.json();\n    let levelGraphList: LevelGraph[] = [];\n    Logger.info('[RESPONSE - LEVELGRAPH]: Extract Level Graph Data List', LevelGraphService.name);\n    Logger.info('[RESPONSE - LEVELGRAPH]: ' + JSON.stringify(body), LevelGraphService.name);\n    for (let levelGraph of body) {\n      let tempLevelGraph: LevelGraph = new LevelGraph();\n      tempLevelGraph = levelGraph;\n      levelGraphList.push(tempLevelGraph);\n    }\n    return levelGraphList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevelGraph -  Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractLevelGraph(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - LEVELGRAPH]: Extract Level Graph Data', LevelGraphService.name);\n    Logger.info('[RESPONSE - LEVELGRAPH]: ' + JSON.stringify(body), LevelGraphService.name);\n    let levelGraph: LevelGraph = new LevelGraph();\n    levelGraph = body;\n    return levelGraph || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/levelgraph/levelgraph.service.ts","import { Logger } from '../../../../../../logger/logger';\nimport { LevelGraphNode } from '../../../../datamodels/levelgraph/levelgraphnode';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-generaldata',\n  templateUrl: './generaldata.component.html',\n  styleUrls: ['./generaldata.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - GeneralDataComponent Class - The component displays the general data of a LevelGraphNode Object.\n *\n * @field - currentLevelGraphNode: LevelGraphNode -  LevelGraphNode which is currently selected\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class GeneralDataComponent implements OnInit {\n\n  @Input()\n  currentLevelGraphNode: LevelGraphNode;\n\n  constructor() { }\n\n  /********************************************************************************************************************************************************************************************************\n  *\n  * @method - ngOnInit - Is called when the component is initialized\n  *\n  *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize GeneralDataComponent Component', GeneralDataComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/generaldata/generaldata.component.ts","import { LevelGraphRelationModule } from '../../levelgraphrelation/levelgraphrelationmodule';\nimport { PropertyModule } from '../../metrics/property.module';\nimport { GeneralDataComponent } from './generaldata/generaldata.component';\nimport { LevelGraphNodeDetailsComponent } from './levelgraphnodedetails.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    PropertyModule,\n    LevelGraphRelationModule\n  ],\n  declarations: [LevelGraphNodeDetailsComponent, GeneralDataComponent],\n  exports: [LevelGraphNodeDetailsComponent, GeneralDataComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - LevelGraphNodeDetailsModule - Lazy loaded module as wrapper for all application modules and components which\n *                                       should be accessible in the LevelGraphNodeDetailsModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphNodeDetailsModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetailsmodule.ts","import { LevelGraphNodeDetailsComponent } from './levelgraphnodedetails.component';\nimport { Route } from '@angular/router';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @route - LevelGraphNodeDetailsRoutes - Path for the navigation to the LevelGraphNodeDetailsRoutes\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport const LevelGraphNodeDetailsRoutes: Route[] = [\n  {\n    path: 'levelgraphnodedetails',\n    component: LevelGraphNodeDetailsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetailsroutes.ts","import { LevelGraphNodeComponent } from './levelgraphnode.component';\nimport { LevelGraphNodeDetailsModule } from './levelgraphnodedetails/levelgraphnodedetailsmodule';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    LevelGraphNodeDetailsModule\n  ],\n  declarations: [LevelGraphNodeComponent],\n  exports: [LevelGraphNodeComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - LevelGraphNodeModule - Lazy loaded module as wrapper for all application modules and components which should be accessible in the LevelGraphNodeModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphNodeModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodemodule.ts","import { Logger } from '../../../../logger/logger';\nimport { LevelGraphRelation } from '../../datamodels/levelgraph/levelgraphrelation';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-levelgraphrelation',\n  templateUrl: './levelgraphrelation.component.html',\n  styleUrls: ['./levelgraphrelation.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - LevelGraphRelationComponent - Lazy loaded component as wrapper for all other components in the LevelGraphRelationComponent\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphRelationComponent implements OnInit {\n\n  @Input()\n  currentLevelGraphRelations: LevelGraphRelation[];\n\n  constructor() { }\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphRelationComponent', LevelGraphRelationComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelation.component.ts","import { Logger } from '../../../../../../logger/logger';\nimport { LevelGraphRelation } from '../../../../datamodels/levelgraph/levelgraphrelation';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-generaldata',\n  templateUrl: './generaldata.component.html',\n  styleUrls: ['./generaldata.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - GeneralDataComponent Class - The component displays the general data of a LevelGraphRelation Object.\n *\n * @field - currentLevelGraphRelation: LevelGraphRelation -  LevelGraphRelation which is currently selected\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class GeneralDataComponent implements OnInit {\n\n  @Input()\n  currentLevelGraphRelation: LevelGraphRelation;\n\n  constructor() { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize GeneralDataComponent Component', GeneralDataComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/generaldata/generaldata.component.ts","import { PropertyModule } from '../../metrics/property.module';\nimport { GeneralDataComponent } from './generaldata/generaldata.component';\nimport { LevelGraphRelationDetailsComponent } from './levelgraphrelationdetails.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    PropertyModule\n  ],\n  declarations: [LevelGraphRelationDetailsComponent, GeneralDataComponent],\n  exports: [LevelGraphRelationDetailsComponent, GeneralDataComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - LevelGraphRelationDetailsModule - Lazy loaded module as wrapper for all application modules and components which\n *                                             should be accessible in the LevelGraphRelationDetailsModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class LevelGraphRelationDetailsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.module.ts","import { LevelGraphRelationDetailsComponent } from './levelgraphrelationdetails.component';\nimport { Route } from '@angular/router';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @route - LevelGraphRelationDetailsRoutes - Path for the navigation to the LevelGraphRelationDetailsRoutes\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport const LevelGraphRelationDetailsRoutes: Route[] = [\n  {\n    path: 'levelgraphrelationdetails',\n    component: LevelGraphRelationDetailsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetailsroutes.ts","import { Logger } from '../../../../../logger/logger';\nimport { Utility } from '../../../../utility';\nimport { Entity } from '../../../datamodels/entity/entity';\nimport { ExpectedProperty } from '../../../datamodels/metrics/expectedproperty';\nimport { ExpectedPropertyService } from '../../../dataservices/metrics/expectedproperty.service';\nimport { RelationshipTypeService } from '../../../dataservices/types/relationshiptype.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-expectedproperty',\n  templateUrl: './expectedproperty.component.html',\n  styleUrls: ['./expectedproperty.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - ExpectedPropertyComponent - The component retrieve all available ExpectedProperty of the currently selected Entity\n *                                          from the database and list them. You can create, delete or edit the ExpectedProperty.\n *\n * @field/@input - entity: Entity -  Parent of the ExpectedProperty\n * @field - createdExpectedProperty: ExpectedProperty - ExpectedProperty which should be created\n * @field - editExpectedProperty: ExpectedProperty - ProvidedProperty which should be edit\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                     cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class ExpectedPropertyComponent implements OnInit {\n\n  @Input()\n  entity: Entity;\n\n  createdExpectedProperty: ExpectedProperty = new ExpectedProperty('Unnamed', 'Undefined');\n  editExpectedProperty: ExpectedProperty = new ExpectedProperty('Unnamed', 'Undefined');\n\n  public flashMessage = new FlashMessage();\n\n  constructor(private relationshipTypeService: RelationshipTypeService,\n    private expectedPropertyService: ExpectedPropertyService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize ExpectedPropertyComponent', ExpectedPropertyComponent.name);\n    this.flashMessage.timeoutInMS = 4000;\n    this.createdExpectedProperty.entityExpected = this.entity;\n    this.createdExpectedProperty.entityExpectedId = this.entity.id;\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - createExpectedProperty - Call the ExpectedPropertyService for creating a new ExpectedProperty in the database\n   *                                    and subscribe for a callback\n   *\n   *******************************************************************************************************************************************************************************************************/\n  createExpectedProperty() {\n    Logger.info('Create ExpectedProperty', ExpectedPropertyComponent.name);\n    this.expectedPropertyService.createExpectedProperty(this.createdExpectedProperty).subscribe(responseExpectedProperty => {\n      this.entity.expectedProperties.push(responseExpectedProperty);\r\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - updateExpectedProperty - Call the ExpectedPropertyService for updating the ExpectedProperty in the database and subscribe for a callback.\n   *\n   * @param - name: string - New name of the ExpectedProperty\n   * @param - value: string - New value of the ExpectedProperty\n   *\n   *******************************************************************************************************************************************************************************************************/\n  updateExpectedProperty(name: string, value: string) {\n    this.editExpectedProperty.name = name;\n    this.editExpectedProperty.value = value;\n    Logger.info('Update ExpectedProperty', ExpectedPropertyComponent.name);\n    this.expectedPropertyService.updateExpectedProperty(this.editExpectedProperty).subscribe(responseExpectedProperty => {\n      this.entity.expectedProperties = Utility.updateElementInArry(responseExpectedProperty, this.entity.expectedProperties);\r\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteExpectedProperty - Call the ExpectedPropertyService for delete a ExpectedProperty from the database and subscribe for a callback.\n   *\n   * @param - id: number - ID of the ExpectedProperty witch should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  deleteExpectedProperty(id: number) {\n    Logger.info('Delete ExpectedProperty', ExpectedPropertyComponent.name);\n    this.expectedPropertyService.deleteExpectedProperty(id).subscribe(response => {\n      this.entity.expectedProperties = Utility.updateElementInArry(id, this.entity.expectedProperties);\r\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - setExpectedProperty - Set the editable ExpectedProperty Data\n   * @param - expectedProperty: ExpectedProperty - The ExpectedProperty witch should be edit\n   *\n   *******************************************************************************************************************************************************************************************************/\n  setExpectedProperty(expectedProperty: ExpectedProperty) {\n    this.editExpectedProperty = expectedProperty;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/metrics/expectedproperty/expectedproperty.component.ts","\nimport { Logger } from '../../../../../logger/logger';\nimport { Utility } from '../../../../utility';\nimport { Entity } from '../../../datamodels/entity/entity';\nimport { ProvidedProperty } from '../../../datamodels/metrics/providedproperty';\nimport { ProvidedPropertyService } from '../../../dataservices/metrics/providedpropertyservice.service';\nimport { RelationshipTypeService } from '../../../dataservices/types/relationshiptype.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-providedproperty',\n  templateUrl: './providedproperty.component.html',\n  styleUrls: ['./providedproperty.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component ProvidedPropertyComponent Class - The component retrieve all available ProvidedProperty of the currently selected Entity\n *                                              from the database and list them. You can create, delete or edit the ProvidedProperty.\n *\n * @field/@input - entity: Entity -  Parent of the Property\n * @field - createdProvidedProperty: ProvidedProperty - ProvidedProperty which should be created\n * @field - editProvidedProperty: ProvidedProperty - ProvidedProperty which should be edit\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class ProvidedPropertyComponent implements OnInit {\n\n  @Input()\n  entity: Entity;\n\n  createdProvidedProperty: ProvidedProperty = new ProvidedProperty('Unnamed', 'Undefined');\n  editProvidedProperty: ProvidedProperty = new ProvidedProperty('Unnamed', 'Undefined');\n\n  public flashMessage = new FlashMessage();\n\n  constructor(private relationshipTypeService: RelationshipTypeService,\n    private providedPropertyService: ProvidedPropertyService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize ProvidedPropertyComponent', ProvidedPropertyComponent.name);\n    this.flashMessage.timeoutInMS = 4000;\n    this.createdProvidedProperty.entityProvided = this.entity;\n    this.createdProvidedProperty.entityProvidedId = this.entity.id;\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - createProvidedProperty - Call the ProvidedPropertyService for creating a new ProvidedProperty in the database\n   *                                    and subscribe for a callback\n   *\n   *******************************************************************************************************************************************************************************************************/\n  createProvidedProperty() {\n    Logger.info('Create ProvidedProperty', ProvidedPropertyComponent.name);\n    this.providedPropertyService.createProvidedProperty(this.createdProvidedProperty).subscribe(responseProperty => {\n      this.entity.providedProperties.push(responseProperty);\r\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - updateProvidedProperty - Call the ProvidedPropertyService for updating the ProvidedProperty in the database and subscribe for a callback.\n   *\n   * @param - name: string - New name of the ProvidedProperty\n   * @param - value: string - New name of the ProvidedProperty\n   *\n   *******************************************************************************************************************************************************************************************************/\n  updateProvidedProperty(name: string, value: string) {\n    Logger.info('Update ProvidedProperty', ProvidedPropertyComponent.name);\n    this.editProvidedProperty.name = name;\n    this.editProvidedProperty.value = value;\n    this.providedPropertyService.updateProvidedProperty(this.editProvidedProperty).subscribe(responseProperty => {\n      this.entity.providedProperties = Utility.updateElementInArry(responseProperty, this.entity.providedProperties);\r\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteProvidedProperty - Call the ProvidedPropertyService for delete a ProvidedProperty from the database and subscribe for a callback.\n   *\n   * @param - id: number - ID of the ProvidedProperty witch should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  deleteProvidedProperty(id: number) {\n    Logger.info('Delete ProvidedProperty', ProvidedPropertyComponent.name);\n    this.providedPropertyService.deleteProvidedProperty(id).subscribe(response => {\n      this.entity.providedProperties = Utility.deleteElementFromArry(id, this.entity.providedProperties);\r\n    },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - setProvidedProperty- Set the editable ProvidedProperty Data\n   * @param - providedProperty: ProvidedProperty - The ProvidedProperty witch should be edit\n   *\n   *******************************************************************************************************************************************************************************************************/\n  setProvidedProperty(providedProperty: ProvidedProperty) {\n    this.editProvidedProperty = providedProperty;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/metrics/providedproperty/providedproperty.component.ts","/*********************************************************************************************************************************************************************************************************\n *\n * @class - Logger - Helper class for customized logging\n *\n * @hint - Further improvement write a log file to the file system and improve the representation of JSON Objects in the console currently only displayed as string\n *\n * @author Arthur Kaul\n *\n ********************************************************************************************************************************************************************************************************/\nexport class Logger {\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method data - Logger for data objects\n   *\n   * @param - msg: string - String which should be written to log\n   * @param - className: any - Name of the class where the Logger was called\n   *\n   ******************************************************************************************************************************************************************************************************/\n  static data(msg: string, className: any) {\n    console.log('[DATA] ' + className + '  [Message:]  ' + msg);\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method data - Logger for info messages\n   *\n   * @param - msg: string - String which should be written to log\n   * @param - className: any - Name of the class where the Logger was called\n   *\n   ******************************************************************************************************************************************************************************************************/\n  static info(msg: string, className: any) {\n\n    console.log('[INFO] ' + className + '  [Message:]  ' + msg);\n\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method warning - Logger for warning messages\n   *\n   * @param - msg: string - String which should be written to log\n   * @param - className: any - Name of the class where the Logger was called\n   *\n   ******************************************************************************************************************************************************************************************************/\n  static warning(msg: string, className: any) {\n\n    console.warn('[WARNING] ' + className + '  [Message:]  ' + msg);\n\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method error - Logger for error messages\n   *\n   * @param - msg: string - String which should be written to log\n   * @param - className: any - Name of the class where the Logger was called\n   *\n   ******************************************************************************************************************************************************************************************************/\n  static error(msg: string, className: any) {\n\n    console.error('[ERROR] ' + className + '  [Message:]  ' + msg);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger/logger.ts","import { Logger } from '../../../../logger/logger';\nimport { TopologyTemplate } from '../../datamodels/topology/topologytemplate';\nimport { LevelGraphNodeComponent } from '../levelgraphnode/levelgraphnode.component';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nodetemplate',\n  templateUrl: './nodetemplate.component.html',\n  styleUrls: ['./nodetemplate.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - NodeTemplateComponent - Lazy loaded component as wrapper for all other components in the NodeTemplateComponent\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTemplateComponent implements OnInit {\n\n  @Input()\n  currentTopologyTemplate: TopologyTemplate;\n\n  constructor() { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphNodeComponent', LevelGraphNodeComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/nodetemplate/nodetemplate.component.ts","import { NodeTemplateComponent } from './nodetemplate.component';\nimport { NodeTemplateDetailsModule } from './nodetemplatedetails/nodetemplatedetails.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    NodeTemplateDetailsModule\n  ],\n  declarations: [NodeTemplateComponent],\n  exports: [NodeTemplateComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - NodeTemplateModule - Lazy loaded module as wrapper for all application modules and components which should be accessible in the NodeTemplateModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTemplateModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/nodetemplate/nodetemplate.module.ts","import { Logger } from '../../../../../../logger/logger';\nimport { NodeTemplate } from '../../../../datamodels/topology/nodetemplate';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-generaldata',\n  templateUrl: './generaldata.component.html',\n  styleUrls: ['./generaldata.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - GeneralDataComponent Class - The component displays the general data of a NodeTemplate Object.\n *\n * @field - currentNodeTemplate: NodeTemplate -  NodeTemplate which is currently selected\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class GeneralDataComponent implements OnInit {\n\n  @Input()\n  currentNodeTemplate: NodeTemplate;\n\n  constructor() { }\n\n  /********************************************************************************************************************************************************************************************************\n  *\n  * @method - ngOnInit - Is called when the component is initialized\n  *\n  *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize GeneralDataComponent Component', GeneralDataComponent.name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/generaldata/generaldata.component.ts","import { PropertyModule } from '../../metrics/property.module';\nimport { RelationshipTemplateModule } from '../../relationshiptemplate/relationshiptemplate.module';\nimport { GeneralDataComponent } from './generaldata/generaldata.component';\nimport { NodeTemplateDetailsComponent } from './nodetemplatedetails.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    PropertyModule,\n    RelationshipTemplateModule\n  ],\n  declarations: [NodeTemplateDetailsComponent, GeneralDataComponent],\n  exports: [NodeTemplateDetailsComponent, GeneralDataComponent]\n})\n\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - NodeTemplateDetailsModule - Lazy loaded module as wrapper for all application modules and components which\n *                                       should be accessible in the NodeTemplateDetailsModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTemplateDetailsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.module.ts","import { NodeTemplateDetailsComponent } from './nodetemplatedetails.component';\nimport { Route } from '@angular/router';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @route - NodeTemplateDetailsRoutes - Path for the navigation to the NodeTemplateDetailsRoutes\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport const NodeTemplateDetailsRoutes: Route[] = [\n  {\n    path: 'nodetemplatedetails',\n    component: NodeTemplateDetailsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.routes.ts","import { Logger } from '../../../../logger/logger';\nimport { RelationshipTemplate } from '../../datamodels/topology/relationshiptemplate';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-relationshiptemplate',\n  templateUrl: './relationshiptemplate.component.html',\n  styleUrls: ['./relationshiptemplate.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - RelationshipTemplateComponent - Lazy loaded component as wrapper for all other components in the RelationshipTemplateComponent\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTemplateComponent implements OnInit {\n\n  @Input()\n  currentRelationshipTemplates: RelationshipTemplate[];\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  constructor() { }\n\n  ngOnInit() {\n    Logger.info('Iniitalize LevelGraphNodeComponent', RelationshipTemplateComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplate.component.ts","import { Logger } from '../../../../../../logger/logger';\nimport { RelationshipTemplate } from '../../../../datamodels/topology/relationshiptemplate';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-generaldata',\n  templateUrl: './generaldata.component.html',\n  styleUrls: ['./generaldata.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n*\n* @component - GeneralDataComponent Class - The component displays the general data of a LevelGraphRelation Object.\n*\n* @field - currentLevelGraphRelation: LevelGraphRelation -  LevelGraphRelation which is currently selected\n*\n* @author - Arthur Kaul\n*\n*********************************************************************************************************************************************************************************************************/\nexport class GeneralDataComponent implements OnInit {\n\n  @Input()\n  currentRelationshipTemplate: RelationshipTemplate;\n\n  constructor() { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize GeneralDataComponent Component', GeneralDataComponent.name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/generaldata/generaldata.component.ts","import { PropertyModule } from '../../metrics/property.module';\nimport { GeneralDataComponent } from './generaldata/generaldata.component';\nimport { RelationshipTemplateDetailsComponent } from './relationshiptemplatedetails.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    PropertyModule\n  ],\n  declarations: [RelationshipTemplateDetailsComponent, GeneralDataComponent],\n  exports: [RelationshipTemplateDetailsComponent, GeneralDataComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - RelationshipTemplateDetailsModule - Lazy loaded module as wrapper for all application modules and components which\n *                                               should be accessible in the RelationshipTemplateDetailsModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTemplateDetailsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.module.ts","import { RelationshipTemplateDetailsComponent } from './relationshiptemplatedetails.component';\nimport { Route } from '@angular/router';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @route - RelationshipTemplateDetailsRoutes - Path for the navigation to the RelationshipTemplateDetailsRoutes\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport const RelationshipTemplateDetailsRoutes: Route[] = [\n  {\n    path: 'relationshiptemplatedetails',\n    component: RelationshipTemplateDetailsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.routes.ts","import {Logger} from '../../../../logger/logger';\r\nimport {Repository} from '../../datamodels/repository/repository';\r\nimport {RepositoryService} from '../../dataservices/repository/repository.service';\r\nimport {Utility} from '../../../utility';\r\nimport {Constants} from '../../constants/constants';\r\nimport {ExportXmlService} from '../../dataservices/exportxml.service';\r\nimport {Component, OnInit, Input} from '@angular/core';\r\nimport {FlashMessageService} from 'angular2-flash-message';\r\nimport {FlashMessage} from 'angular2-flash-message';\r\nimport * as FileSaver from 'file-saver';\r\nimport {FileUploader} from 'ng2-file-upload';\r\n\r\n// URL for XML Import\r\nconst URL_IMPORT = '/api/import/repository';\r\n\r\n// URL for XML Export\r\nconst URL_EXPORT = '/repository';\r\n\r\n@Component({\r\n  selector: 'app-repository',\r\n  templateUrl: './repository.component.html',\r\n  styleUrls: ['./repository.component.css']\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @component - RepositoryComponent Class - The component retrieve all available repositories in the database and list them. You can\r\n *                                          delete, import, export or edit the repository. Also you can select a repository and\r\n *                                          call the RepositoryDetailComponent where you can see all data which are included in a repository.\r\n *\r\n * @field - repositories: Repository[] - List of all available Repositories in the database\r\n * @field - createdRepository: Repository -  Repository which should be created\r\n * @field - editedRepository: Repository - Repository which should be edit\r\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may\r\n *                                       cause a \"Over Flash\" for the user experience\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class RepositoryComponent implements OnInit {\r\n\r\n  @Input()\r\n  public repositories: Repository[] = [];\r\n\r\n  public createdRepository: Repository = new Repository();\r\n  public editedRepository: Repository = new Repository();\r\n  public flashMessage = new FlashMessage();\r\n\r\n  public uploader: FileUploader = new FileUploader({});\r\n\r\n  constructor(private xmlExportSerivce: ExportXmlService,\r\n    private repositoryService: RepositoryService,\r\n    private flashMessageService: FlashMessageService) {}\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - ngOnInit - Is called when the component is initialized\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  ngOnInit() {\r\n    Logger.info('Initialize Repository Component', RepositoryComponent.name);\r\n    this.flashMessage.timeoutInMS = Constants.FLASHMESSAGETIMEOUT;\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - createRepository - Call the RepositoryService for creating a new Repository in the database and subscribe for a callback\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  createRepository() {\r\n    Logger.info('Create Repository', RepositoryComponent.name);\r\n    this.repositoryService.createRepository(this.createdRepository)\r\n      .subscribe(repositoryResponse => {\r\n        this.repositories.push(repositoryResponse);\r\n        Logger.info('Repository with name: ' + repositoryResponse.name + ' was created sucessfully with id: ' + repositoryResponse.id, RepositoryComponent.name);\r\n      },\r\n      (error) => {\r\n        this.flashMessage.message = error;\r\n        this.flashMessage.isError = true;\r\n        this.flashMessageService.display(this.flashMessage);\r\n      });\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - retrieveRepositories - Call the RepositoryService for loading all repositories from database into the application and subscribe\r\n   *                                  for a callback. Currently no pagination/streaming of data is supported\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  retrieveRepositories() {\r\n    Logger.info('Retrieve Repository Data', RepositoryComponent.name);\r\n    this.repositoryService.getRepositories()\r\n      .subscribe(repositoriesResponse => {\r\n        this.repositories = repositoriesResponse;\r\n        Logger.info('Repositories sucessfully retrieved.', RepositoryComponent.name);\r\n      });\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - updateRepository - Call the RepositoryService for updating the repository in the database and subscribe for a callback.\r\n   *\r\n   * @param - name: string - New name of the Repository\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  updateRepository(name: string) {\r\n    Logger.info('Update Repository', RepositoryComponent.name);\r\n    this.editedRepository.name = name;\r\n    this.repositoryService.updateRepository(this.editedRepository)\r\n      .subscribe(repositoryResponse => {\r\n        this.repositories = Utility.updateElementInArry(repositoryResponse, this.repositories);\r\n        Logger.info('Repository with id: ' + repositoryResponse.id + ' and name:' + repositoryResponse.name + ' was updated sucessfully.', RepositoryComponent.name);\r\n      },\r\n      (error) => {\r\n        this.flashMessage.message = error;\r\n        this.flashMessage.isError = true;\r\n        this.flashMessageService.display(this.flashMessage);\r\n      });\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - deleteRepository - Call the RepositoryService for delete a repository from the database and subscribe for a callback.\r\n   *\r\n   * @param - id: number - ID of the repository witch should be deleted from the database\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  deleteRepository(id: string, event) {\r\n    Logger.info('Delete Repository', RepositoryComponent.name);\r\n    this.repositoryService.deleteRepository(id)\r\n      .subscribe(repositoryResponse => {\r\n        this.repositories = Utility.deleteElementFromArryS(id, this.repositories);\r\n        Logger.info('Repository with id: ' + id + ' was deleted sucessfully.', RepositoryComponent.name);\r\n      },\r\n      (error) => {\r\n        this.flashMessage.message = error;\r\n        this.flashMessage.isError = true;\r\n        this.flashMessageService.display(this.flashMessage);\r\n      });\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - importRepository - Call the ImportService for upload a XML file to the server component and import the data of the XML file\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  importRepository() {\r\n    this.uploader.setOptions({url: URL_IMPORT});\r\n    this.uploader.uploadAll();\r\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n      let rep: Repository = new Repository();\r\n      rep = JSON.parse(response);\r\n      this.repositories.push(rep);\r\n    };\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - exportRepository - Call the ExportService for retrieve a repository in XML data structure and export the data of the body as XML file to Client/Bowser\r\n   *\r\n   * @param - repository: Repository - Repository which should be exported from the database\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  exportRepository(repository: Repository) {\r\n    this.xmlExportSerivce.getXmlFile(URL_EXPORT + '/' + repository.id).subscribe(\r\n      res => {\r\n        FileSaver.saveAs(res, repository.name + '.xml');\r\n      },\r\n      (error) => {\r\n        this.flashMessage.message = error;\r\n        this.flashMessage.isError = true;\r\n        this.flashMessageService.display(this.flashMessage);\r\n      });\r\n  }\r\n\r\n  /********************************************************************************************************************************************************************************************************\r\n   *\r\n   * @method - setEditRepositoryData - Set the edit Repository Data\r\n   *\r\n   * @param - repository - The repository witch should be edit\r\n   *\r\n   *******************************************************************************************************************************************************************************************************/\r\n  setEditRepositoryData(repository) {\r\n    Logger.info('Set Edit Repository Data', RepositoryComponent.name);\r\n    this.editedRepository = repository;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/repository/repository.component.ts","import { NodeTypeModule } from '../../types/nodetype/nodetypemodule';\r\nimport { RelationshipTypeModule } from '../../types/relationshiptype/relationshiptypemodule';\r\nimport { RepositoryDetailsComponent } from './repositorydetails.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [NodeTypeModule,\r\n    CommonModule,\r\n    RelationshipTypeModule,\r\n    RouterModule,\r\n    Ng2BootstrapModule.forRoot()],\r\n  declarations: [RepositoryDetailsComponent],\r\n  exports: [RepositoryDetailsComponent]\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @module - RepositoryDetailsModule - Lazy loaded module as wrapper for all application modules and components which\r\n *                                     should be accessible in the RepositoryDetailsModule\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class RepositoryDetailsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/repository/repositorydetails/repositorydetails.module.ts","import { RepositoryDetailsComponent } from './repositorydetails.component';\r\nimport { Route } from '@angular/router';\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @route - RepositoryDetailsRoutes - Path for the navigation to the RepositoryDetailsComponent\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport const RepositoryDetailsRoutes: Route[] = [\r\n    {\r\n      path: 'repository',\r\n      component: RepositoryDetailsComponent\r\n    }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/repository/repositorydetails/repositorydetails.routes.ts","import { RepositoryComponent } from './repository.component';\nimport { RepositoryDetailsModule } from './repositorydetails/repositorydetails.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n\n@NgModule({\n  imports: [\n    FileUploadModule,\n    FormsModule,\n    CommonModule,\n    RepositoryDetailsModule,\n    RouterModule\n  ],\n  declarations: [RepositoryComponent],\n  exports: [RepositoryComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - RepositoryModule - Lazy loaded module as wrapper for all application modules and components which\n *                              should be accessible in the RepositoryModule, you can import this module in other\n *                              modules where you need to display the repository view for create, update, delete\n *                              or view repositories\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RepositoryModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/repository/repositorymodule.ts","export * from './topnav';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topnav/index.ts","import { Component } from '@angular/core';\n\ndeclare var $: any;\n\n@Component({\n    selector: 'app-top-nav',\n    templateUrl: 'topnav.html',\n})\n\nexport class TopNavComponent {\n  changeTheme(color: string): void {\n    let link: any = $('<link>');\n    link\n      .appendTo('head')\n      .attr({type : 'text/css', rel : 'stylesheet'})\n      .attr('href', 'themes/app-' + color + '.css');\n  }\n\n  rtl(): void {\n    let body: any = $('body');\n    body.toggleClass('rtl');\n  }\n\n  sidebarToggler(): void  {\n    let sidebar: any = $('#sidebar');\n    let mainContainer: any = $('.main-container');\n    sidebar.toggleClass('sidebar-left-zero');\n    mainContainer.toggleClass('main-container-ml-zero');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topnav/topnav.ts","import {Logger} from '../../../../logger/logger';\nimport {TopologyTemplate} from '../../datamodels/topology/topologytemplate';\nimport {LevelGraphService} from '../../dataservices/levelgraph/levelgraph.service';\nimport {TopologyTemplateService} from '../../dataservices/topologytemplate/topologytemplate.service';\nimport {Component, OnInit, Input} from '@angular/core';\nimport {Utility} from '../../../utility';\nimport {FlashMessageService} from 'angular2-flash-message';\nimport {FlashMessage} from 'angular2-flash-message';\nimport * as FileSaver from 'file-saver';\nimport {FileUploader} from 'ng2-file-upload';\nimport {ExportXmlService} from '../../dataservices/exportxml.service';\n\nconst URL_IMPORT = '/api/import/topologytemplate';\n\n// URL for XML Export\nconst URL_EXPORT = '/topologytemplate';\n\n\n@Component({\n  selector: 'app-topologytemplate',\n  templateUrl: './topologytemplate.component.html',\n  styleUrls: ['./topologytemplate.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - TopologyTemplateComponent - The component retrieve all available TopologyTemplates in the database and list them. You can\n *                                          delete, import, export or edit the TopologyTemplate. Also you can select a TopologyTemplate and\n *                                          call the TopologyTemplateDetailComponent where you can see all data which are included in a\n *                                          TopologyTemplate.\n *\n * @fields - topologyTemplates: TopologyTemplate[] - List of all available TopologyTemplates in the database\n * @fields - createdTopologyTemplate: TopologyTemplate - TopologyTemplate which should be created\n * @fields - editTopologyTemplate: TopologyTemplate - TopologyTemplate which should be edit\n * @fields - flashMessage = new FlashMessage() - for display errors and warnings you can also use it for display success messages but this may a cause a \"Over-Flashing\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class TopologyTemplateComponent implements OnInit {\n\n  @Input()\n  topologyTemplates: TopologyTemplate[] = [];\n\n  createdTopologyTemplate: TopologyTemplate = new TopologyTemplate();\n  editTopologyTemplate: TopologyTemplate = new TopologyTemplate();\n  public flashMessage = new FlashMessage();\n\n  public uploader: FileUploader = new FileUploader({});\n\n  constructor(private xmlExportSerivce: ExportXmlService, private flashMessageService: FlashMessageService, private topologyTemplateService: TopologyTemplateService, private levelGraphService: LevelGraphService) {}\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Initialize TopologyTemplateComponent', TopologyTemplateComponent.name);\n    this.flashMessage.timeoutInMS = 4000;\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   *  @method - createTopologyTemplate - Call the TopologyTemplateService for creating a new TopologyTemplate in the database\n   *                                     and subscribe for a callback\n   *\n   *******************************************************************************************************************************************************************************************************/\n  createTopologyTemplate() {\n    Logger.info('Create TopologyTemplate', TopologyTemplateComponent.name);\n    this.createdTopologyTemplate.abstractionLevel = 0;\n    this.topologyTemplateService.createTopologyTemplate(this.createdTopologyTemplate)\n      .subscribe(topologyTemplateResponse => {\n        this.topologyTemplates.push(topologyTemplateResponse);\n        Logger.info('TopologyTemplate with name: ' + topologyTemplateResponse.name + ' was created sucessfully with id: ' + topologyTemplateResponse.id, TopologyTemplateComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   *  @method - retrieveTopologyTemplates - Call the TopologyTemplateService for loading all TopologyTemplates from database into the application\n   *                                        and subscribe for a callback. Currently no pagination/streaming of data is supported\n   *\n   *******************************************************************************************************************************************************************************************************/\n  retrieveTopologyTemplates() {\n    Logger.info('Retrieve TopologyTemplate Data', TopologyTemplateComponent.name);\n    this.topologyTemplateService.getTopologyTemplates()\n      .subscribe(topologyTemplateResponse => {\n        this.topologyTemplates = topologyTemplateResponse;\n        Logger.info('Topology Template sucessfully retrieved.', TopologyTemplateComponent.name);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - updateTopologyTemplate - Call the TopologyTemplateService for updating the repository in the database and subscribe for a callback.\n   *\n   * @param - name: string - New name of the TopologyTemplate\n   *\n   *******************************************************************************************************************************************************************************************************/\n  updateTopologyTemplate(name: string) {\n    Logger.info('Update TopologyTemplate', TopologyTemplateComponent.name);\n    this.editTopologyTemplate.name = name;\n    this.topologyTemplateService.updateTopologyTemplate(this.editTopologyTemplate)\n      .subscribe(topologyTemplateResponse => {\n        this.topologyTemplates = Utility.updateElementInArry(topologyTemplateResponse, this.topologyTemplates);\n        Logger.info('Topology Template with id: ' + topologyTemplateResponse.id + ' and name:' + topologyTemplateResponse.name + ' was updated sucessfully.', TopologyTemplateComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteTopologyTemplate - Call the TopologyTemplateService for delete a TopologyTemplate from the database and subscribe for a callback.\n   *\n   * @param - id: number - ID of the TopologyTemplate witch should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  deleteTopologyTemplate(id: number) {\n    Logger.info('Delete TopologyTemplate', TopologyTemplateComponent.name);\n    this.topologyTemplateService.deleteTopologyTemplate(id)\n      .subscribe(topologyTemplateResponse => {\n        this.topologyTemplates = Utility.deleteElementFromArry(id, this.topologyTemplates);\n        Logger.info('Topology Template with id: ' + id + ' was deleted sucessfully.', TopologyTemplateComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - importRepository - Call the ImportService for upload a XML file to the server component and import the data of the XML file\n   *\n   *******************************************************************************************************************************************************************************************************/\n  importTopologyTemplate() {\n    this.uploader.setOptions({url: URL_IMPORT});\n    this.uploader.uploadAll();\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      let topologyTemplate: TopologyTemplate = new TopologyTemplate();\n      topologyTemplate = JSON.parse(response);\n        this.topologyTemplateService.updateTopologyTemplate(topologyTemplate)\n      .subscribe(topologyTemplateResponse => {\n         this.topologyTemplates.push(topologyTemplateResponse);\n        Logger.info('Topology Template with id: ' + topologyTemplateResponse.id + ' and name:' + topologyTemplateResponse.name + ' was updated sucessfully.', TopologyTemplateComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n    };\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - exportRepository - Call the ExportService for retrieve a repository in XML data structure and export the data of the body as XML file to Client/Bowser\n   *\n   * @param - repository: Repository - Repository which should be exported from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  exportTopologyTemplate(topologyTemplate: TopologyTemplate) {\n    this.xmlExportSerivce.getXmlFile(URL_EXPORT + '/' + topologyTemplate.id).subscribe(\n        res => {\n        FileSaver.saveAs(res, topologyTemplate.name + '.xml');\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * Set the editable TopologyTemplate Data\n   * @param - topologyTemplate: TopologyTemplate - The TopologyTemplate witch should be edit\n   *\n   *******************************************************************************************************************************************************************************************************/\n  setEditTopologyTemplate(topologyTemplate: TopologyTemplate) {\n    this.editTopologyTemplate = topologyTemplate;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topologytemplate/topologytemplate.component.ts","import { NodeTemplateModule } from '../../nodetemplate/nodetemplate.module';\nimport { RelationshipTemplateModule } from '../../relationshiptemplate/relationshiptemplate.module';\nimport { TopologyTemplateDetailsComponent } from './topologytemplatedetails.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { Ng2BootstrapModule } from 'ng2-bootstrap';\n\n@NgModule({\n  imports: [NodeTemplateModule, RelationshipTemplateModule, CommonModule, RouterModule, Ng2BootstrapModule.forRoot()],\n  declarations: [TopologyTemplateDetailsComponent],\n  exports: [TopologyTemplateDetailsComponent]\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @module - TopologyTemplateDetailsModule - Lazy loaded module as wrapper for all application modules and components which\n *                                           should be accessible in the TopologyTemplateDetailsModule\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class TopologyTemplateDetailsModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.module.ts","import { TopologyTemplateDetailsComponent } from './topologytemplatedetails.component';\nimport { Route } from '@angular/router';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @route - TopologyTemplatesDetailsRoutes - Path for the navigation to the TopologyTemplatesDetailsComponent\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport const TopologyTemplatesDetailsRoutes: Route[] = [\n  {\n    path: 'topologytemplatedetails',\n    component: TopologyTemplateDetailsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatesdetails.routes.ts","import {Logger} from '../../../../../logger/logger';\nimport {Repository} from '../../../datamodels/repository/repository';\nimport {NodeType} from '../../../../shared/datamodels/types/nodetype';\nimport {NodeTypeService} from '../../../../shared/dataservices/types/nodetype.service';\nimport {Utility} from '../../../../utility';\nimport {Component, OnInit, Input} from '@angular/core';\nimport {FileUploader} from 'ng2-file-upload';\nimport {FlashMessageService} from 'angular2-flash-message';\nimport {FlashMessage} from 'angular2-flash-message';\n\n// URL for icon Upload\nconst URL = '/api/fileupload/nodetype';\n\n@Component({\n  selector: 'app-nodetype',\n  templateUrl: './nodetype.component.html',\n  styleUrls: ['./nodetype.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - NodeTypeComponent - The component retrieve all available NodeType of the currently selected Repository\n *                                  from the database and list them. You can create, delete or edit the NodeType.\n *                                  Also you can select a NodeType and call the NodeTypeDetailComponent where you can see all\n *                                  data which are included in a NodeType.\n *\n * @field - nodeTypes: NodeType[] -  List of the nodeTypes\n * @field - repository: Repository -  Repository which is currently selected\n * @field - createdNodeType: NodeType - NodeType which should be created\n * @field - editNodeType: NodeType - NodeType which should be edit\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                     cause a \"Over Flash\" for the user experience\n * @field - uploader: FileUploader - UploaderSerivce for uploading files like icons to the file system of the server\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class NodeTypeComponent implements OnInit {\n\n  @Input()\n  nodeTypes: NodeType[];\n\n  @Input()\n  repository: Repository;\n\n  public createdNodeType: NodeType = new NodeType();\n  public editNodeType: NodeType = new NodeType();\n  public flashMessage = new FlashMessage();\n\n  public uploader: FileUploader = new FileUploader({url: URL});\n\n  constructor(private nodeTypeService: NodeTypeService, private flashMessageService: FlashMessageService) {}\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize NodeTypeComponent', NodeTypeComponent.name);\n    this.flashMessage.timeoutInMS = 4000;\n    this.createdNodeType.repository = this.repository;\n    this.createdNodeType.repositoryId = this.repository.id;\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - createNodeType - Call the NodeTypeService for creating a new NodeType in the database\n   *                            and subscribe for a callback\n   *\n   *******************************************************************************************************************************************************************************************************/\n  createNodeType() {\n    Logger.info('Create NodeType', NodeTypeComponent.name);\n    this.nodeTypeService.createNodeType(this.createdNodeType)\n      .subscribe(nodeTypeResponse => {\r\n        let tempURL = URL + '/' + nodeTypeResponse.id;\n        this.uploader.setOptions({url: tempURL});\n        this.uploader.uploadAll();\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n          nodeTypeResponse.icon = item.url + '/' + response;\n          this.nodeTypeService.updateNodeType(nodeTypeResponse).subscribe();\n        };\n        this.nodeTypes.push(nodeTypeResponse);\n        Logger.info('NodeType with name: ' + nodeTypeResponse.name + ' was created sucessfully with id: ' + nodeTypeResponse.id, NodeTypeComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\r\n      });\n\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - updateNodeType - Call the NodeTypeService for updating the NodeType in the database and subscribe for a callback.\n   *\n   * @param - name: string - New name of the NodeType\n   *\n   *******************************************************************************************************************************************************************************************************/\n  updateNodeType(name: string) {\n    Logger.info('Update NodeType', NodeTypeComponent.name);\n    this.editNodeType.name = name;\n    this.nodeTypeService.updateNodeType(this.editNodeType)\n      .subscribe(nodeTypeResponse => {\n        this.nodeTypes = Utility.updateElementInArry(nodeTypeResponse, this.nodeTypes);\n        Logger.info('NodeType with id: ' + nodeTypeResponse.id + ' and name:' + nodeTypeResponse.name + ' was updated sucessfully.', NodeTypeComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteNodeType - Call the NodeTypeService for delete a NodeType from the database and subscribe for a callback.\n   *\n   * @param - id: number - ID of the NodeType witch should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  deleteNodeType(id: number) {\n    Logger.info('Delete NodeType', NodeTypeComponent.name);\n    this.nodeTypeService.deleteNodeType(id)\n      .subscribe(nodeTypeResponse => {\n        this.nodeTypes = Utility.deleteElementFromArry(id, this.nodeTypes);\n        Logger.info('NodeType with id: ' + id + ' was deleted sucessfully.', NodeTypeComponent.name);\n      }, (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - Set the editable NodeType Data\n   *\n   * @param nodeType: NodeType - The nodeType witch should be edit\n   *\n   *******************************************************************************************************************************************************************************************************/\n  setEditNodeType(nodeType: NodeType) {\n    this.editNodeType = nodeType;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/nodetype/nodetype.component.ts","import { Logger } from '../../../../../../../logger/logger';\nimport { NodeType } from '../../../../../../shared/datamodels/types/nodetype';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-generaldata',\n  templateUrl: './generaldata.component.html',\n  styleUrls: ['./generaldata.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - GeneralDataComponent - The component displays the general data of a NodeType Object.\n *\n *\n * @field - currentNodeType: NodeType -  NodeType which is currently selected\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class GeneralDataComponent implements OnInit {\n\n  @Input()\n  currentNodeType: NodeType;\n\n  constructor() { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize GeneralDataComponent Component', GeneralDataComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/generaldata/generaldata.component.ts","import { NodeTypeDetailsComponent } from './nodetypedetails.component';\nimport { Route } from '@angular/router';\n\n/*******************************************************************************************************************\n *\n * @route - NodeTypeDetailsRoutes - Path to the RelationshipDetailsComponent\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************/\nexport const NodeTypeDetailsRoutes: Route[] = [\n    {\n      path: 'nodetypedetails',\n      component: NodeTypeDetailsComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.routes.ts","import { Logger } from '../../../../../logger/logger';\nimport { Repository } from '../../../datamodels/repository/repository';\nimport { RelationshipType } from '../../../../shared/datamodels/types/relationshiptype';\nimport { RelationshipTypeService } from '../../../../shared/dataservices/types/relationshiptype.service';\nimport { Utility } from '../../../../utility';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n// URL for icon Upload\nconst URL = '/api/fileupload/relationshiptype';\n\n@Component({\n  selector: 'app-relationshiptype',\n  templateUrl: './relationshiptype.component.html',\n  styleUrls: ['./relationshiptype.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - RelationshipTypeComponent Class - The component retrieve all available RelationshipType of the currently selected Repository\n *                                                from the database and list them. You can delete, import, export or edit the RelationshipType.\n *                                                Also you can select a RelationshipType and call the RelationshipTypeDetailComponent where you can see all\n *                                                data which are included in a RelationshipType.\n *\n * @field - relationshipTypes: RelationshipType[] -  List of the relationshipTypes\n * @field - repository: Repository -  Repository which is currently selected\n * @field - createdRelationshipType: RelationshipType - RelationshipType which should be created\n * @field - editRelationshipType: RelationshipType - RelationshipType which should be edit\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                     cause a \"Over Flash\" for the user experience\n * @field - uploader: FileUploader - UploaderSerivce for uploading files like icons to the file system of the server\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class RelationshipTypeComponent implements OnInit {\n\n  @Input()\n  relationshipTypes: RelationshipType[];\n\n  @Input()\n  repository: Repository;\n\n  createdRelationshipType: RelationshipType = new RelationshipType();\n  editRelationshipType: RelationshipType = new RelationshipType();\n  flashMessage = new FlashMessage();\n  uploader: FileUploader = new FileUploader({ url: URL });\n\n  constructor(private relationshipTypeService: RelationshipTypeService, private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize RelationshipTypeComponent', RelationshipTypeComponent.name);\n    this.flashMessage.timeoutInMS = 4000;\n    this.createdRelationshipType.repositoryId = this.repository.id;\n    this.createdRelationshipType.repository = this.repository;\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - createRelationshipType - Call the RelationshipTypeService for creating a new RelationshipType in the database\n   *                            �       and subscribe for a callback\n   *\n   *******************************************************************************************************************************************************************************************************/\n  createRelationshipType() {\n    Logger.info('Create RelationshipType', RelationshipTypeComponent.name);\n    this.relationshipTypeService.createRelationshipType(this.createdRelationshipType)\n      .subscribe(relationshipTypeResponse => {\n        let tempURL = URL + '/' + relationshipTypeResponse.id;\n        this.uploader.setOptions({ url: tempURL });\n        this.uploader.uploadAll();\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n          relationshipTypeResponse.icon = item.url + '/' + response;\n          this.relationshipTypeService.updateRelationshipType(relationshipTypeResponse).subscribe();\n        };\n        this.relationshipTypes.push(relationshipTypeResponse);\n        Logger.info('RelationshipType with name: ' + relationshipTypeResponse.name + ' was created sucessfully with id: ' + relationshipTypeResponse.id, RelationshipTypeComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - updateRelationshipType - Call the RelationshipTypeService for updating the RelationshipType in the database and subscribe for a callback.\n   *\n   * @param - name: string - New name of the RelationshipType\n   *\n   *******************************************************************************************************************************************************************************************************/\n  updateRelationshipType(name: string) {\n    Logger.info('Update RelationshipType', RelationshipTypeComponent.name);\n    this.editRelationshipType.name = name;\n    this.relationshipTypeService.updateRelationshipType(this.editRelationshipType)\n      .subscribe(relationshipTypeResponse => {\n        this.relationshipTypes = Utility.updateElementInArry(relationshipTypeResponse, this.relationshipTypes);\n        Logger.info('RelationshipType with id: ' + relationshipTypeResponse.id + ' and name:' + relationshipTypeResponse.name + ' was updated sucessfully.', RelationshipTypeComponent.name);\n      },\n      (error) => {\n        this.flashMessage.message = error;\n        this.flashMessage.isError = true;\n        this.flashMessageService.display(this.flashMessage);\n      });\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - deleteRelationshipType - Call the RelationshipTypeService for delete a RelationshipType from the database and subscribe for a callback.\n   *\n   * @param - id: number - ID of the RelationshipType witch should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  deleteRelationshipType(id: number) {\n    Logger.info('Delete RelationshipType', RelationshipTypeComponent.name);\n    this.relationshipTypeService.deleteRelationshipType(id)\n      .subscribe(res =>\n        this.relationshipTypes = Utility.deleteElementFromArry(id, this.relationshipTypes)\n      );\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - setEditRelationshipType - Set the editable RelationshipType Data\n   *\n   * @param - nodeType - The RelationshipType witch should be edit\n   *\n   *******************************************************************************************************************************************************************************************************/\n  setEditRelationshipType(editRelationshipType: RelationshipType) {\n    this.editRelationshipType = editRelationshipType;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/relationshiptype/relationshiptype.component.ts","import { Logger } from '../../../../../../../logger/logger';\nimport { RelationshipType } from '../../../../../../shared/datamodels/types/relationshiptype';\nimport { RelationshipTypeService } from '../../../../../../shared/dataservices/types/relationshiptype.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FlashMessageService } from 'angular2-flash-message';\nimport { FlashMessage } from 'angular2-flash-message';\n\n@Component({\n  selector: 'app-generaldata',\n  templateUrl: './generaldata.component.html',\n  styleUrls: ['./generaldata.component.css']\n})\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @component - GeneralDataComponent Class - The component displays the general data of a RelationshipType Object.\n *\n *\n * @field - currentRelationshipType: RelationshipType -  RelationshipType which is currently selected\n * @field - flashMessage: FlashMessage - For display errors and warnings you can also use it for display success messages but this may a\n *                                       cause a \"Over Flash\" for the user experience\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class GeneralDataComponent implements OnInit {\n\n  @Input()\n  currentRelationshipType: RelationshipType;\n\n  public flashMessage = new FlashMessage();\n\n  constructor(private relationshipTypeService: RelationshipTypeService,\n    private flashMessageService: FlashMessageService) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @method - ngOnInit - Is called when the component is initialized\n   *\n   *******************************************************************************************************************************************************************************************************/\n  ngOnInit() {\n    Logger.info('Iniitalize GeneralDataComponent Component', GeneralDataComponent.name);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/generaldata/generaldata.component.ts","import { RelationshipTypeDetailsComponent } from './relationshiptypedetails.component';\r\nimport { Route } from '@angular/router';\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @route - RelationshipDetailsRoutes - Path to the RelationshipDetailsComponent\r\n *\r\n * @author - Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport const RelationshipDetailsRoutes: Route[] = [\r\n    {\r\n      path: 'relationshiptypedetails',\r\n      component: RelationshipTypeDetailsComponent\r\n    }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshipdetails.routes.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","import { NodeType } from '../types/nodetype';\nimport { RelationshipType } from '../types/relationshiptype';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - Repository - Collection of NodeTypes and RelationshipTypes\n *\n * @field - id: number - ID of the Repository\n * @field - name: name - Name of the Repository\n * @field - nodeTypeList: NodeTypeList[] - Array of the NodeTypes in the Repository\n * @field - relationshipType: RelationshipType[] - Array of the RelationshipTypes in the Repository\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class Repository {\n\n  id: string = null;\n  name: string;\n  nodeTypes: NodeType[];\n  relationshipTypes: RelationshipType[];\n\n  constructor() {\n    this.id = null;\n    this.name = 'Unnamed';\n    this.nodeTypes = [];\n    this.relationshipTypes = [];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/repository/repository.ts","import { Logger } from '../../../../logger/logger';\nimport { TopologyTemplate } from '../../datamodels/topology/topologytemplate';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - TopologyTemplateService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for Topology Templates\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class TopologyTemplateService {\n\n  // URL of the REST Interface End-Point\n  private topologyTemplateURL = '/api/topologytemplates';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getTopologyTemplates - Send GET all Topology Template REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getTopologyTemplates(): Observable<TopologyTemplate[]> {\n    Logger.info('[REQUEST - TOPOLOGYTEMPLATE]: Send GET Topology TemplateRequest', TopologyTemplateService.name);\n    return this.http.get(this.topologyTemplateURL).map(this.extractTopologyTemplates).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getTopologyTemplate - Send GET Topology Template REQUEST\n   *\n   * @param - id: number - ID of the TopologyTemplate which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getTopologyTemplate(id: number): Observable<TopologyTemplate> {\n    Logger.info('[REQUEST - TOPOLOGYTEMPLATE]: Send GET Topology Request with ID: ' + id, TopologyTemplateService.name);\n    return this.http.get(this.topologyTemplateURL + '/' + id).map(this.extractTopologyTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createTopologyTemplate - Send POST Topology Template REQUEST\n   *\n   * @param - topologyTemplate: TopologyTemplate - TopologyTemplate which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createTopologyTemplate(topologyTemplate: TopologyTemplate): Observable<TopologyTemplate> {\n    Logger.info('[REQUEST - TOPOLOGYTEMPLATE]: Send POST Topology Template Request', TopologyTemplateService.name);\n    Logger.data('[REQUEST - TOPOLOGYTEMPLATE]: ' + JSON.stringify(topologyTemplate), TopologyTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.topologyTemplateURL, topologyTemplate, options).map(this.extractTopologyTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateTopologyTemplate - Send PUT Topology Template REQUEST\n   *\n   * @param - topologyTemplate: TopologyTemplate - TopologyTemplate which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateTopologyTemplate(topologyTemplate: TopologyTemplate): Observable<TopologyTemplate> {\n    Logger.info('[REQUEST - TOPOLOGYTEMPLATE]: Send PUT Topology Template Request', TopologyTemplateService.name);\n    Logger.data('[REQUEST - TOPOLOGYTEMPLATE]: ' + JSON.stringify(topologyTemplate), TopologyTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.topologyTemplateURL + '/' + topologyTemplate.id, topologyTemplate, options).map(this.extractTopologyTemplate).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteTopologyTemplate - Send DELETE Topology Template REQUEST\n   *\n   * @param - id: number - ID of the TopologyTemplate which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteTopologyTemplate(id: number): Observable<TopologyTemplate> {\n    Logger.info('[REQUEST - TOPOLOGYTEMPLATE]: Send DELETE Topology Template Request', TopologyTemplateService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.topologyTemplateURL + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractTopologyTemplates - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractTopologyTemplates(res: Response) {\n    let body = res.json();\n    let topologyTemplateList: TopologyTemplate[] = [];\n    Logger.info('[RESPONSE - TOPOLOGYTEMPLATE]: Extract Topology Template Data List', TopologyTemplateService.name);\n    Logger.info('[RESPONSE - TOPOLOGYTEMPLATE]: ' + JSON.stringify(body), TopologyTemplateService.name);\n    for (let topologytemplate of body) {\n      let tempTopologyTemplate: TopologyTemplate = new TopologyTemplate();\n      tempTopologyTemplate = topologytemplate;\n      topologyTemplateList.push(tempTopologyTemplate);\n    }\n    return topologyTemplateList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractTopologyTemplate - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractTopologyTemplate(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - TOPOLOGYTEMPLATE]: ' + JSON.stringify(body), TopologyTemplateService.name);\n    Logger.info('[RESPONSE - TOPOLOGYTEMPLATE]: Extract Topology Template Data', TopologyTemplateService.name);\n    let topologyTemplate: TopologyTemplate = new TopologyTemplate();\n    topologyTemplate = body;\n    return topologyTemplate || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/topologytemplate/topologytemplate.service.ts","import { Logger } from '../../../../logger/logger';\nimport { RelationshipType } from '../../datamodels/types/relationshiptype';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - RelationshipTypeService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for RelationshipTypes\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class RelationshipTypeService {\n\n  // URL of the REST Interface End-Point\n  private relationshipTypeUrl = '/api/relationshiptypes';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getRelationshipTypes - Send GET all RelationshipType REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getRelationshipTypes(): Observable<RelationshipType[]> {\n    Logger.info('[REQUEST - RELATIONSHIPTYPE] Send GET Relationship Types Request', RelationshipTypeService.name);\n    return this.http.get(this.relationshipTypeUrl).map(this.extractRelationshipTypes).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getRelationshipType - Send GET RelationshipType REQUEST\n   *\n   * @param - id: number - ID of the RelationshipType which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getRelationshipType(id: number): Observable<RelationshipType> {\n    Logger.info('[REQUEST - RELATIONSHIPTYPE] Send GET Relationship Type Request with ID:' + id, RelationshipTypeService.name);\n    return this.http.get(this.relationshipTypeUrl + '/' + id).map(this.extractRelationshipType).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createRelationshipType - Send POST RelationshipType REQUEST\n   *\n   * @param - relationshipType: RelationshipType - RelationshipType which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createRelationshipType(relationshipType: RelationshipType): Observable<RelationshipType> {\n    Logger.info('[REQUEST - RELATIONSHIPTYPE] Send POST RelationshipType Request', RelationshipTypeService.name);\n    Logger.data('[REQUEST - RELATIONSHIPTYPE]' + JSON.stringify(relationshipType), RelationshipTypeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.relationshipTypeUrl, relationshipType, options).map(this.extractRelationshipType).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateRelationshipType - Send PUT RelationshipType REQUEST�\n   *\n   * @param - relationshipType: RelationshipType - RelationshipType which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateRelationshipType(relationshipType: RelationshipType): Observable<RelationshipType> {\n    Logger.info('[REQUEST - RELATIONSHIPTYPE] Send PUT RelationshipType Request', RelationshipTypeService.name);\n    Logger.data('[REQUEST - RELATIONSHIPTYPE] ' + JSON.stringify(relationshipType), RelationshipTypeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.relationshipTypeUrl + '/' + relationshipType.id, relationshipType, options).map(this.extractRelationshipType).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteRelationshipType - Send DELETE RelationshipType REQUEST\n   *\n   * @param - id: number - ID of the RelationshipType which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteRelationshipType(id: number): Observable<RelationshipType> {\n    Logger.info('[REQUEST - RELATIONSHIPTYPE] Send DELETE RelationshipType Request with ID: ' + id, RelationshipTypeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.relationshipTypeUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractRelationshipTypes - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractRelationshipTypes(res: Response) {\n    Logger.info('[RESPONSE - RELATIONSHIPTYPE]: Extract Data of Response Body', RelationshipTypeService.name);\n    let body = res.json();\n    let relationshipTypeList: RelationshipType[] = [];\n    Logger.data('[RESPONSE - RELATIONSHIPTYPE]: ' + JSON.stringify(body), RelationshipTypeService.name);\n    for (let relationshipType of body) {\n      let tempRelationshipType: RelationshipType = new RelationshipType();\n      tempRelationshipType = relationshipType;\n      relationshipTypeList.push(tempRelationshipType);\n    }\n    return relationshipTypeList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractRelationshipType - Extract data from response data object\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractRelationshipType(res: Response) {\n    Logger.info('[RESPONSE - RELATIONSHIPTYPE]: Extract Data of Response Body', RelationshipTypeService.name);\n    let body = res.json();\n    Logger.data('[RESPONSE - RELATIONSHIPTYPE]: ' + JSON.stringify(body), RelationshipTypeService.name);\n    let relationshipType: RelationshipType = new RelationshipType();\n    relationshipType = body;\n    return relationshipType || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/types/relationshiptype.service.ts","import { ExpectedPropertyComponent } from './expectedproperty/expectedproperty.component';\r\nimport { ProvidedPropertyComponent } from './providedproperty/providedproperty.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule\r\n  ],\r\n  declarations: [ExpectedPropertyComponent, ProvidedPropertyComponent],\r\n  exports: [ExpectedPropertyComponent, ProvidedPropertyComponent]\r\n})\r\n\r\n/**********************************************************************************************************************************************************************************************************\r\n *\r\n * @module PropertyModule - SharedModule as wrapper for ExpectedProperties and ProvidedProperties import the module when you need access to the properties\r\n *\r\n * @author Arthur Kaul\r\n *\r\n *********************************************************************************************************************************************************************************************************/\r\nexport class PropertyModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modules/metrics/property.module.ts","/**********************************************************************************************************************************************************************************************************\n *\n * @class - Constants - Collection of all constants values which are needed in the application context.\n *\n * @field - LEVELHEIGHT - Height of the level area at initial creation\n * @field - LEVELGAPOFFSET - Gap between the level areas\n * @field - LABELOFFSET - Offset between level area an Label\n * @field - NODEHEIGHT - Node height at initial creation\n * @field - NODEWIDTH - Node width at initial creation\n * @field - FLASHMESSAGETIMEOUT - Timeout value for the flash messages\n *\n * @author - Arthur Kaul\n *\n *********************************************************************************************************************************************************************************************************/\nexport class Constants {\n\n  public static readonly LEVELHEIGHT = 300;\n  public static readonly LEVELGAPOFFSET = 40;\n  public static readonly LABELOFFSET = 50;\n  public static readonly NODEHEIGHT = 150;\n  public static readonly NODEWIDTH = 350;\n  public static readonly FLASHMESSAGETIMEOUT = 4000;\n  public static readonly LOWESTABSTRACTIONLEVEL = 0;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/constants.ts","import { Level } from './level';\nimport { LevelGraphNode } from './levelgraphnode';\nimport { LevelGraphRelation } from './levelgraphrelation';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - LevelGraph - LevelGraph Model is used for the refinement of TopologyTemplate Data Models\n *\n * @field - id: number - ID of the LevelGraph\n * @field - name: string - Name of the LevelGraph\n * @field - levels: Level[] - Array of the different levels of a LevelGraph\n * @field - levelGraphNodes: LevelGraphNode[] - Array of all LevelGraphNodes in the LevelGraph\n * @field - levelGraphRelations: LevelGraphRelation[] - Array of all LevelGraphRelations in the LevelGraph\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class LevelGraph {\n\n  id: number;\n  name: string;\n  levels: Level[];\n  levelGraphNodes: LevelGraphNode[];\n  levelGraphRelations: LevelGraphRelation[];\n\n  checked = false;\n\n  constructor() {\n    this.name = 'Unnamed';\n    this.levels = [];\n    this.levelGraphRelations = [];\n    this.levelGraphNodes = [];\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * Getter Methods\n   *\n   ******************************************************************************************************************************************************************************************************/\n\n  public getLevel(levelId: number) {\n    for (let i = 0; i < this.levels.length; i++) {\n      if (this.levels[i].id === levelId) {\n        return this.levels[i];\n      }\n    }\n    return null;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * Setter Methods\n   *\n   ******************************************************************************************************************************************************************************************************/\n\n  public setLevel(level: Level) {\n    for (let i = 0; i < this.levels.length; i++) {\n      if (this.levels[i].id === level.id) {\n        this.levels[i] = level;\n      }\n    }\n  }\n\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * Remove Methods\n   *\n   ******************************************************************************************************************************************************************************************************/\n  public removeLevel(levelId) {\n    this.levels = this.levels.filter(function(obj) {\n      return obj.id !== levelId;\n    });\n  }\n\n  public removeLevelGraphRelation(levelGraphRelationId) {\n    this.levels = this.levels.filter(function(obj) {\n      return obj.id !== levelGraphRelationId;\n    });\n  }\n\n  public removeLevelGraphNode(levelGraphNodeId) {\n    this.levels = this.levels.filter(function(obj) {\n      return obj.id !== levelGraphNodeId;\n    });\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/levelgraph/levelgraph.ts","import { NodeTemplate } from './nodetemplate';\nimport { RelationshipTemplate } from './relationshiptemplate';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - TopologyTemplate -  TopologyTemplate Model is used for model a abstract or specific system architecture\n *\n * @field - id: number - ID of the TopologyTemplate\n * @field - name: string - Name of the TopologyTemplate\n * @field - nodeTemplates: NodeTemplate[] - Array of all NodeTemplates in the LevelGraph\n * @field - relationshipTemplates: RelationshipTemplate[] - Array of all RelationshipTemplates in the LevelGraph\n * @field - parentTopologyTemplate: TopologyTemplate - Parent of the TopologyTemplate from which it was derived\n * @field - parentTopologyTemplateId: number - ID of the parent of the topology\n * @field - childTopologyTemplates: TopologyTemplate[] - Array of child of the TopologyTemplate. Child are all TopologyTemplate which are generated through the refinement from this topology\n * @field - abstractionLevel: number : Level is calculated from the Root Topology\n *\n * @author Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class TopologyTemplate {\n\n  id: number;\n  name: string;\n\n  nodeTemplates: NodeTemplate[];\n  relationshipTemplates: RelationshipTemplate[];\n\n  parentTopologyTemplate: TopologyTemplate;\n  parentTopologyTemplateId: number;\n  childTopologyTemplates: TopologyTemplate[];\n\n  abstractionLevel: number;\n\n  constructor() {\n    this.id = null;\n    this.name = 'Unnamed';\n    this.nodeTemplates = [];\n    this.relationshipTemplates = [];\n    this.childTopologyTemplates = [];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/topology/topologytemplate.ts","import { Logger } from '../../../../logger/logger';\nimport { Repository } from '../../datamodels/repository/repository';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, Response, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/*********************************************************************************************************************************************************************************************************\n *\n * @service - RepositoryService  - Implements the calls to the rest interface of the application server and\n *                                 handle the request construction and response extraction for Repository data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class RepositoryService {\n\n  // URL of the REST Interface End-Point\n  private repositoriesUrl = '/api/repositories';\n\n  constructor(private http: Http) { }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @request - getRepositories - Send GET all Repositories REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getRepositories(): Observable<Repository[]> {\n    Logger.info('[REQUEST - REPOSITORY] Send GET Repositories Request', RepositoryService.name);\n    return this.http.get(this.repositoriesUrl).map(this.extractRepositorys).catch(this.handleError);\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @request - getRepository - Send GET Repository REQUEST\n   *\n   * @param - id: number - ID of the Repository which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getRepository(id: string): Observable<Repository> {\n    Logger.info('[REQUEST - REPOSITORY] Send GET Repository Request with ID:' + id, RepositoryService.name);\n    return this.http.get(this.repositoriesUrl + '/' + id).map(this.extractRepository).catch(this.handleError);\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @request - createRepository - Send POST Repository REQUEST\n   *\n   * @param - repository: Repository - Repository which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createRepository(repository: Repository): Observable<Repository> {\n    Logger.info('[REQUEST - REPOSITORY] Send POST Repository Request', RepositoryService.name);\n    Logger.data('[REQUEST - REPOSITORY]' + JSON.stringify(repository), RepositoryService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.repositoriesUrl, repository, options).map(this.extractRepository).catch(this.handleError);\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @request - Send PUT Repository REQUEST\n   *\n   * @param - repository: Repository - Repository which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateRepository(repository: Repository): Observable<Repository> {\n    Logger.info('[REQUEST - REPOSITORY] Send PUT Request Repository', RepositoryService.name);\n    Logger.data('[REQUEST - REPOSITORY] ' + JSON.stringify(repository), RepositoryService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.repositoriesUrl + '/' + repository.id, repository, options).map(this.extractRepository).catch(this.handleError);\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteRepository - Send DELETE Repository REQUEST\n   *\n   * @param - id: number - ID of the Repository which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteRepository(id: string): Observable<Repository> {\n    Logger.info('[REQUEST - REPOSITORY] Send DELETE Repository Request with ID: ' + id, RepositoryService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.repositoriesUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @response - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractRepositorys(res) {\n\n    let body = res.json();\n    let repoList: Repository[] = [];\n    Logger.info('[RESPONSE - REPOSITORIES]: Extract Data of Response Body', RepositoryService.name);\n    Logger.data('[RESPONSE - REPOSITORIES]: ' + JSON.stringify(body), RepositoryService.name);\n    for (let repository of body) {\n      let tempRepository: Repository = new Repository();\n      tempRepository = repository;\n      repoList.push(tempRepository);\n    }\n    return repoList || {};\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @response - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractRepository(res: Response) {\n\n    let body = res.json();\n    Logger.info('[RESPONSE - REPOSITORY]: Extract Data of Response Body', RepositoryService.name);\n    Logger.data('[RESPONSE - REPOSITORY]: ' + JSON.stringify(body), RepositoryService.name);\n    let rep: Repository = new Repository();\n    rep = body;\n    return rep || {};\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError -  Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/repository/repository.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 679\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/administration/administration.component.css\n// module id = 680\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".dashboard-container{\\r\\n\\tpadding-top: 60px;\\r\\n\\twidth:100%;\\r\\n\\theight:90%;\\r\\n}\\r\\n\\r\\n.dashboard-router-outlet{\\r\\n\\tpadding:5px; \\r\\n\\tmargin:0px;\\r\\n\\t\\theight:100%;\\r\\n\\t\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = 681\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f3e2c7+0,c19e67+50,b68d4c+51,e9d4b3+100;L+Brown+3D */\\r\\n\\r\\n/**********************************************************************************************************************************************\\r\\n *\\r\\n * Gradients\\r\\n *\\r\\n ***********************************************************************************************************************************************/\\r\\n.repositoryListItem {\\r\\n\\tbackground: #f5f6f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\r\\n\\tbackground: linear-gradient(to bottom, #f5f6f6 0%, #dbdce2 21%, #b8bac6 49%, #dddfe3\\r\\n\\t\\t80%, #f5f6f6 100%);\\r\\n\\t/* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f5f6f6',\\r\\n\\t\\tendColorstr='#f5f6f6', GradientType=0); /* IE6-9 */\\r\\n\\tpadding: 5px;\\r\\n\\tmarging: 5px;\\r\\n\\tfont-size: 1.2em;\\r\\n}\\r\\n\\r\\n.repositoryListItem:hover {\\r\\n\\tbackground: #3c6e9a;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\n.nodeType { /* ff3.6+ */ /* safari4+,chrome */ /* safari5.1+,chrome10+ */ /* opera 11.10+ */ /* ie10+ */\\r\\nbackground: linear-gradient(1deg, rgba(222,152,12,1) 0%, rgba(232,159,12,1) 25%, rgba(255,174,13,1) 52%, rgba(237,162,12,1) 75%, rgba(219,150,11,1) 100%); /* w3c */\\r\\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#DB960B', endColorstr='#DE980C',GradientType=0 ); /* ie6-9 */\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n\\t  border-style: solid;\\r\\n    border-width: 3px;\\r\\n    border-color:black;\\r\\n}\\r\\n\\r\\n.relationshipType { /* ff3.6+ */ /* safari4+,chrome */\\r\\n\\t/* safari5.1+,chrome10+ */ /* opera 11.10+ */ /* ie10+ */\\r\\n\\tbackground: linear-gradient(0deg, rgba(0, 128, 0, 1) 0%,\\r\\n\\t\\trgba(27, 252, 15, 1) 50%, rgba(0, 128, 0, 1) 100%); /* w3c */\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#008000',\\r\\n\\t\\tendColorstr='#008000', GradientType=0); /* ie6-9 */\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n\\tborder-style: solid;\\r\\n    border-width: 3px;\\r\\n    border-color:black;\\r\\n}\\r\\n\\r\\n.relationshipTypeFragment {\\r\\n\\t\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n\\tbackground-color:#C5E0B3;\\r\\n}\\r\\n\\r\\n.nodeTypeFragment{\\r\\n\\tbackground-color:#F7CBAC;\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n/**********************************************************************************************************************************************\\r\\n *\\r\\n * Buttons\\r\\n *\\r\\n ***********************************************************************************************************************************************/\\r\\n#saveBtn {\\r\\n\\tmargin-right: 5px;\\r\\n\\tmargin-left: 5px;\\r\\n}\\r\\n\\r\\n#selectRepository {\\r\\n\\twidth: 100%;\\r\\n\\tmargin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#collapseBtn {\\r\\n\\tmargin-right: 10px;\\r\\n\\tmargin-left: 10px;\\r\\n}\\r\\n\\r\\n/**********************************************************************************************************************************************\\r\\n *\\r\\n * Controller Panel\\r\\n *\\r\\n ***********************************************************************************************************************************************/\\r\\n.controller-group {\\r\\n\\tmargin: 10px;\\r\\n\\tpadding: 10px;\\r\\n}\\r\\n\\r\\n.group {\\r\\n\\tmargin: 5px;\\r\\n\\tpadding: 5px;\\r\\n}\\r\\n\\r\\n#level-list {\\r\\n\\toverflow: scroll;\\r\\n\\theight: 150px;\\r\\n\\tmargin: 5px;\\r\\n\\tpadding: 5px;\\r\\n}\\r\\n\\r\\n/**********************************************************************************************************************************************\\r\\n *\\r\\n * Tool Box\\r\\n *\\r\\n ***********************************************************************************************************************************************/\\r\\n#toolbox_area {\\r\\n\\tmargin-top: 10px;\\r\\n\\tmargin-right: 10px;\\r\\n\\twidth: 300px;\\r\\n\\theight: 100%;\\r\\n\\toverflow: auto;\\r\\n}\\r\\n\\r\\n.toolbox-group {\\r\\n\\tmargin: 0px;\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n\\tborder-style: solid;\\r\\n\\tborder-width: 2px;\\r\\n\\tborder-color: grey\\r\\n}\\r\\n\\r\\n.tool-item {\\r\\n\\tmargin: 0px;\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n.modelling-tool-list {\\r\\n\\tmargin: 0px;\\r\\n\\tmargin-top: 5px;\\r\\n\\tpadding: 0px;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n#modelling-tool-list:hover {\\r\\n\\tbackground: #3c6e9a;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\n.warning-item {\\r\\n\\tpadding: 5px;\\r\\n}\\r\\n\\r\\n/**********************************************************************************************************************************************\\r\\n *\\r\\n * Draw Area\\r\\n *\\r\\n ***********************************************************************************************************************************************/\\r\\nsvg {\\r\\n\\theight: 30000px;\\r\\n\\twidth: 30000px;\\r\\n\\t\\r\\n}\\r\\n\\r\\n#draw_area {\\r\\n\\theight: 100%;\\r\\n\\tmargin-top: 10px;\\r\\n\\tmargin-right: 0px;\\r\\n\\toverflow: scroll;\\r\\n}\\r\\n\\r\\n.level-move-bar {\\r\\n\\twidth: 100%;\\r\\n\\tfill: grey;\\r\\n}\\r\\n\\r\\n.level-panel {\\r\\n\\twidth: 100%;\\r\\n\\tfill: white;\\r\\n\\tfill-opacity: 0.0;\\r\\n\\tstroke-dasharray: 10, 20;\\r\\n\\tstroke-width: 8;\\r\\n\\tstroke: black;\\r\\n\\tstroke-dasharray: 10, 20;\\r\\n}\\r\\n\\r\\n#modeller{\\r\\n\\theight: 100%;\\r\\n}\\r\\n\\r\\nul {\\r\\n\\tlist-style-type: none;\\r\\n}\\r\\n\\r\\n.list {\\r\\n\\tpadding: 5px;\\r\\n\\tmax-height: 300px;\\r\\n\\toverflow: auto;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n\\tfont: bold 20px/1.5 Helvetica, Verdana, sans-serif;\\r\\n}\\r\\n\\r\\nli img {\\r\\n\\tfloat: left;\\r\\n\\tmargin: 0 15px 0 0;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.component.css\n// module id = 682\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".panel{\\r\\n\\tmargin:30px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/levelgraphtool/levelgraphtool.component.css\n// module id = 683\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".listItem {\\r\\n\\tbackground: #f5f6f6; /* Old browsers */ /* FF3.6-15 */ /* Chrome10-25,Safari5.1-6 */\\r\\n\\tbackground: linear-gradient(to bottom, #f5f6f6 0%, #dbdce2 21%, #b8bac6 49%, #dddfe3\\r\\n\\t\\t80%, #f5f6f6 100%);\\r\\n\\t/* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f5f6f6',\\r\\n\\t\\tendColorstr='#f5f6f6', GradientType=0); /* IE6-9 */\\r\\n\\tpadding: 5px;\\r\\n\\tmarging: 5px;\\r\\n\\tfont-size: 1.2em;\\r\\n\\r\\n}\\r\\n\\r\\n.listItem:hover {\\r\\n\\tbackground: #3c6e9a;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\n.nodeTemplate { /* ff3.6+ */ /* safari4+,chrome */ /* safari5.1+,chrome10+ */ /* opera 11.10+ */ /* ie10+ */\\r\\nbackground: linear-gradient(1deg, rgba(143,193,242,1) 0%, rgba(123,166,209,1) 50%, rgba(143,193,242,1) 100%); /* w3c */\\r\\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8FC1F2', endColorstr='#8FC1F2',GradientType=0 ); /* ie6-9 */\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n    border-style: solid;\\r\\n    border-width: 3px;\\r\\n    border-color:black;\\r\\n}\\r\\n\\r\\n.nodeTemplate:hover {\\r\\n\\tbackground: #3c6e9a;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n\\r\\nsvg {\\r\\n\\theight: 30000px;\\r\\n\\twidth: 30000px;\\r\\n}\\r\\n\\r\\n/*********************************************************************************************************************************\\r\\n *\\r\\n * Heading \\r\\n *\\r\\n ********************************************************************************************************************************/\\r\\n.control-group {\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n}\\r\\n\\r\\n/*********************************************************************************************************************************\\r\\n *\\r\\n * Tool Box \\r\\n *\\r\\n ********************************************************************************************************************************/\\r\\n#toolbox_area {\\r\\n\\tmargin-top: 10px;\\r\\n\\theight: 100%;\\r\\n\\twidth:300px;\\r\\n\\toverflow: auto;\\r\\n}\\r\\n\\r\\n.toolbox-group {\\r\\n\\tmargin: 0px;\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n\\tborder-style: solid;\\r\\n\\tborder-width: 2px;\\r\\n\\tborder-color: grey\\r\\n}\\r\\n\\r\\n.tool-item {\\r\\n\\tmargin: 0px;\\r\\n\\tmargin-top: 5px;\\r\\n\\tmargin-bottom: 5px;\\r\\n\\tpadding: 10px;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\n/*********************************************************************************************************************************\\r\\n *\\r\\n * Draw Area Topology Templates \\r\\n *\\r\\n ********************************************************************************************************************************/\\r\\n#draw_area {\\r\\n\\theight: 100%;\\r\\n\\tmargin-top: 10px;\\r\\n\\tmargin-right: 0px;\\r\\n\\tmargin-left: 0px;\\r\\n\\toverflow: scroll;\\r\\n}\\r\\n\\r\\n/*********************************************************************************************************************************\\r\\n *\\r\\n * Buttons\\r\\n *\\r\\n ********************************************************************************************************************************/\\r\\n#selcetLevelGraph {\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\\r\\nul {\\r\\n\\tlist-style-type: none;\\r\\n}\\r\\n\\r\\n.list {\\r\\n\\tpadding: 5px;\\r\\n\\tmax-height: 300px;\\r\\n\\toverflow: auto;\\r\\n}\\r\\n\\r\\nli img {\\r\\n\\tfloat: left;\\r\\n\\tmargin: 0 15px 0 0;\\r\\n}\\r\\n\\r\\n\\r\\n.dropdown-submenu {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.dropdown-submenu>.dropdown-menu {\\r\\n    top: 0;\\r\\n    left: 100%;\\r\\n    margin-top: -6px;\\r\\n    margin-left: -1px;\\r\\n    border-radius: 0 6px 6px 6px;\\r\\n}\\r\\n\\r\\n.dropdown-submenu:hover>.dropdown-menu {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.dropdown-submenu>a:after {\\r\\n    display: block;\\r\\n    content: \\\" \\\";\\r\\n    float: right;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-color: transparent;\\r\\n    border-style: solid;\\r\\n    border-width: 5px 0 5px 5px;\\r\\n    border-left-color: #ccc;\\r\\n    margin-top: 5px;\\r\\n    margin-right: -10px;\\r\\n}\\r\\n\\r\\n.dropdown-submenu:hover>a:after {\\r\\n    border-left-color: #fff;\\r\\n}\\r\\n\\r\\n.dropdown-submenu.pull-left {\\r\\n    float: none;\\r\\n}\\r\\n\\r\\n.dropdown-submenu.pull-left>.dropdown-menu {\\r\\n    left: -100%;\\r\\n    margin-left: 10px;\\r\\n    border-radius: 6px 0 6px 6px;\\r\\n}\\r\\n\\r\\n#selectRepository {\\r\\n\\twidth: 100%;\\r\\n\\tmargin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#level_graph_tool{\\r\\n\\t height: 98%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/topologytool/topologymodeller/topologymodeller.component.css\n// module id = 684\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/topologytool/topologytemplatetool.component.css\n// module id = 685\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraph/levelgrahdetails/levelgrahdetails.component.css\n// module id = 686\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraph/levelgraph.component.css\n// module id = 687\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphnode/levelgraphnode.component.css\n// module id = 688\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/generaldata/generaldata.component.css\n// module id = 689\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetails.component.css\n// module id = 690\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelation.component.css\n// module id = 691\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/generaldata/generaldata.component.css\n// module id = 692\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component.css\n// module id = 693\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/metrics/expectedproperty/expectedproperty.component.css\n// module id = 694\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/metrics/providedproperty/providedproperty.component.css\n// module id = 695\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/nodetemplate/nodetemplate.component.css\n// module id = 696\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/generaldata/generaldata.component.css\n// module id = 697\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.component.css\n// module id = 698\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplate.component.css\n// module id = 699\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/generaldata/generaldata.component.css\n// module id = 700\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.component.css\n// module id = 701\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/repository/repository.component.css\n// module id = 702\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/repository/repositorydetails/repositorydetails.component.css\n// module id = 703\n// module chunks = 0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/topologytemplate/topologytemplate.component.css\n// module id = 704\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.component.css\n// module id = 705\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/nodetype/nodetype.component.css\n// module id = 706\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/generaldata/generaldata.component.css\n// module id = 707\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.component.css\n// module id = 708\n// module chunks = 0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/relationshiptype/relationshiptype.component.css\n// module id = 709\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/generaldata/generaldata.component.css\n// module id = 710\n// module chunks = 0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshiptypedetails.component.css\n// module id = 711\n// module chunks = 0","var map = {\n\t\"./af\": 256,\n\t\"./af.js\": 256,\n\t\"./ar\": 261,\n\t\"./ar-ly\": 257,\n\t\"./ar-ly.js\": 257,\n\t\"./ar-ma\": 258,\n\t\"./ar-ma.js\": 258,\n\t\"./ar-sa\": 259,\n\t\"./ar-sa.js\": 259,\n\t\"./ar-tn\": 260,\n\t\"./ar-tn.js\": 260,\n\t\"./ar.js\": 261,\n\t\"./az\": 262,\n\t\"./az.js\": 262,\n\t\"./be\": 263,\n\t\"./be.js\": 263,\n\t\"./bg\": 264,\n\t\"./bg.js\": 264,\n\t\"./bn\": 265,\n\t\"./bn.js\": 265,\n\t\"./bo\": 266,\n\t\"./bo.js\": 266,\n\t\"./br\": 267,\n\t\"./br.js\": 267,\n\t\"./bs\": 268,\n\t\"./bs.js\": 268,\n\t\"./ca\": 269,\n\t\"./ca.js\": 269,\n\t\"./cs\": 270,\n\t\"./cs.js\": 270,\n\t\"./cv\": 271,\n\t\"./cv.js\": 271,\n\t\"./cy\": 272,\n\t\"./cy.js\": 272,\n\t\"./da\": 273,\n\t\"./da.js\": 273,\n\t\"./de\": 275,\n\t\"./de-at\": 274,\n\t\"./de-at.js\": 274,\n\t\"./de.js\": 275,\n\t\"./dv\": 276,\n\t\"./dv.js\": 276,\n\t\"./el\": 277,\n\t\"./el.js\": 277,\n\t\"./en-au\": 278,\n\t\"./en-au.js\": 278,\n\t\"./en-ca\": 279,\n\t\"./en-ca.js\": 279,\n\t\"./en-gb\": 280,\n\t\"./en-gb.js\": 280,\n\t\"./en-ie\": 281,\n\t\"./en-ie.js\": 281,\n\t\"./en-nz\": 282,\n\t\"./en-nz.js\": 282,\n\t\"./eo\": 283,\n\t\"./eo.js\": 283,\n\t\"./es\": 285,\n\t\"./es-do\": 284,\n\t\"./es-do.js\": 284,\n\t\"./es.js\": 285,\n\t\"./et\": 286,\n\t\"./et.js\": 286,\n\t\"./eu\": 287,\n\t\"./eu.js\": 287,\n\t\"./fa\": 288,\n\t\"./fa.js\": 288,\n\t\"./fi\": 289,\n\t\"./fi.js\": 289,\n\t\"./fo\": 290,\n\t\"./fo.js\": 290,\n\t\"./fr\": 293,\n\t\"./fr-ca\": 291,\n\t\"./fr-ca.js\": 291,\n\t\"./fr-ch\": 292,\n\t\"./fr-ch.js\": 292,\n\t\"./fr.js\": 293,\n\t\"./fy\": 294,\n\t\"./fy.js\": 294,\n\t\"./gd\": 295,\n\t\"./gd.js\": 295,\n\t\"./gl\": 296,\n\t\"./gl.js\": 296,\n\t\"./he\": 297,\n\t\"./he.js\": 297,\n\t\"./hi\": 298,\n\t\"./hi.js\": 298,\n\t\"./hr\": 299,\n\t\"./hr.js\": 299,\n\t\"./hu\": 300,\n\t\"./hu.js\": 300,\n\t\"./hy-am\": 301,\n\t\"./hy-am.js\": 301,\n\t\"./id\": 302,\n\t\"./id.js\": 302,\n\t\"./is\": 303,\n\t\"./is.js\": 303,\n\t\"./it\": 304,\n\t\"./it.js\": 304,\n\t\"./ja\": 305,\n\t\"./ja.js\": 305,\n\t\"./jv\": 306,\n\t\"./jv.js\": 306,\n\t\"./ka\": 307,\n\t\"./ka.js\": 307,\n\t\"./kk\": 308,\n\t\"./kk.js\": 308,\n\t\"./km\": 309,\n\t\"./km.js\": 309,\n\t\"./ko\": 310,\n\t\"./ko.js\": 310,\n\t\"./ky\": 311,\n\t\"./ky.js\": 311,\n\t\"./lb\": 312,\n\t\"./lb.js\": 312,\n\t\"./lo\": 313,\n\t\"./lo.js\": 313,\n\t\"./lt\": 314,\n\t\"./lt.js\": 314,\n\t\"./lv\": 315,\n\t\"./lv.js\": 315,\n\t\"./me\": 316,\n\t\"./me.js\": 316,\n\t\"./mi\": 317,\n\t\"./mi.js\": 317,\n\t\"./mk\": 318,\n\t\"./mk.js\": 318,\n\t\"./ml\": 319,\n\t\"./ml.js\": 319,\n\t\"./mr\": 320,\n\t\"./mr.js\": 320,\n\t\"./ms\": 322,\n\t\"./ms-my\": 321,\n\t\"./ms-my.js\": 321,\n\t\"./ms.js\": 322,\n\t\"./my\": 323,\n\t\"./my.js\": 323,\n\t\"./nb\": 324,\n\t\"./nb.js\": 324,\n\t\"./ne\": 325,\n\t\"./ne.js\": 325,\n\t\"./nl\": 326,\n\t\"./nl.js\": 326,\n\t\"./nn\": 327,\n\t\"./nn.js\": 327,\n\t\"./pa-in\": 328,\n\t\"./pa-in.js\": 328,\n\t\"./pl\": 329,\n\t\"./pl.js\": 329,\n\t\"./pt\": 331,\n\t\"./pt-br\": 330,\n\t\"./pt-br.js\": 330,\n\t\"./pt.js\": 331,\n\t\"./ro\": 332,\n\t\"./ro.js\": 332,\n\t\"./ru\": 333,\n\t\"./ru.js\": 333,\n\t\"./se\": 334,\n\t\"./se.js\": 334,\n\t\"./si\": 335,\n\t\"./si.js\": 335,\n\t\"./sk\": 336,\n\t\"./sk.js\": 336,\n\t\"./sl\": 337,\n\t\"./sl.js\": 337,\n\t\"./sq\": 338,\n\t\"./sq.js\": 338,\n\t\"./sr\": 340,\n\t\"./sr-cyrl\": 339,\n\t\"./sr-cyrl.js\": 339,\n\t\"./sr.js\": 340,\n\t\"./ss\": 341,\n\t\"./ss.js\": 341,\n\t\"./sv\": 342,\n\t\"./sv.js\": 342,\n\t\"./sw\": 343,\n\t\"./sw.js\": 343,\n\t\"./ta\": 344,\n\t\"./ta.js\": 344,\n\t\"./te\": 345,\n\t\"./te.js\": 345,\n\t\"./th\": 346,\n\t\"./th.js\": 346,\n\t\"./tl-ph\": 347,\n\t\"./tl-ph.js\": 347,\n\t\"./tlh\": 348,\n\t\"./tlh.js\": 348,\n\t\"./tr\": 349,\n\t\"./tr.js\": 349,\n\t\"./tzl\": 350,\n\t\"./tzl.js\": 350,\n\t\"./tzm\": 352,\n\t\"./tzm-latn\": 351,\n\t\"./tzm-latn.js\": 351,\n\t\"./tzm.js\": 352,\n\t\"./uk\": 353,\n\t\"./uk.js\": 353,\n\t\"./uz\": 354,\n\t\"./uz.js\": 354,\n\t\"./vi\": 355,\n\t\"./vi.js\": 355,\n\t\"./x-pseudo\": 356,\n\t\"./x-pseudo.js\": 356,\n\t\"./zh-cn\": 357,\n\t\"./zh-cn.js\": 357,\n\t\"./zh-hk\": 358,\n\t\"./zh-hk.js\": 358,\n\t\"./zh-tw\": 359,\n\t\"./zh-tw.js\": 359\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 717;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 717\n// module chunks = 0","import { Logger } from '../../../logger/logger';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, ResponseContentType } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - ExportXmlService  - Implements the calls to the rest interface of the application server and\n *                                handle the request construction and response extraction for RelationshipTypeFragment data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class ExportXmlService {\n\n  // URL of the REST Interface End-Point\n  private exportUrl = '/api/export/xml';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getXmlFile - XML export request to the server for different type of data\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getXmlFile(urlPart: string): Observable<Blob> {\n    Logger.info('[REQUEST - EXPORT] Send GET XML-File Request', ExportXmlService.name);\n    let headers = new Headers({ 'Content-Type': 'application/xml', responseType: ResponseContentType.Text});\n    let options = new RequestOptions(headers);\n    return this.http.get(this.exportUrl + urlPart, options).map(response => new Blob([response.text()], {type: 'application/xml'})).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/exportxml.service.ts","module.exports = \"<!-- Router Outlet Selector for the lazy loaded DashboardComponent  -->\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 746\n// module chunks = 0","module.exports = \"<!-- AdministrationComponent -->\\n<div id=\\\"accordion\\\" class=\\\"dashboard_area\\\">\\n\\n\\t<div class=\\\"panel panel-default \\\">\\n\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"w3-theme-d4 w3-card-4 heading row heading panel-heading control-panel\\\">\\n\\t\\t\\t<h2 class=\\\"col-sm-3\\\">Administration</h2>\\n\\n\\t\\t\\t<!-- Import Button-->\\n\\t\\t\\t<button class=\\\"w3-right w3-theme-l1 btn btn-primary\\\" id=\\\"import\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#importAreaDefinition\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> Import\\n\\t\\t\\t</button>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Export Button-->\\n\\t\\t\\t<button class=\\\"w3-right w3-theme-l1 btn btn-primary\\\" id=\\\"export\\\" aria-expanded=\\\"true\\\" (click)=\\\"exportDefinition()\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> Export\\n\\t\\t\\t</button>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Import Panel -->\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"importAreaDefinition\\\">\\n\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"file\\\">Definition XML-File: </label> <input class=\\\"form-control\\\" #file type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"importDefinition()\\\">Upload</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<!-- Tab Data Panel -->\\n\\t<div class=\\\"data-panel\\\">\\n\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#repository\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Repository</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#levelGraph\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Level Graphs</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#topologyTemplate\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Topology Templates</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\n\\t\\t\\t<div id=\\\"repository\\\" class=\\\"w3-card-4 rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RepositoryComponent -->\\n\\t\\t\\t\\t<app-repository [repositories]=\\\"repositories\\\"></app-repository>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"levelGraph\\\" class=\\\"w3-card-4 rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the LevelGraphComponent -->\\n\\t\\t\\t\\t<app-levelgraph [levelGraphs]=\\\"levelGraphs\\\"></app-levelgraph>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"topologyTemplate\\\" class=\\\"w3-card-4 rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the TopologyTemplateComponent -->\\n\\t\\t\\t\\t<app-topologytemplate [topologyTemplates]=\\\"topologyTemplates\\\"></app-topologytemplate>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/administration/administration.component.html\n// module id = 747\n// module chunks = 0","module.exports = \"<!-- Selector of the top navigation bar available in the entire application -->\\n<app-top-nav></app-top-nav>\\n\\n<!-- Application Content -->\\n<section class=\\\"dashboard-container\\\">\\n\\t\\n\\t<!-- Flash Message for display errors/warnings/success messages -->\\n\\t<div><flash-message messagePositioning=\\\"top-right\\\"></flash-message></div>\\n\\t\\n\\t<!-- Router Outlet is used for display the components which are registered in the dashboard.routes.ts file-->\\n\\t<router-outlet class=\\\"dashboard-router-outlet\\\"></router-outlet>\\n\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = 748\n// module chunks = 0","module.exports = \"<!-- LevelGraphModellerComponent Area -->\\n<div id=\\\"modeller\\\" class=\\\"container-fluid\\\" (mouseup)=\\\"stopAllEvents()\\\">\\n\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<!-- Header-->\\n\\t\\t<div class=\\\"heading col-sm-12 w3-theme-d3 w3-card-4\\\">\\n\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t<h3>\\n\\t\\t\\t\\t\\tLevel-Graph Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraph.name}}\\\" />\\n\\t\\t\\t\\t</h3>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t<h3></h3>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"col-sm-2\\\">\\n\\t\\t\\t\\t<button id=\\\"collapseBtn\\\" class=\\\" w3-theme-d1 btn btn-primary w3-right btn-10\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#control_level_graph_tool\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"control_level_graph_tool\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-caret-down w3-right fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t<button id=\\\"saveBtn\\\" class=\\\"btn btn-primary w3-right w3-green btn-10\\\" type=\\\"button\\\" (click)=\\\"updateLevelGraph()\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"icon fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>Save\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Controller Panel for the controller groups like filters -->\\n\\t\\t<div id=\\\"control_level_graph_tool\\\" class=\\\"col-sm-12 w3-card-4 w3-theme collapse\\\">\\n\\n\\t\\t\\t<!-- Controller Group for add/remove level from the level graph and show/hide spezial levels-->\\n\\t\\t\\t<div class=\\\"controller-group col-sm-4 w3-theme-l2 \\\">\\n\\t\\t\\t\\t<div class=\\\"group\\\">\\n\\t\\t\\t\\t\\t<button class=\\\" w3-right\\\" (click)=\\\"addLevel()\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<input readonly style=\\\"width: 100px\\\" id=\\\"number_of_levels\\\" type=\\\"number\\\" class=\\\"w3-center w3-right\\\" value=\\\"{{currentLevelGraph.levels.length }}\\\" min=\\\"2\\\">\\n\\t\\t\\t\\t\\t<button class=\\\" w3-right\\\" (click)=\\\"removeLevel()\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<label class=\\\" w3-right\\\" for=\\\"number_of_levels\\\">Number of Levels:</label>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<label>Displayed Levels:</label>\\n\\t\\t\\t\\t<div id=\\\"level-list\\\" class=\\\"w3-light-grey\\\">\\n\\t\\t\\t\\t\\t<label *ngFor=\\\"let level of currentLevelGraph.levels\\\" class=\\\"form-control\\\"> <input type=\\\"checkbox\\\" name=\\\"levels\\\" [(ngModel)]=\\\"level.visible\\\" value=\\\"{{level.id}}\\\" (click)=\\\"onShowLevel(level)\\\" /> Level {{level.depth}}\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Controller Group for hide/show the different LevelGraphRelationTypes-->\\n\\t\\t\\t<div id=\\\"control_displayed_relationTypes\\\" class=\\\"controller-group col-sm-4 form-group w3-light-grey w3-theme-l2\\\">\\n\\t\\t\\t\\t<label>Displayed Level-Graph RelationTypes:</label> <label *ngFor=\\\"let levelGraphRelationType of levelGraphRelationTypes \\\" class=\\\"form-control\\\"> <input type=\\\"checkbox\\\" name=\\\"levelGraphRelationTypes\\\" [(ngModel)]=\\\"levelGraphRelationType.checked\\\" /> {{levelGraphRelationType.name}}\\n\\t\\t\\t\\t</label>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row\\\" style=\\\"height: 100%\\\">\\n\\n\\t\\t<!-- Tool box Panel for the tool box groups like ModellingTools / LevelGraphNodes / RepositoryNodes -->\\n\\t\\t<div id=\\\"toolbox_area\\\" class=\\\"w3-col w3-card-4 w3-theme\\\">\\n\\n\\t\\t\\t<h5 class=\\\"w3-center w3-margin\\\">\\n\\t\\t\\t\\t<b>Tool Box</b>\\n\\t\\t\\t</h5>\\n\\n\\t\\t\\t<!-- ModelTools -->\\n\\t\\t\\t<div class=\\\"toolbox-group\\\">\\n\\t\\t\\t\\t<label>Model Tools:</label>\\n\\t\\t\\t\\t<ul id=\\\"modelling-tool-list\\\">\\n\\t\\t\\t\\t\\t<li class=\\\"tool-item\\\"><input style=\\\"margin-right: 10px;\\\" type=\\\"radio\\\" name=\\\"radiogroup\\\" [checked]=\\\"toolList[0].checked\\\" (click)=\\\"changeTool(toolList[0])\\\" value=\\\"{{toolList[0].name}}\\\"><i class=\\\"fa fa-mouse-pointer\\\" aria-hidden=\\\"true\\\"></i>{{toolList[0].name}}</li>\\n\\t\\t\\t\\t\\t<li class=\\\"tool-item\\\"><input style=\\\"margin-right: 10px;\\\" type=\\\"radio\\\" name=\\\"radiogroup\\\" [checked]=\\\"toolList[1].checked\\\" (click)=\\\"changeTool(toolList[1])\\\" value=\\\"{{toolList[1].name}}\\\"><i class=\\\"fa fa-arrow-right\\\" style=\\\"color: green;\\\" aria-hidden=\\\"true\\\"></i>{{toolList[1].name}}</li>\\n\\t\\t\\t\\t\\t<li class=\\\"tool-item\\\"><input style=\\\"margin-right: 10px;\\\" type=\\\"radio\\\" name=\\\"radiogroup\\\" [checked]=\\\"toolList[2].checked\\\" (click)=\\\"changeTool(toolList[2])\\\" value=\\\"{{toolList[2].name}}\\\"><i class=\\\"fa fa-arrow-right\\\" style=\\\"color: gray;\\\" aria-hidden=\\\"true\\\"></i>{{toolList[2].name}}</li>\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Level Graph Node Tools -->\\n\\t\\t\\t<div class=\\\"toolbox-group\\\">\\n\\t\\t\\t\\t<label>Fragments:</label>\\n\\t\\t\\t\\t<button style=\\\"width: 100%\\\" class=\\\"w3-theme-d2 w3-border-brown btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#toolbox_level_graph_nodes\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"toolbox_level_graph_nodes\\\">\\n\\t\\t\\t\\t\\tFragmenttypes<i class=\\\"fa fa-caret-down w3-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<div class=\\\"collapse\\\" id=\\\"toolbox_level_graph_nodes\\\" style=\\\"margin: 0px; padding: 0px; width: 100%\\\">\\n\\t\\t\\t\\t\\t<ul id=\\\"levelGraphSpezialNodeList\\\" class=\\\"list-group\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"relationshipTypeFragment w3-round\\\" draggable=\\\"true\\\" (drag)=\\\"onDrag($event, fragmentType, 'RELATIONSHIPTYPEFRAGMENT')\\\" (dragover)=\\\"onDragOver($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3>RelationshipTypeFragment</h3>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t\\t<li class=\\\"nodeTypeFragment w3-round\\\" draggable=\\\"true\\\" (drag)=\\\"onDrag($event, fragmentType, 'NODETYPEFRAGMENT')\\\" (dragover)=\\\"onDragOver($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h3>NodeTypeFragment</h3>\\n\\t\\t\\t\\t\\t\\t</li>\\n\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Repository Nodes -->\\n\\t\\t\\t<div class=\\\"toolbox-group\\\">\\n\\t\\t\\t\\t<label>Repository Types:</label>\\n\\t\\t\\t\\t<div class=\\\"dropdown\\\">\\n\\t\\t\\t\\t\\t<label>Selected Repository:</label>\\n\\t\\t\\t\\t\\t<button id=\\\"selectRepository\\\" class=\\\" w3-theme-d2 btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">{{selectedRepository.name}}</button>\\n\\n\\t\\t\\t\\t\\t<ul class=\\\"dropdown-menu\\\" style=\\\"width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"repositories.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO RPOSITORY AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"repositoryListItem\\\" *ngFor=\\\"let repository of repositories\\\" (click)=\\\"onSelectRepository(repository)\\\">{{ repository.name }}</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"tool-item\\\">\\n\\t\\t\\t\\t\\t<button style=\\\"width: 100%\\\" class=\\\"w3-theme-d2 w3-border-brown btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#toolbox_nodes\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"toolbox_nodes\\\">\\n\\t\\t\\t\\t\\t\\tNodeTypes<i class=\\\"fa fa-caret-down w3-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"collapse toolbox\\\" id=\\\"toolbox_nodes\\\">\\n\\t\\t\\t\\t\\t\\t<ul id=\\\"nodeTypesList\\\" class=\\\" list-group\\\" style=\\\"max-height: 300px; overflow: auto; padding: 5px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"warning-item w3-pale-yellow\\\" *ngIf=\\\"repositories.length < 1\\\" disabled><i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO REPOSITORY AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.name === 'Select Repository' && repositories.length > 0\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO RPOSITORY SELECTED</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"warning-item, w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.name !== 'Select Repository'  && selectedRepository.nodeTypes.length < 1\\\" disabled><i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO NODETYPES AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"nodeType w3-round\\\" draggable=\\\"true\\\" *ngFor=\\\"let nodeType of selectedRepository.nodeTypes\\\" (drag)=\\\"onDrag($event, nodeType, 'NODETYPE')\\\" (dragover)=\\\"onDragOver($event)\\\"><img style=\\\"width: 32px; height: 32px\\\" src=\\\"{{nodeType.icon}}\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{nodeType.name}}</h3></li>\\n\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"tool-item\\\">\\n\\t\\t\\t\\t\\t<button style=\\\"width: 100%\\\" class=\\\"w3-theme-d2 w3-border-brown btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#toolbox_relations\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"toolbox_relations\\\">\\n\\t\\t\\t\\t\\t\\tRelationTypes<i class=\\\"fa fa-caret-down w3-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"collapse toolbox\\\" id=\\\"toolbox_relations\\\">\\n\\t\\t\\t\\t\\t\\t<ul id=\\\"relationTypesList\\\" class=\\\"list-group\\\" style=\\\"max-height: 300px; overflow: auto; padding: 5px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"warning-item, w3-pale-yellow\\\" *ngIf=\\\"repositories.length < 1\\\" disabled><i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO REPOSITORY AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.name === 'Select Repository' && repositories.length > 0\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO RPOSITORY SELECTED</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"warning-item, w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.name !== 'Select Repository' &&  selectedRepository.relationshipTypes.length < 1\\\" disabled><i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO RELATIONSHIPTYPES AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"relationshipType w3-round\\\" draggable=\\\"true\\\" *ngFor=\\\"let relationshipType of selectedRepository.relationshipTypes\\\" (drag)=\\\"onDrag($event, relationshipType, 'RELATIONSHIPTYPE')\\\" (dragover)=\\\"onDragOver($event)\\\"><img style=\\\"width: 32px; height: 32px\\\" src=\\\"{{relationshipType.icon}}\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{relationshipType.name}}</h3></li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Complet draw area of the level graph -->\\n\\t\\t<div id=\\\"draw_area\\\" class=\\\"w3-rest w3-theme-l5 scroll-panel\\\" (mousemove)=\\\"onDrawRelation($event)\\\">\\n\\n\\t\\t\\t<svg id=\\\"parent\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Definition of the gradients of the nodes and the arrow of an edge -->\\n\\t\\t\\t\\t\\n\\t\\t\\t    <defs>\\n   \\t\\t\\t\\t\\t<marker id=\\\"Triangle\\\" viewBox=\\\"0 0 10 10\\\" refX=\\\"80\\\" refY=\\\"5\\\" markerWidth=\\\"4\\\" markerHeight=\\\"4\\\" orient=\\\"auto\\\">\\n    \\t\\t\\t\\t  \\t<path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n   \\t\\t\\t\\t\\t</marker>\\n \\t\\t\\t\\t</defs>\\n \\t\\t\\t\\t\\t \\n\\t\\t\\t\\t<defs>\\n   \\t\\t\\t\\t\\t<marker id=\\\"TriangleDraw\\\" viewBox=\\\"0 0 10 10\\\" refX=\\\"8\\\" refY=\\\"5\\\" markerWidth=\\\"4\\\" markerHeight=\\\"4\\\" orient=\\\"auto\\\">\\n    \\t\\t\\t\\t  \\t<path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n   \\t\\t\\t\\t\\t</marker>\\n \\t\\t\\t\\t</defs>\\n \\t\\t\\t\\t\\t \\n\\t\\t\\t\\t<defs> \\n\\t\\t\\t\\t\\t<linearGradient id=\\\"lgrad\\\" x1=\\\"0%\\\" y1=\\\"51%\\\" x2=\\\"100%\\\" y2=\\\"49%\\\"> \\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"0%\\\" style=\\\"stop-color:rgb(0,51,51);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"50%\\\" style=\\\"stop-color:rgb(5,193,255);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"100%\\\" style=\\\"stop-color:rgb(0,51,51);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t</linearGradient> \\n\\t\\t\\t\\t</defs>\\n\\n\\t\\t\\t\\t<defs> \\n\\t\\t\\t\\t\\t<linearGradient id=\\\"lgradNodeType\\\" x1=\\\"49%\\\" y1=\\\"100%\\\" x2=\\\"51%\\\" y2=\\\"0%\\\"> \\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"0%\\\" style=\\\"stop-color:rgb(222,152,11);stop-opacity:1\\\" />\\n<stop offset=\\\"25%\\\" style=\\\"stop-color:rgb(232,159,12);stop-opacity:1\\\" />\\n<stop offset=\\\"50%\\\" style=\\\"stop-color:rgb(255,174,13);stop-opacity:1\\\" />\\n<stop offset=\\\"75%\\\" style=\\\"stop-color:rgb(237,162,12);stop-opacity:1\\\" />\\n<stop offset=\\\"100%\\\" style=\\\"stop-color:rgb(219,150,11);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t</linearGradient> \\n\\t\\t\\t\\t</defs>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<defs> \\n\\t\\t\\t\\t\\t<linearGradient id=\\\"lgradRelationshipType\\\" x1=\\\"50%\\\" y1=\\\"100%\\\" x2=\\\"50%\\\" y2=\\\"0%\\\"> \\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"0%\\\" style=\\\"stop-color:rgb(0,128,0);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"50%\\\" style=\\\"stop-color:rgb(27,252,15);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t\\t<stop offset=\\\"100%\\\" style=\\\"stop-color:rgb(0,128,0);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t</linearGradient> \\n\\t\\t\\t\\t</defs>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<g *ngFor=\\\"let level of currentLevelGraph.levels.reverse()\\\">\\n\\t\\t\\t\\t   \\t\\n\\t\\t\\t\\t   <g *ngIf=\\\"level.visible\\\">\\n\\t\\t\\t\\t\\t<svg (mousedown)=\\\"onDragOver($event)\\\" id=\\\"child\\\" [attr.id]=\\\"level.depth\\\" [attr.x]=\\\"50\\\" [attr.y]=\\\"level.y\\\" [attr.height]=\\\"level.height\\\" (dragover)=\\\"onDragOver($event)\\\" (drop)=\\\"onDrop($event, level)\\\"> \\n\\t\\t\\t\\t   \\t\\t\\t<rect class=\\\"level-panel\\\" [attr.x]=\\\"0\\\" [attr.y]=\\\"0\\\" [attr.height]=\\\"level.height\\\" (dragover)=\\\"onDragOver($event)\\\" (drop)=\\\"onDrop($event, level)\\\"></rect>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Polyline of the refineTo LevelGraphRelations -->\\n\\t\\t\\t\\t<polyline *ngIf=\\\"drawRelation && currentLevelGraphRelation.levelGraphRelationType === 'REFINE_TO'\\\" [attr.points]=\\\"currentLevelGraphRelation.path.pathDataString\\\" style=\\\"fill:none;stroke:gray;stroke-width:6\\\" marker-end=\\\"url(#TriangleDraw)\\\" />\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<g [contextmenu]=\\\"[levelGraphRelationContextMenu, {levelGraphRelation: levelGraphRelation}]\\\" *ngFor=\\\"let levelGraphRelation  of currentLevelGraph.levelGraphRelations\\\">\\n\\t\\t\\t\\t\\t<polyline *ngIf=\\\"(levelGraphRelationTypes[1].checked == true) && (levelGraphRelation.levelGraphRelationType === 'REFINE_TO') && showRefineToRelation(levelGraphRelation)\\\" [attr.points]=\\\"levelGraphRelation.path.pathDataString\\\" style=\\\"fill:none;stroke:gray;stroke-width:6\\\" marker-end=\\\"url(#Triangle)\\\" />\\n\\t\\t\\t    \\t<text *ngIf=\\\"(levelGraphRelationTypes[1].checked == true) && (levelGraphRelation.levelGraphRelationType === 'REFINE_TO') && showRefineToRelation(levelGraphRelation) && (levelGraphRelation.entryPoint)\\\" [attr.x]=\\\"(levelGraphRelation.path.points[0].x + levelGraphRelation.path.points[1].x)/ 2\\\" [attr.y]=\\\"(levelGraphRelation.path.points[0].y + levelGraphRelation.path.points[1].y)/ 2 - 10\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">Entry</text>\\t\\t\\n\\t\\t\\t\\t\\t<text *ngIf=\\\"(levelGraphRelationTypes[1].checked == true) && (levelGraphRelation.levelGraphRelationType === 'REFINE_TO') && showRefineToRelation(levelGraphRelation) && (levelGraphRelation.exitPoint)\\\" [attr.x]=\\\"(levelGraphRelation.path.points[0].x + levelGraphRelation.path.points[1].x)/ 2\\\" [attr.y]=\\\"(levelGraphRelation.path.points[0].y + levelGraphRelation.path.points[1].y)/ 2 + 30\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">Exit</text>\\t\\n\\t\\t\\t    </g>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Level Draw Area -->\\t\\t\\t\\t\\n\\t\\t\\t\\t<g *ngFor=\\\"let level of currentLevelGraph.levels.reverse()\\\">\\n\\t\\t\\t\\t   \\t\\n\\t\\t\\t\\t   <g *ngIf=\\\"level.visible\\\">\\n\\t\\t\\t\\t   \\t\\t\\n\\t\\t\\t\\t   \\t\\t<!-- Definition of the labels for the level draw areas-->\\n\\t\\t\\t\\t   \\t\\t<rect [attr.x]=\\\"0\\\" [attr.y]=\\\"level.y\\\" [attr.width]=\\\"40\\\" [attr.height]=\\\"level.height\\\" fill=\\\"url(#lgrad)\\\"></rect>\\n                   \\t\\t<text [attr.x]=\\\"20\\\" [attr.y]=\\\"level.y + level.height/2\\\" writing-mode=\\\"tb\\\" font-family=\\\"Verdana\\\" font-size=\\\"35\\\" fill=\\\"white\\\" text-anchor=\\\"middle\\\">Level {{level.depth}}</text> \\n\\t\\t\\t\\t   \\t\\t\\n\\t\\t\\t\\t   \\t\\t<!-- Definition of the move bar to change the height of the level draw areas-->\\n\\t\\t\\t\\t   \\t\\t<rect class=\\\"level-move-bar\\\" [attr.x]=\\\"0\\\" [attr.y]=\\\"level.y + level.height + 10\\\" [attr.height]=\\\"20\\\" (mousedown)=\\\"startChangeLevelHeight($event)\\\" (mousemove)=\\\"onChangeLevelHeight($event, level)\\\" (mouseup)=\\\"stopChangeLevelHeight($event)\\\"></rect>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<!-- Definition of the level draw areas-->    \\t\\t\\n\\t\\t\\t       \\t\\t<svg id=\\\"child\\\" [attr.id]=\\\"level.depth\\\" [attr.x]=\\\"50\\\" [attr.y]=\\\"level.y\\\" [attr.height]=\\\"level.height\\\"> \\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Definition of the connectedToRelation-->\\n\\t\\t\\t\\t\\t \\t\\t<g [contextmenu]=\\\"[levelGraphRelationContextMenu, {levelGraphRelation: levelGraphRelation}]\\\" *ngFor=\\\"let levelGraphRelation  of currentLevelGraph.levelGraphRelations\\\">\\n\\t\\t\\t\\t\\t   \\t\\t\\t<polyline *ngIf=\\\"(levelGraphRelationTypes[0].checked == true) && (level.depth === levelGraphRelation.sourceLevelDepth) && (levelGraphRelation.levelGraphRelationType === 'CONNECT_OVER_TO')\\\" [attr.points]=\\\"levelGraphRelation.path.pathDataString\\\" style=\\\"fill:none;stroke:green;stroke-width:6\\\" marker-end=\\\"url(#Triangle)\\\" />\\n\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<polyline *ngIf=\\\"drawRelation && currentLevelGraphRelation.sourceLevelDepth === level.depth  && currentLevelGraphRelation.levelGraphRelationType === 'CONNECT_OVER_TO'\\\" [attr.points]=\\\"currentLevelGraphRelation.path.pathDataString\\\" style=\\\"fill:none;stroke:green;stroke-width:6\\\" marker-end=\\\"url(#TriangleDraw)\\\" />\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<!-- Definition of the RELATIONSHIPTYPEFRAGMENT-->\\n\\t\\t\\t\\t\\t\\t\\t<g [contextmenu]=\\\"[levelGraphNodeContextMenu, {levelGraphNode: levelGraphNode}]\\\" *ngFor=\\\"let levelGraphNode  of currentLevelGraph.levelGraphNodes\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<g *ngIf=\\\"((levelGraphNode.levelGraphNodeType === 'RELATIONSHIPTYPEFRAGMENT') && (levelGraphNode.levelId === level.id))\\\" (mousedown)=\\\"startMoveNode($event, levelGraphNode); startDrawRelation($event, level, levelGraphNode)\\\" (mousemove)=\\\"onMoveNode($event, level)\\\" (mouseup)=\\\"stopMoveNode($event); stopDrawRelation($event, levelGraphNode, level);\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <rect rx=\\\"80\\\" ry=\\\"30\\\" [attr.id]=\\\"levelGraphNode.id\\\" [attr.x]=\\\"levelGraphNode.x\\\" [attr.y]=\\\"levelGraphNode.y\\\" [attr.width]=\\\"levelGraphNode.width\\\" [attr.height]=\\\"levelGraphNode.height\\\" fill=\\\"#C5E0B3\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\n                                  \\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/4 + 15\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">{{levelGraphNode.name}}</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/2 + 10\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(ID:{{levelGraphNode.id}})</text>\\t\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/1 - 10\\\" font-size=\\\"30\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">+</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t\\t\\t\\t    <image [attr.xlink:href]=\\\"levelGraphNode.icon\\\" [attr.x]=\\\"levelGraphNode.x + levelGraphNode.height/100 * 10\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/100 * 10\\\" [attr.width]=\\\"levelGraphNode.width/100 * 20\\\" [attr.height]=\\\"levelGraphNode.height/100 * 56\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</g> \\t\\n\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<!-- Definition of the NODETYPEFRAGMENT-->\\n\\t\\t\\t\\t\\t\\t\\t<g [contextmenu]=\\\"[levelGraphNodeContextMenu, {levelGraphNode: levelGraphNode}]\\\" *ngFor=\\\"let levelGraphNode  of currentLevelGraph.levelGraphNodes\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<g *ngIf=\\\"((levelGraphNode.levelGraphNodeType === 'NODETYPEFRAGMENT') && (levelGraphNode.levelId === level.id))\\\" (mousedown)=\\\"startMoveNode($event, levelGraphNode); startDrawRelation($event, level, levelGraphNode)\\\" (mousemove)=\\\"onMoveNode($event, level)\\\" (mouseup)=\\\"stopMoveNode($event); stopDrawRelation($event, levelGraphNode, level);\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <rect rx=\\\"80\\\" ry=\\\"30\\\" [attr.id]=\\\"levelGraphNode.id\\\" [attr.x]=\\\"levelGraphNode.x\\\" [attr.y]=\\\"levelGraphNode.y\\\" [attr.width]=\\\"levelGraphNode.width\\\" [attr.height]=\\\"levelGraphNode.height\\\" fill=\\\"#F7CBAC\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/4 + 15\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">{{levelGraphNode.name}}</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    <text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/2 + 15\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(ID:{{levelGraphNode.id}})</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t\\t\\t\\t    <text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/1 - 10\\\" font-size=\\\"30\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">+</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t\\t\\t\\t    <image [attr.xlink:href]=\\\"levelGraphNode.icon\\\" [attr.x]=\\\"levelGraphNode.x + levelGraphNode.height/100 * 10\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/100 * 10\\\" [attr.width]=\\\"levelGraphNode.width/100 * 20\\\" [attr.height]=\\\"levelGraphNode.height/100 * 56\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</g> \\t\\n\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<!-- Definition of the NODETYPE-->\\n\\t\\t\\t\\t \\t\\t\\t<g [contextmenu]=\\\"[levelGraphNodeContextMenu, {levelGraphNode: levelGraphNode}]\\\" *ngFor=\\\"let levelGraphNode  of currentLevelGraph.levelGraphNodes\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<g *ngIf=\\\"((levelGraphNode.levelGraphNodeType === 'NODETYPE') && (levelGraphNode.levelId === level.id))\\\" (mousedown)=\\\"startMoveNode($event, levelGraphNode); startDrawRelation($event, level, levelGraphNode)\\\" (mousemove)=\\\"onMoveNode($event, level)\\\" (mouseup)=\\\"stopMoveNode($event); stopDrawRelation($event, levelGraphNode, level);\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<rect rx=\\\"20\\\" ry=\\\"20\\\" [attr.id]=\\\"levelGraphNode.id\\\" [attr.x]=\\\"levelGraphNode.x\\\" [attr.y]=\\\"levelGraphNode.y\\\" [attr.width]=\\\"levelGraphNode.width\\\" [attr.height]=\\\"levelGraphNode.height\\\" fill=\\\"url(#lgradNodeType)\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/4 + 15\\\" [attr.height]=\\\"levelGraphNode.height\\\" [attr.width]=\\\"levelGraphNode.width\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">{{levelGraphNode.name}}</text> \\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/2 + 10\\\" [attr.height]=\\\"levelGraphNode.height\\\" [attr.width]=\\\"levelGraphNode.width\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(ID:{{levelGraphNode.id}})</text> \\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    <image [attr.xlink:href]=\\\"levelGraphNode.icon\\\" [attr.x]=\\\"levelGraphNode.x + levelGraphNode.height/100 * 10\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/100 * 10\\\" [attr.width]=\\\"levelGraphNode.width/100 * 20\\\" [attr.height]=\\\"levelGraphNode.height/100 * 56\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<rect rx=\\\"0\\\" ry=\\\"0\\\" [attr.x]=\\\"levelGraphNode.x\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/3 * 2\\\" [attr.width]=\\\"levelGraphNode.width\\\" [attr.height]=\\\"levelGraphNode.height/3\\\" fill=\\\"white\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\n\\t\\t\\t\\t\\t                <text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/4 * 3 + 20\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(NodeType ID:{{levelGraphNode.levelGraphNodeTypeId}})</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<!-- Definition of the RELATIONSHIPTYPE-->\\n\\t\\t\\t\\t\\t\\t\\t<g draggable=\\\"false\\\" [contextmenu]=\\\"[levelGraphNodeContextMenu, {levelGraphNode: levelGraphNode}]\\\" *ngFor=\\\"let levelGraphNode  of currentLevelGraph.levelGraphNodes\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<g draggable=\\\"false\\\" *ngIf=\\\"((levelGraphNode.levelGraphNodeType === 'RELATIONSHIPTYPE') && (levelGraphNode.levelId === level.id))\\\" (mousedown)=\\\"startMoveNode($event, levelGraphNode); startDrawRelation($event, level, levelGraphNode)\\\" (mousemove)=\\\"onMoveNode($event, level)\\\" (mouseup)=\\\"stopMoveNode($event); stopDrawRelation($event, levelGraphNode, level);\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<rect rx=\\\"20\\\" ry=\\\"20\\\" [attr.id]=\\\"levelGraphNode.id\\\" [attr.x]=\\\"levelGraphNode.x\\\" [attr.y]=\\\"levelGraphNode.y\\\" [attr.width]=\\\"levelGraphNode.width\\\" [attr.height]=\\\"levelGraphNode.height\\\" fill=\\\"url(#lgradRelationshipType)\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/4 + 15\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">{{levelGraphNode.name}}</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    <text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2 + levelGraphNode.height/100 * 35\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/2 + 10\\\" font-size=\\\"24\\\" font-family=\\\"Verdana\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(ID:{{levelGraphNode.id}})</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t\\t\\t\\t    <image [attr.xlink:href]=\\\"levelGraphNode.icon\\\" [attr.x]=\\\"levelGraphNode.x + levelGraphNode.height/100 * 10\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/100 * 10\\\" [attr.width]=\\\"levelGraphNode.width/100 * 20\\\" [attr.height]=\\\"levelGraphNode.height/100 * 56\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<rect rx=\\\"0\\\" ry=\\\"0\\\" [attr.x]=\\\"levelGraphNode.x\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/3 * 2\\\" [attr.width]=\\\"levelGraphNode.width\\\" [attr.height]=\\\"levelGraphNode.height/3\\\" fill=\\\"white\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\n\\t\\t\\t\\t\\t                <text [attr.x]=\\\"levelGraphNode.x + levelGraphNode.width/2\\\" [attr.y]=\\\"levelGraphNode.y + levelGraphNode.height/4 * 3 + 20\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(RelationshipType ID:{{levelGraphNode.levelGraphNodeTypeId}})</text>\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t</g>\\t\\n           </svg>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<contextmenu #levelGraphNodeContextMenu>\\n<div class=\\\"dropdown open\\\">\\n\\t<ul class=\\\"dropdown-menu\\\">\\n\\t\\t<!-- \\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createExpectedProperty\\\" (click)=\\\"setEntity(levelGraphNodeContextMenu.get('levelGraphNode'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Add ExpectedProperty</a></li>\\n -->\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createProvidedProperty\\\" (click)=\\\"setEntity(levelGraphNodeContextMenu.get('levelGraphNode'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Add ProvidedProperty</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editLevelGraphNodeName\\\" (click)=\\\"setLevelGraphNode(levelGraphNodeContextMenu.get('levelGraphNode'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Edit Name</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" routerLink=\\\"/dashboard/levelgraphnodedetails\\\" [queryParams]=\\\"{id: levelGraphNodeContextMenu.get('levelGraphNode').id}\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>View Details</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" (click)=\\\"deleteLevelGraphNode(levelGraphNodeContextMenu.get('levelGraphNode'))\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</a></li>\\n\\t</ul>\\n</div>\\n</contextmenu>\\n\\n<contextmenu #levelGraphRelationContextMenu>\\n<div class=\\\"dropdown open\\\">\\n\\t<ul class=\\\"dropdown-menu\\\">\\n\\t\\t<li><a *ngIf=\\\"levelGraphRelationContextMenu.get('levelGraphRelation').levelGraphRelationType === 'REFINE_TO' && isEntryExitRelation(levelGraphRelationContextMenu.get('levelGraphRelation'))\\\" class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#setExitEntryModal\\\" (click)=\\\"setLevelGraphRelation(levelGraphRelationContextMenu.get('levelGraphRelation'))\\\"><i class=\\\"fa fa-eye\\\"\\n\\t\\t\\t\\taria-hidden=\\\"true\\\"></i>Set Entry/Exit Point</a></li>\\n\\t\\t<!-- <li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createExpectedProperty\\\" (click)=\\\"setEntity(levelGraphRelationContextMenu.get('levelGraphRelation'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Add ExpectedProperty</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createProvidedProperty\\\" (click)=\\\"setEntity(levelGraphRelationContextMenu.get('levelGraphRelation'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Add ProvidedProperty</a></li>\\n\\t\\t -->\\n\\t\\t<li><a class=\\\"dropdown-item\\\" routerLink=\\\"/dashboard/levelgraphrelationdetails\\\" [queryParams]=\\\"{id: levelGraphRelationContextMenu.get('levelGraphRelation').id}\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>View Details</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" (click)=\\\"deleteLevelGraphRelation(levelGraphRelationContextMenu.get('levelGraphRelation'))\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</a></li>\\n\\t</ul>\\n</div>\\n</contextmenu>\\n\\n<!-- Modal for Create ProvidedProperty -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"createProvidedProperty\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create ProvidedProperty</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createdProvidedProperty.name\\\" #nameProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{createdProvidedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameProperty.errors && (nameProperty.dirty || nameProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameProperty.errors.required\\\">Name is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty=\\\"ngModel\\\" name=\\\"value\\\" [(ngModel)]=\\\"createdProvidedProperty.value\\\" #valueProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{createdProvidedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"valueProperty.errors && (valueProperty.dirty || valueProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!valueProperty.errors.required\\\">Value is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addProvidedProperty()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Modal for ExpectedProperty -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"createExpectedProperty\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create ExpectedProperty</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createdExpectedProperty.name\\\" #nameProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{createdExpectedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameProperty.errors && (nameProperty.dirty || nameProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameProperty.errors.required\\\">Name is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty=\\\"ngModel\\\" name=\\\"value\\\" [(ngModel)]=\\\"createdExpectedProperty.value\\\" #valueProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{createdExpectedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"valueProperty.errors && (valueProperty.dirty || valueProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!valueProperty.errors.required\\\">Value is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addExpectedProperty()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Modal for Exit Entry -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"setExitEntryModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Set Entry and Exit Point</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>EntryPoint: </label> <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"entryPoint\\\" value=\\\"true\\\" [(ngModel)]=\\\"entryPoint\\\" [checked]=\\\"entryPoint\\\">Yes</label> <label class=\\\"radio-inline\\\"><input [(ngModel)]=\\\"entryPoint\\\" [checked]=\\\"!entryPoint\\\" type=\\\"radio\\\" name=\\\"entryPoint\\\" value=\\\"false\\\">No</label>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label>ExitPoint: </label> <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"exitPoint\\\" name=\\\"exitPoint\\\" value=\\\"true\\\" [checked]=\\\"exitPoint\\\">Yes</label> <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" [(ngModel)]=\\\"exitPoint\\\" name=\\\"exitPoint\\\" value=\\\"false\\\" [checked]=\\\"!exitPoint\\\">No</label>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setEntryExitProperty()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Modal for Edit LevelGraphName-->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editLevelGraphNodeName\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Level Graph Node Name</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editName type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value=\\\"{{currentLevelGraphNode.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editLevelGraphNodeName(editName.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/levelgraphtool/levelgraphmodeller/levelgraphmodeller.component.html\n// module id = 749\n// module chunks = 0","import { Logger } from '../../../../logger/logger';\nimport { NodeType } from '../../datamodels/types/nodetype';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - NodeTypeService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for Node Types\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class NodeTypeService {\n\n  // URL of the REST Interface End-Point\n  private nodetypeUrl = '/api/nodetypes';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getNodeTypes - Send GET all NodeTypes REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getNodeTypes(): Observable<NodeType[]> {\n    Logger.info('[REQUEST - NODETYPE] Send GET Node Types Request', NodeTypeService.name);\n    return this.http.get(this.nodetypeUrl).map(this.extractNodeTypes).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getNodeType - Send GET NodeType REQUEST\n   *\n   * @param - id: number - ID of the NodeType which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getNodeType(id: number): Observable<NodeType> {\n    Logger.info('[REQUEST - NODETYPE] Send GET Node Type Request with ID:' + id, NodeTypeService.name);\n    return this.http.get(this.nodetypeUrl + '/' + id).map(this.extractNodeType).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createNodeType - Send POST NodeType REQUEST\n   *\n   * @param - nodeType: NodeType - NodeType which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createNodeType(nodeType: NodeType): Observable<NodeType> {\n    Logger.info('[REQUEST - NODETYPE] Send POST Node Type Request', NodeTypeService.name);\n    Logger.data('[REQUEST - NODETYPE]' + JSON.stringify(nodeType), NodeTypeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.nodetypeUrl, nodeType, options).map(this.extractNodeType).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateNodeType - Send PUT NodeType REQUEST\n   *\n   * @param - nodeType: NodeType - NodeType which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateNodeType(nodeType: NodeType): Observable<NodeType> {\n    Logger.info('[REQUEST - NODETYPE] Send PUT NodeType Request', NodeTypeService.name);\n    Logger.data('[REQUEST - NODETYPE] ' + JSON.stringify(nodeType), NodeTypeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.nodetypeUrl + '/' + nodeType.id, nodeType, options).map(this.extractNodeType).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - Send DELETE NodeType REQUEST\n   *\n   * @param - id: number - ID of the NodeType which should be deleted from the database\n   *\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteNodeType(id: number): Observable<NodeType> {\n    Logger.info('[REQUEST - NODETYPE] Send DELETE NodeType Request with ID: ' + id, NodeTypeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.nodetypeUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractNodeTypes - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractNodeTypes(res: Response) {\n    let body = res.json();\n    let nodeTypeList: NodeType[] = [];\n    Logger.info('[RESPONSE - NODETYPE]: Extract Data of Response Body', NodeTypeService.name);\n    Logger.data('[RESPONSE - NODETYPE]: ' + JSON.stringify(body), NodeTypeService.name);\n    for (let nodeType of body) {\n      let tempNodeType: NodeType = new NodeType();\n      tempNodeType = nodeType;\n      nodeTypeList.push(tempNodeType);\n    }\n    return nodeTypeList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractNodeTypes - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractNodeType(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - NODETYPE]: Extract Data of Response Body', NodeTypeService.name);\n    Logger.data('[RESPONSE - NODETYPE]: ' + JSON.stringify(body), NodeTypeService.name);\n    let nodeType: NodeType = new NodeType();\n    nodeType = body;\n    return nodeType || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/types/nodetype.service.ts","module.exports = \"<!-- LevelGraphTool Component -->\\r\\n<div class=\\\"dashboard_area\\\">\\r\\n\\t\\r\\n\\t<!-- Header -->\\r\\n\\t<div class=\\\"w3-theme-d4 w3-card-4 heading\\\">\\r\\n\\t\\t<h2>Level Graph Tool</h2>\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t<div class=\\\"rounded w3-theme-d2 panel\\\">\\r\\n\\t\\t<!-- Selector for LevelGraphComponent -->\\r\\n\\t\\t<app-levelgraph [levelGraphs]=\\\"levelGraphs\\\"></app-levelgraph>\\r\\n\\t</div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/levelgraphtool/levelgraphtool.component.html\n// module id = 750\n// module chunks = 0","module.exports = \"<!-- TopologyTemplate Modeller -->\\n<div id=\\\"level_graph_tool\\\" class=\\\"container-fluid w3-theme-l3\\\">\\n\\n\\t<!-- Header Row-->\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<div class=\\\"col-sm-12 w3-theme-d3 w3-card-4 heading\\\">\\n\\n\\t\\t\\t<div class=\\\"col-sm-12\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t<h3>\\n\\t\\t\\t\\t\\t\\tTopology Template Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentTopologyTemplate.name}}\\\" />\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-sm-5\\\">\\n\\t\\t\\t\\t\\t<h3>\\n\\t\\t\\t\\t\\t\\tTopology Template ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentTopologyTemplate.id}}\\\" />\\n\\t\\t\\t\\t\\t</h3>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"w3-right col-sm-2 row\\\">\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"this.levelGraphs.length < 1\\\" class=\\\"btn btn-primary w3-green\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#refinementModal\\\" (click)=\\\"setUsedLevelGraphs()\\\">Start Refinement</button>\\n\\t\\t\\t\\t\\t<label *ngIf=\\\"this.levelGraphs.length < 1\\\" class=\\\"w3-pale-yellow\\\"> <i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>No LevelGraph for Refinement Available\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t<!-- Refinement -->\\n\\t\\t\\t<div class=\\\"col-sm-12 w3-center control-group\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"currentTopologyTemplate.parentTopologyTemplateId === undefined || currentTopologyTemplate.parentTopologyTemplateId === null\\\" class=\\\"btn w3-green\\\" (click)=\\\"loadAbstractTopologyTemplates()\\\" style=\\\"color: black\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-up icon\\\" aria-hidden=\\\"true\\\">Abstract Topology</i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"currentTopologyTemplates.length < 1 || currentTopologyTemplates.indexOf(currentTopologyTemplate) - 1 < 0\\\" class=\\\"btn btn-default  btn-circle w3-green\\\" type=\\\"button\\\" (click)=\\\"prevTopology()\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-left icon\\\" aria-hidden=\\\"true\\\">Prev Topology</i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<input id=\\\"abstractionLevel\\\" class=\\\" w3-center\\\" style=\\\"color: black\\\" disabled value=\\\"Abstraction Level: {{currentTopologyTemplate.abstractionLevel}}\\\" />\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"currentTopologyTemplates.length <= 1 || currentTopologyTemplates.indexOf(currentTopologyTemplate) + 1 >= currentTopologyTemplates.length\\\" class=\\\"btn btn-default w3-green\\\" type=\\\"button\\\" (click)=\\\"nextTopology()\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"icon fa fa-arrow-right\\\" aria-hidden=\\\"true\\\">Next Topology</i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"currentTopologyTemplate.childTopologyTemplates.length < 1\\\" class=\\\"btn w3-green\\\" (click)=\\\"loadSpecificTopologyTemplates()\\\" style=\\\"color: black\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-arrow-down icon\\\" aria-hidden=\\\"true\\\">Specific Topology</i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2\\\">\\n\\t\\t\\t\\t\\t<button id=\\\"saveBtn\\\" class=\\\"btn btn-primary w3-right w3-green btn-10\\\" type=\\\"button\\\" (click)=\\\"updateTopologyTemplate()\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"icon fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>Save\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row\\\" style=\\\"height: 100%\\\">\\n\\n\\t\\t<!-- Tool Box -->\\n\\t\\t<div id=\\\"toolbox_area\\\" class=\\\"w3-card-4 w3-col w3-theme\\\">\\n\\n\\t\\t\\t<h5 class=\\\"w3-center w3-margin\\\">\\n\\t\\t\\t\\t<b>Tool Box</b>\\n\\t\\t\\t</h5>\\n\\n\\t\\t\\t<!-- Repository Tool Box -->\\n\\t\\t\\t<div class=\\\"toolbox-group\\\">\\n\\t\\t\\t\\t<div class=\\\"w3-pale-yellow\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">If you use Node Types from one or more selected repositories, you may model Level Graph Topology Templates which are not Level Graph Compliant</i>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<label>Selected Repository:</label>\\n\\t\\t\\t\\t<div class=\\\"dropdown\\\">\\n\\t\\t\\t\\t\\t<button id=\\\"selectRepository\\\" class=\\\" w3-theme-d2 btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">{{selectedRepository.name}}</button>\\n\\n\\t\\t\\t\\t\\t<ul class=\\\"list dropdown-menu\\\" style=\\\"width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"repositories.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO REPOSITORY AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"listItem\\\" *ngFor=\\\"let repository of repositories\\\" (click)=\\\"onSelectRepository(repository)\\\">{{ repository.name }}</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button style=\\\"width: 100%\\\" class=\\\"w3-theme-d2 w3-border-brown btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#toolbox_nodes\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"toolbox_nodes\\\">\\n\\t\\t\\t\\t\\tNodeTypes<i class=\\\"fa fa-caret-down w3-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t<div class=\\\"collapse toolbox\\\" id=\\\"toolbox_nodes\\\">\\n\\t\\t\\t\\t\\t<ul class=\\\"list list-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.name === 'Select Repository' && repositories.length > 0\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO RPOSITORY SELECTED</li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"repositories.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO REPOSITORY AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.nodeTypes.length < 1 && selectedRepository.name !== 'Select Repository'\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO NODETYPES AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"nodeTemplate w3-round\\\" draggable=\\\"true\\\" *ngFor=\\\"let nodeType of selectedRepository.nodeTypes\\\" (drag)=\\\" onDragNodeType($event, nodeType)\\\" (dragover)=\\\"onDragOver($event)\\\"><img style=\\\"width: 32px; height: 32px\\\" src=\\\"{{nodeType.icon}}\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<h3>{{nodeType.name}}</h3></li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Level Graph Tool Box -->\\n\\t\\t\\t<div class=\\\"toolbox-group\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"dropdown\\\">\\n\\t\\t\\t\\t\\t<button id=\\\"selcetLevelGraph\\\" class=\\\" w3-theme-d2 btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">{{selectedLevelGraph.name}}</button>\\n\\n\\t\\t\\t\\t\\t<ul class=\\\"list dropdown-menu\\\" style=\\\"width: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"levelGraphs.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO LEVEL GRAPH AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t<li class=\\\"listItem\\\" *ngFor=\\\"let levelGraph of levelGraphs\\\" (click)=\\\"onSelectLevelGraph(levelGraph)\\\">{{ levelGraph.name }}</li>\\n\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"tool-item\\\">\\n\\n\\t\\t\\t\\t\\t<button style=\\\"width: 100%\\\" class=\\\"w3-theme-d2 w3-border-brown btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#levelGraph_compliantNodeTypes\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"levelGraph_nodeTypes\\\">\\n\\t\\t\\t\\t\\t\\tLevel {{currentTopologyTemplate.abstractionLevel}} NodeTypes<i class=\\\"fa fa-caret-down w3-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"collapse toolbox\\\" id=\\\"levelGraph_compliantNodeTypes\\\">\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list list-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select Level Graph' && levelGraphs.length > 0\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO LEVEL GRAPH SELECTED</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select Level Graph' && levelGraphs.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO LEVEL GRAPH AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name !== 'Select Level Graph' && selectedLevelGraphNodeNodeTypeCurrentAbstractionLevel.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO NODETYPES AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"nodeTemplate w3-round\\\" draggable=\\\"true\\\" *ngFor=\\\"let levelGraphNode of selectedLevelGraphNodeNodeTypeCurrentAbstractionLevel\\\" (drag)=\\\"onDragLevelGraphNode($event, levelGraphNode)\\\" (dragover)=\\\"onDragOver($event)\\\"><img style=\\\"width: 32px; height: 32px\\\" src=\\\"{{levelGraphNode.icon}}\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{levelGraphNode.name}}</h3></li>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"w3-pale-yellow\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">If you use Node Types from one/multiple selected LevelGraphs, you can model Topology Templates which are Single Level Single/Multiple Graph - Compliant</i>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"tool-item\\\">\\n\\t\\t\\t\\t\\t<button style=\\\"width: 100%\\\" class=\\\"w3-theme-d2 w3-border-brown btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#levelGraph_nodeTypes\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"levelGraph_nodeTypes\\\">\\n\\t\\t\\t\\t\\t\\tAll NodeTypes<i class=\\\"fa fa-caret-down w3-right\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"collapse toolbox\\\" id=\\\"levelGraph_nodeTypes\\\">\\n\\t\\t\\t\\t\\t\\t<ul class=\\\"list list-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select Level Graph' && levelGraphs.length > 0\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO LEVEL GRAPH SELECTED</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select Level Graph' && levelGraphs.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO LEVEL GRAPH AVAILABLE</li>\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name !== 'Select Level Graph' && selectedLevelGraphNodeNodeType.length < 1\\\" disabled><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\"></i>NO NODETYPES AVAILABLE</li>\\n\\n\\t\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let levelGraphNode of selectedLevelGraphNodeNodeType\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<li class=\\\"nodeTemplate w3-round\\\" draggable=\\\"true\\\" *ngIf=\\\"(levelGraphNode.levelGraphNodeType === 'NODETYPE')\\\" (drag)=\\\"onDragLevelGraphNode($event, levelGraphNode)\\\" (dragover)=\\\"onDragOver($event)\\\"><img style=\\\"width: 32px; height: 32px\\\" src=\\\"{{levelGraphNode.icon}}\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t<h3>{{levelGraphNode.name}}</h3></li>\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t</ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"w3-pale-yellow\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">If you use Node Types from one/multiple selected Level Graphs, you may model Topology Templates which are Single/Multiple-Graph Compliant</i>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Draw area container -->\\n\\t\\t<div id=\\\"draw_area\\\" class=\\\"w3-rest w3-theme-l5 scroll-panel\\\" (mousemove)=\\\"onDrawLevelGraphRelation($event)\\\">\\n\\n\\t\\t\\t<!-- svg container for display svg elements like rect, line, polyline etc. -->\\n\\t\\t\\t<svg (dragover)=\\\"onDragOver($event)\\\" (drop)=\\\"onDrop($event)\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Definition of gradients of the node Template and of the arrows of the polyline -->\\n\\t\\t\\t\\t<defs>\\n   \\t\\t\\t\\t\\t<marker id=\\\"TriangleEnd\\\" viewBox=\\\"0 0 10 10\\\" refX=\\\"80\\\" refY=\\\"5\\\" markerWidth=\\\"4\\\" markerHeight=\\\"4\\\" orient=\\\"auto\\\">\\n    \\t\\t\\t\\t  \\t<path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n   \\t\\t\\t\\t\\t</marker>\\n \\t\\t\\t\\t</defs> \\n \\t\\t\\t\\t\\t \\n \\t\\t\\t\\t<defs>\\n   \\t\\t\\t\\t\\t<marker id=\\\"TriangleEndDraw\\\" viewBox=\\\"0 0 10 10\\\" refX=\\\"5\\\" refY=\\\"5\\\" markerWidth=\\\"4\\\" markerHeight=\\\"4\\\" orient=\\\"auto\\\">\\n    \\t\\t\\t\\t  \\t<path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n   \\t\\t\\t\\t\\t</marker>\\n \\t\\t\\t\\t</defs>\\n \\t\\t\\t\\t\\n \\t\\t\\t\\t<defs> \\n\\t\\t\\t\\t\\t<linearGradient id=\\\"nodeTemplate\\\" x1=\\\"49%\\\" y1=\\\"100%\\\" x2=\\\"51%\\\" y2=\\\"0%\\\"> \\n\\t\\t\\t\\t\\t<stop offset=\\\"0%\\\" style=\\\"stop-color:rgb(143,193,242);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t<stop offset=\\\"50%\\\" style=\\\"stop-color:rgb(123,166,209);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t<stop offset=\\\"100%\\\" style=\\\"stop-color:rgb(143,193,242);stop-opacity:1\\\" />\\n\\t\\t\\t\\t\\t</linearGradient> \\n\\t\\t\\t\\t</defs>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Draw Line witch is enabled if you draw a relation to display the currentDrawRelation -->\\n\\t\\t\\t\\t<polyline *ngIf=\\\"drawRelation || drawCurrentLevelGraphRelation || drawCurrentLevelGraphCompliantRelation\\\" [attr.points]=\\\"currentRelationshipTemplate.path.pathDataString\\\" style=\\\"fill:none;stroke:black;stroke-width:6\\\" marker-end=\\\"url(#TriangleEndDraw)\\\">\\n\\t\\t\\t\\t\\t       <marker href=\\\"#TriangleEnd\\\" position=\\\"175px\\\" />\\n\\t\\t\\t\\t</polyline>\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Relationship Template -->\\n<!-- \\t\\t\\t\\t[contextmenu]=\\\"[relationshipTemplateContextMenu, {relationshipTemplate: relationshipTemplate}]\\\"\\n -->\\t\\t\\t \\t<g  *ngFor=\\\"let relationshipTemplate of currentTopologyTemplate.relationshipTemplates\\\">\\n\\t\\t\\t\\t\\t    <polyline [attr.points]=\\\"relationshipTemplate.path.pathDataString\\\" style=\\\"fill:none;stroke:black;stroke-width:6\\\" marker-end=\\\"url(#TriangleEnd)\\\">\\n\\t\\t\\t\\t\\t    \\n\\t\\t\\t\\t\\t    </polyline>\\n\\t\\t\\t\\t\\t    \\t<text [attr.x]=\\\"(relationshipTemplate.path.points[0].x + relationshipTemplate.path.points[1].x)/ 2\\\" [attr.y]=\\\"(relationshipTemplate.path.points[0].y + relationshipTemplate.path.points[1].y)/ 2 - 10\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">{{relationshipTemplate.name}} (ID:{{relationshipTemplate.id}})</text>\\t\\t\\n\\t\\t\\t\\t\\t        <text [attr.x]=\\\"(relationshipTemplate.path.points[0].x + relationshipTemplate.path.points[1].x)/ 2\\\" [attr.y]=\\\"(relationshipTemplate.path.points[0].y + relationshipTemplate.path.points[1].y)/ 2 + 30\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(RelationshipType ID:{{relationshipTemplate.relationshipTypeId}})</text>\\t\\n\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<!-- Node Template -->\\n<!-- \\t\\t\\t\\t[contextmenu]=\\\"[nodeTemplateContextMenu, {nodeTemplate: nodeTemplate}]\\\"\\n -->\\t\\t\\t\\t<g *ngFor=\\\"let nodeTemplate of currentTopologyTemplate.nodeTemplates\\\" (mouseup)=\\\"stopDrawLevelGraphRelation(nodeTemplate)\\\" (mousedown)=\\\"startMoveNode($event, nodeTemplate); setCurrentLevelGraphCompliantRelationshipTypes($event, nodeTemplate.levelGraphNodeId)\\\" (mousemove)=\\\"onMoveNode($event)\\\"\\n\\t\\t\\t\\t\\t(mouseup)=\\\"stopMoveNode($event)\\\">\\n\\t\\t\\t\\t\\t<rect rx=\\\"20\\\" ry=\\\"20\\\" [attr.id]=\\\"nodeTemplate.id\\\" [attr.x]=\\\"nodeTemplate.x\\\" [attr.y]=\\\"nodeTemplate.y\\\" [attr.width]=\\\"nodeTemplate.width\\\" [attr.height]=\\\"nodeTemplate.height\\\" fill=\\\"url(#nodeTemplate)\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\t\\t\\t\\t    \\n\\t\\t\\t\\t    <image [attr.xlink:href]=\\\"nodeTemplate.icon\\\" [attr.x]=\\\"nodeTemplate.x + nodeTemplate.height/100 * 10\\\" [attr.y]=\\\"nodeTemplate.y + nodeTemplate.height/100 * 10\\\" [attr.width]=\\\"nodeTemplate.width/100 * 20\\\" [attr.height]=\\\"nodeTemplate.height/100 * 56\\\" />\\t\\t\\t\\n\\t\\t\\t\\t\\t<text [attr.x]=\\\"nodeTemplate.x + nodeTemplate.width/2 + nodeTemplate.height/100 * 35\\\" [attr.y]=\\\"nodeTemplate.y + nodeTemplate.height/4 + 15\\\" font-family=\\\"Verdana\\\" font-size=\\\"20\\\" fill=\\\"white\\\" text-anchor=\\\"middle\\\">{{nodeTemplate.name}} (ID:{{nodeTemplate.id}})</text>\\t\\t\\n                    <rect rx=\\\"0\\\" ry=\\\"0\\\" [attr.x]=\\\"nodeTemplate.x\\\" [attr.y]=\\\"nodeTemplate.y + nodeTemplate.height/3 * 2\\\" [attr.width]=\\\"nodeTemplate.width\\\" [attr.height]=\\\"nodeTemplate.height/3\\\" fill=\\\"white\\\" style=\\\"stroke:black;stroke-width:5;\\\" />\\n\\t\\t\\t\\t\\t<text [attr.x]=\\\"nodeTemplate.x + nodeTemplate.width/2\\\" [attr.y]=\\\"nodeTemplate.y + nodeTemplate.height/4 * 3 + 20\\\" font-family=\\\"Verdana\\\" font-size=\\\"24\\\" fill=\\\"black\\\" text-anchor=\\\"middle\\\">(NodeType ID:{{nodeTemplate.nodeTypeId}})</text>\\t\\n\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t\\t\\n           </svg>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<!-- Node Template context menu \\n<contextmenu #nodeTemplateContextMenu>\\n<div class=\\\"dropdown open\\\">\\n\\t<ul class=\\\"dropdown-menu\\\">\\n\\t\\t<li class=\\\"dropdown-submenu\\\"><a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i>Repository RelationshipTypes</a>\\n\\t\\t\\t<ul tabindex=\\\"-1\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.name === 'Select Repository'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO REPOSITORY SELECTED</i></li>\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedRepository.relationshipTypes.length < 1 && selectedRepository.name !== 'Select Repository'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO RELATIONSHIPTYPE AVAILABE</i></li>\\n\\t\\t\\t\\t<li *ngFor=\\\"let relationshipType of selectedRepository.relationshipTypes\\\"><a class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\" (click)=\\\"startDrawRelation($event, relationshipType, nodeTemplateContextMenu.get('nodeTemplate'))\\\">{{relationshipType.name}} (ID: {{relationshipType.id}})</a></li>\\n\\t\\t\\t</ul></li>\\n\\n\\t\\t<li class=\\\"dropdown-submenu\\\"><a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i>Level Graph RelationshipTypes</a>\\n\\t\\t\\t<ul tabindex=\\\"-1\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select LevelGraph'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO LEVEL GRAPH SELECTED</i></li>\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraphNodeRelationType.length < 1 && selectedLevelGraph.name !== 'Select LevelGraph'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO RELATIONSHIPTYPE AVAILABEL</i></li>\\n\\t\\t\\t\\t<li *ngFor=\\\"let levelGraphNode of selectedLevelGraphNodeRelationType\\\"><a class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\" (click)=\\\"startDrawCurrentLevelGraphRelation($event, levelGraphNode, nodeTemplateContextMenu.get('nodeTemplate'))\\\">{{levelGraphNode.name}} (ID: {{levelGraphNode.id}})</a></li>\\n\\t\\t\\t</ul></li>\\n\\n\\t\\t<li class=\\\"dropdown-submenu\\\"><a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i>Level {{currentTopologyTemplate.abstractionLevel}} RelationshipTypes</a>\\n\\t\\t\\t<ul tabindex=\\\"-1\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select LevelGraph'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO LEVEL GRAPH SELECTED</i></li>\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraphNodeRelationTypeCurrentAbstractionLevel.length < 1 && selectedLevelGraph.name !== 'Select LevelGraph'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO RELATIONSHIPTYPE AVAILABEL</i></li>\\n\\t\\t\\t\\t<li *ngFor=\\\"let levelGraphNode of selectedLevelGraphNodeRelationTypeCurrentAbstractionLevel\\\"><a class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\" (click)=\\\"startDrawCurrentLevelGraphRelation($event, levelGraphNode, nodeTemplateContextMenu.get('nodeTemplate'))\\\">{{levelGraphNode.name}} (ID: {{levelGraphNode.id}})</a></li>\\n\\t\\t\\t</ul></li>\\n\\n\\t\\t<li class=\\\"dropdown-submenu\\\"><a class=\\\"dropdown-item\\\"><i class=\\\"fa fa-arrow-right\\\" aria-hidden=\\\"true\\\"></i>Level Graph Compliant Relation</a>\\n\\t\\t\\t<ul tabindex=\\\"-1\\\" class=\\\"dropdown-menu\\\">\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"selectedLevelGraph.name === 'Select LevelGraph'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO LEVEL GRAPH SELECTED</i></li>\\n\\t\\t\\t\\t<li class=\\\"w3-pale-yellow\\\" *ngIf=\\\"currentLevelGraphCompliantRelationshipTypes.length < 1 && selectedLevelGraph.name !== 'Select LevelGraph'\\\"><i class=\\\"icon fa fa-exclamation-triangle\\\" aria-hidden=\\\"true\\\">NO RELATIONSHIPTYPE AVAILABEL</i></li>\\n\\t\\t\\t\\t<li *ngFor=\\\"let levelGraphNode of currentLevelGraphCompliantRelationshipTypes\\\"><a class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\" (click)=\\\"startDrawCurrentLevelGraphCompliantRelation($event, levelGraphNode, nodeTemplateContextMenu.get('nodeTemplate'))\\\">{{levelGraphNode.name}} (ID: {{levelGraphNode.id}})</a></li>\\n\\t\\t\\t</ul></li>\\n\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createExpectedProperty\\\" (click)=\\\"setEntity(nodeTemplateContextMenu.get('nodeTemplate'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Expected Property</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createProvidedProperty\\\" (click)=\\\"setEntity(nodeTemplateContextMenu.get('nodeTemplate'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Provided Property</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editNodeTemplateName\\\" (click)=\\\"setNodeTemplate(nodeTemplateContextMenu.get('nodeTemplate'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Edit Name</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" routerLink=\\\"/dashboard/nodetemplatedetails\\\" [queryParams]=\\\"{id: nodeTemplateContextMenu.get('nodeTemplate').id}\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>View Details</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" (click)=\\\"deleteNodeTemplate(nodeTemplateContextMenu.get('nodeTemplate'))\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</a></li>\\n\\t</ul>\\n</div>\\n</contextmenu>\\n\\n  Relationship Template context menu \\n<contextmenu #relationshipTemplateContextMenu>\\n<div class=\\\"dropdown open\\\">\\n\\t<ul class=\\\"dropdown-menu\\\">\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createExpectedProperty\\\" (click)=\\\"setEntity(relationshipTemplateContextMenu.get('relationshipTemplate'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Expected Property</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createProvidedProperty\\\" (click)=\\\"setEntity(relationshipTemplateContextMenu.get('relationshipTemplate'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Provided Property</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editRelationshipTemplateName\\\" (click)=\\\"setRelationshipTemplate(relationshipTemplateContextMenu.get('relationshipTemplate'))\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>Edit Name</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" routerLink=\\\"/dashboard/relationshiptemplatedetails\\\" [queryParams]=\\\"{id: relationshipTemplateContextMenu.get('relationshipTemplate').id}\\\"><i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>View Details</a></li>\\n\\t\\t<li><a class=\\\"dropdown-item\\\" (click)=\\\"deleteRelationshipTemplate(relationshipTemplateContextMenu.get('relationshipTemplate'))\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>Delete</a></li>\\n\\t</ul>\\n</div>\\n</contextmenu> -->\\n\\n\\n<!-- Modal for Create ProvidedProperty -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"createProvidedProperty\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create ProvidedProperty</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createProvidedProperty.name\\\" #nameProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{createProvidedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameProperty.errors && (nameProperty.dirty || nameProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameProperty.errors.required\\\">Name is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty=\\\"ngModel\\\" name=\\\"value\\\" [(ngModel)]=\\\"createProvidedProperty.value\\\" #valueProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{createProvidedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"valueProperty.errors && (valueProperty.dirty || valueProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!valueProperty.errors.required\\\">Value is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addProvidedProperty()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<!-- Modal for Create ExpectedProperty -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"createExpectedProperty\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Create ExpectedProperty</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createExpectedProperty.name\\\" #nameProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{createExpectedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameProperty.errors && (nameProperty.dirty || nameProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameProperty.errors.required\\\">Name is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty=\\\"ngModel\\\" name=\\\"value\\\" [(ngModel)]=\\\"createExpectedProperty.value\\\" #valueProperty type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{createExpectedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"valueProperty.errors && (valueProperty.dirty || valueProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!valueProperty.errors.required\\\">Value is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addExpectedProperty()\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Modal for Refinement -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"refinementModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Refinement</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Select Level Graphs which should be used for the Refinement:</label>\\n\\t\\t\\t\\t\\t<div id=\\\"refineGraphList\\\" class=\\\"w3-light-grey\\\" style=\\\"max-height: 300px; overflow: auto\\\">\\n\\t\\t\\t\\t\\t\\t<label *ngFor=\\\"let levelGraph of levelGraphs\\\" class=\\\"form-control\\\"> <input type=\\\"checkbox\\\" name=\\\"levelGraphs\\\" [(ngModel)]=\\\"levelGraph.checked\\\" value=\\\"{{levelGraph.id}}\\\" (click)=\\\"onCheckLevelGraph(levelGraph)\\\" /> Name: {{levelGraph.name}} ID: {{levelGraph.id}}\\n\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"smi\\\">Satisfaction Index (between 0 and 1): </label> <input #smi type=\\\"number\\\" min=\\\"0\\\" max=\\\"1\\\" class=\\\"form-control\\\" value=\\\"1\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setUsedLevelGraphs()\\\">Restore</button>\\n<!-- \\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"startRefinement(smi.value, steps)\\\" data-dismiss=\\\"modal\\\">Refinement</button>\\n -->\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"startRefinement(smi.value, 1)\\\" data-dismiss=\\\"modal\\\">One Step Refinement</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<!-- Modal for Edit TopologyNodeName-->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editNodeTemplateName\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit NodeTemplate Name</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editNameNodeTmeplate type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editNodeTemplateName(editNameNodeTmeplate.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n\\n<!-- Modal for Edit TopologyRelationName-->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editRelationshipTemplateName\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit RelationshipTemplate Name</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editNameRelationshipTmeplate type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value=\\\"{{currentRelationshipTemplate.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editRelationshipTemplateName(editNameRelationshipTmeplate.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/topologytool/topologymodeller/topologymodeller.component.html\n// module id = 751\n// module chunks = 0","module.exports = \"<div class=\\\"dashboard_area\\\">\\n\\t\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 w3-card-4 heading\\\">\\n\\t\\t<h2>Topology Template Tool</h2>\\n\\t</div>\\n\\n\\t<div class=\\\"rounded w3-theme-d2\\\" style=\\\"margin:30px\\\">\\n\\t\\t\\n\\t\\t<!-- Selector for the TopologyTemplateComponent -->\\n\\t\\t<app-topologytemplate [topologyTemplates]=\\\"topologyTemplates\\\"></app-topologytemplate>\\n\\t\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/topologytool/topologytemplatetool.component.html\n// module id = 752\n// module chunks = 0","module.exports = \"<!-- LevelGraphDetailsComponent Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\t\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tLevel Graph Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraph.name}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tLevel Graph ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraph.id}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<!-- Tab Panel for display data -->\\n\\t<div class=\\\"data-panel \\\">\\n\\t\\t\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#levelGraphNode\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Level Graph Node</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#levelGraphRelation\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Level Graph Relation</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div id=\\\"levelGraphNode\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!--  Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-levelgraphnode [currentLevelGraph]=\\\"currentLevelGraph\\\"></app-levelgraphnode>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t    <div id=\\\"levelGraphRelation\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-levelgraphrelation [currentLevelGraphRelations]=\\\"currentLevelGraph.levelGraphRelations\\\"></app-levelgraphrelation>\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraph/levelgrahdetails/levelgrahdetails.component.html\n// module id = 753\n// module chunks = 0","module.exports = \"<!-- LevelGraphComponent Area -->\\n<div id=\\\"accordion\\\" class=\\\"panel-group tab-panel collapsed_area\\\">\\n\\n\\t<div class=\\\"panel panel-default \\\">\\n\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\t\\t\\t<h3 class=\\\"col-sm-6\\\">Level-Graphs</h3>\\n\\t\\t\\t\\n\\t\\t\\t<!-- New Button -->\\n\\t\\t\\t<button class=\\\"w3-right w3-green btn btn-primary\\\" id=\\\"createLevelGraph\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#createLevelGraphFieldsArea\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New\\n\\t\\t\\t</button>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Import Button-->\\n\\t\\t\\t<button class=\\\"w3-right w3-theme-l1 btn btn-primary\\\" id=\\\"import\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#importAreaLevelGraph\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> Import\\n\\t\\t\\t</button>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\n\\t\\t<!-- Input Panel -->\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"createLevelGraphFieldsArea\\\">\\n\\t\\t\\t<form #createLevelGraphForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-8 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"levelGraphName\\\">Name:</label> <input #levelGraphName #levelGraphName=\\\"ngModel\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"levelGraphName\\\" [(ngModel)]=\\\"createdLevelGraph.name\\\" value=\\\"{{createdLevelGraph.name}}\\\" required>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"levelGraphName.errors && (levelGraphName.dirty || levelGraphName.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!levelGraphName.errors.required\\\">Name is required</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"numberOfLevels\\\">Number of Levels:</label>\\n\\t\\t\\t\\t\\t<div>\\n\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"removeLevel()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t\\t\\t\\t<input #numberOfLevels readonly style=\\\"width: 100px\\\" id=\\\"number_of_levels\\\" type=\\\"number\\\" class=\\\"w3-center \\\" value=\\\"{{levels}}\\\" min=\\\"2\\\">\\n\\t\\t\\t\\t\\t\\t<button (click)=\\\"addLevel()\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" [disabled]=\\\"!createLevelGraphForm.form.valid\\\" class=\\\"btn btn-success\\\" (click)=\\\"createLevelGraph(numberOfLevels.value)\\\">Create</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Import Panel -->\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"importAreaLevelGraph\\\">\\n\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"file\\\">XML-File: </label> <input class=\\\"form-control\\\" #file type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"importLevelGraph()\\\">Upload</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<!-- Data Table -->\\n\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\n\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t<th></th>\\n\\t\\t\\t\\t\\t<th>Nr.</th>\\n\\t\\t\\t\\t\\t<th>Name</th>\\n\\t\\t\\t\\t\\t<th>ID</th>\\n\\t\\t\\t\\t\\t<th>Modeller</th>\\n\\t\\t\\t\\t\\t<th>Edit</th>\\n\\t\\t\\t\\t\\t<th>Export</th>\\n\\t\\t\\t\\t\\t<th>Delete</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let levelGraph of levelGraphs\\\">\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/levelgraph\\\" [queryParams]=\\\"{name: levelGraph.name, id: levelGraph.id}\\\"><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/levelgraph\\\" [queryParams]=\\\"{name: levelGraph.name, id: levelGraph.id}\\\">{{ levelGraphs.indexOf(levelGraph) +1 }}</td>\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/levelgraph\\\" [queryParams]=\\\"{name: levelGraph.name, id: levelGraph.id}\\\">{{ levelGraph.name }}</td>\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/levelgraph\\\" [queryParams]=\\\"{name: levelGraph.name, id: levelGraph.id}\\\">{{ levelGraph.id }}</td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-blue btn\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/levelgraphmodeller\\\" [queryParams]=\\\"{name: levelGraph.name, id: levelGraph.id}\\\">Modeller</button></td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-blue btn\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editLevelGraphModal\\\" (click)=\\\"setEditedLevelGraph(levelGraph)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"exportLevelGraph(levelGraph)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteLevelGraph(levelGraph.id, $event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n\\n\\t<div class=\\\"bottom_collapse_area\\\"></div>\\n\\n</div>\\n\\n<!-- Modal for Edit Level Graph-->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editLevelGraphModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit LevelGraph</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editName type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value=\\\"{{editedLevelGraph.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateLevelGraph( editName.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraph/levelgraph.component.html\n// module id = 754\n// module chunks = 0","module.exports = \"<!-- LevelGraphNode Component -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\n\\t\\t\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-3\\\">Level Graph Node</h3>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- DataTable -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">NodeType</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr routerLink=\\\"/dashboard/levelgraphnodedetails\\\" [queryParams]=\\\"{name: levelGraphNode.name , id: levelGraphNode.id}\\\" *ngFor=\\\"let levelGraphNode of currentLevelGraph.levelGraphNodes\\\">\\n\\t\\t\\t\\t\\t\\t<td><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\n\\t\\t\\t\\t\\t\\t<td>{{ currentLevelGraph.levelGraphNodes.indexOf(levelGraphNode) + 1 }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ levelGraphNode.name }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ levelGraphNode.id }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ levelGraphNode.levelGraphNodeType }}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphnode/levelgraphnode.component.html\n// module id = 755\n// module chunks = 0","module.exports = \"l<!-- General Data Component currently only for display data but you can extends later this component with update functionality -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div class=\\\"w3-theme-l1 input-panel\\\" id=\\\"createNodeTypeFieldsArea\\\">\\n\\t\\t<form>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.id}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameLevelGraphNode\\\">Name: </label> <input disabled #nameLevelGraphNode type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.name}}\\\" required>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon Path: </label> <input class=\\\"  form-control\\\" #icon value=\\\"{{currentLevelGraphNode.icon}}\\\" disabled />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Icon View: </label> <img class=\\\" form-control w3-right icon\\\" src=\\\"{{currentLevelGraphNode.icon}}\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>X (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.x}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Y (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.y}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Width (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.width}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Height (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.height}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Level Depth: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.levelDepth}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Type: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.levelGraphNodeType}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Node Type ID: </label>\\n\\t\\t\\t\\t\\t<input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentLevelGraphNode.levelGraphNodeTypeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"currentLevelGraphNode.levelGraphNodeType === 'NODETYPE'\\\" class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/nodetypedetails\\\" [queryParams]=\\\"{id: currentLevelGraphNode.levelGraphNodeTypeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"currentLevelGraphNode.levelGraphNodeType === 'RELATIONSHIPTYPE'\\\" class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/relationshipdetails\\\" [queryParams]=\\\"{id: currentLevelGraphNode.levelGraphNodeTypeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Level ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphNode.levelId}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Level Graph ID: </label>\\n\\t\\t\\t\\t\\t<input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentLevelGraphNode.levelGraphId}}\\\" disabled><button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/levelgraphmodeller\\\" [queryParams]=\\\"{id: currentLevelGraphNode.levelGraphId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/generaldata/generaldata.component.html\n// module id = 756\n// module chunks = 0","module.exports = \"<!-- LevelGraphNodeDetails Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tLevel Graph Node Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraphNode.name}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tLevel Graph Node ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraphNode.id}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Tab Panel for display data -->\\n\\t<div class=\\\"data-panel \\\">\\n\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#generalData\\\" style=\\\"color: white\\\" role=\\\"tab\\\">General Data</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#providedProperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Provided Property</a></li>\\n<!-- \\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#expectedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Expected Property</a></li>\\n -->\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#outRelation\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Outgoing Relation</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#inRelation\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Incoming Relation</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\n\\t\\t\\t<div id=\\\"generalData\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-generaldata [currentLevelGraphNode]=\\\"currentLevelGraphNode\\\"></app-generaldata>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"providedProperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the ProvidedPropertyComponent -->\\n\\t\\t\\t\\t<app-providedproperty [entity]=\\\"currentLevelGraphNode\\\"></app-providedproperty>\\n\\t\\t\\t</div>\\n\\n\\t\\t<!-- \\t<div id=\\\"expectedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\tSelector for the ExpectedPropertyComponent\\n\\t\\t\\t\\t<app-expectedproperty [entity]=\\\"currentLevelGraphNode\\\"></app-expectedproperty>\\n\\t\\t\\t</div> -->\\n\\n\\t\\t\\t<div id=\\\"outRelation\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-levelgraphrelation [currentLevelGraphRelations]=\\\"currentLevelGraphNode.outLevelGraphRelations\\\"></app-levelgraphrelation>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"inRelation\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-levelgraphrelation [currentLevelGraphRelations]=\\\"currentLevelGraphNode.inLevelGraphRelations\\\"></app-levelgraphrelation>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphnode/levelgraphnodedetails/levelgraphnodedetails.component.html\n// module id = 757\n// module chunks = 0","module.exports = \"<!-- LevelGraphRelationComponent Area -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\n\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-3\\\">Level Graph Relations</h3>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Data Table -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">RelationType</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr  routerLink=\\\"/dashboard/levelgraphrelationdetails\\\" [queryParams]=\\\"{id: levelGraphRelation.id}\\\" *ngFor=\\\"let levelGraphRelation of currentLevelGraphRelations\\\">\\n\\t\\t\\t\\t\\t\\t<td><i class=\\\"fa fa-folder-open-o\\\"></i></td>\\n\\t\\t\\t\\t\\t\\t<td>{{ currentLevelGraphRelations.indexOf(levelGraphRelation) + 1 }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ levelGraphRelation.id }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ levelGraphRelation.levelGraphRelationType }}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelation.component.html\n// module id = 758\n// module chunks = 0","module.exports = \"<!-- General Data Component -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div class=\\\"w3-theme-l1 input-panel\\\">\\n\\t\\t<form>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphRelation.id}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameLevelGraphNode\\\">Name: </label> <input disabled #nameLevelGraphNode type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentLevelGraphRelation.name}}\\\" required>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon Path: </label> <input class=\\\"  form-control\\\" #icon value=\\\"{{currentLevelGraphRelation.icon}}\\\" disabled />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Icon View: </label> <img class=\\\" form-control w3-right icon\\\" src=\\\"{{currentLevelGraphRelation.icon}}\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Source Node Level Depth: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphRelation.sourceLevelDepth}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Target Node Level Depth: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphRelation.targetLevelDepth}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Source Node ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentLevelGraphRelation.sourceNodeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/levelgraphnodedetails\\\" [queryParams]=\\\"{id: currentLevelGraphRelation.sourceNodeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Target Node ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentLevelGraphRelation.targetNodeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/levelgraphnodedetails\\\" [queryParams]=\\\"{id: currentLevelGraphRelation.targetNodeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Type:</label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentLevelGraphRelation.levelGraphRelationType}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Source Level ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphRelation.sourceLevelId}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Target Level ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentLevelGraphRelation.targetLevelId}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Level Graph ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentLevelGraphRelation.levelGraphId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/levelgraphmodeller\\\" [queryParams]=\\\"{id: currentLevelGraphRelation.levelGraphId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/generaldata/generaldata.component.html\n// module id = 759\n// module chunks = 0","module.exports = \"<!-- LevelGraphRelationDetails Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tLevel Graph Relation Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraphRelation.name}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tLevel Graph Relation ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentLevelGraphRelation.id}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Tab Panel for display data -->\\n\\t<div class=\\\"data-panel \\\">\\n\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#generalData\\\" style=\\\"color: white\\\" role=\\\"tab\\\">General Data</a></li>\\n<!-- \\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#providedProperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Provided Property</a></li>\\n --><!-- \\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#expectedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Expected Property</a></li>\\n -->\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\n\\t\\t\\t<div id=\\\"generalData\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-generaldata [currentLevelGraphRelation]=\\\"currentLevelGraphRelation\\\"></app-generaldata>\\n\\t\\t\\t</div>\\n\\n\\t\\t<!-- \\t<div id=\\\"providedProperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\tSelector for the ProvidedPropertyComponent\\n\\t\\t\\t\\t<app-providedproperty [entity]=\\\"currentLevelGraphRelation\\\"></app-providedproperty>\\n\\t\\t\\t</div> -->\\n\\n\\t\\t<!-- \\t<div id=\\\"expectedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\tSelector for the ExpectedPropertyComponent\\n\\t\\t\\t\\t<app-expectedproperty [entity]=\\\"currentLevelGraphRelation\\\"></app-expectedproperty>\\n\\t\\t\\t</div> -->\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/levelgraphrelation/levelgraphrelationdetails/levelgraphrelationdetails.component.html\n// module id = 760\n// module chunks = 0","module.exports = \"<!-- Expected Property Area -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\n\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\n\\t\\t\\t<!-- Header -->\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-6\\\">Expected Properties</h3>\\n\\n\\t\\t\\t\\t<button class=\\\"w3-right w3-green btn\\\" id=\\\"createProperty\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\"\\n\\t\\t\\t\\t\\thref=\\\"#createExpectedPropertyArea\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\"></i>New\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Input Panel -->\\n\\t\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"createExpectedPropertyArea\\\">\\n\\t\\t\\t\\t<form #createNodeTypeForm=\\\"ngForm\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createdExpectedProperty.name\\\" #nameProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{createdExpectedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameProperty.errors && (nameProperty.dirty || nameProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameProperty.errors.required\\\">Name is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty=\\\"ngModel\\\" name=\\\"value\\\" [(ngModel)]=\\\"createdExpectedProperty.value\\\" #valueProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{createdExpectedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"valueProperty.errors && (valueProperty.dirty || valueProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!valueProperty.errors.required\\\">Value is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!createNodeTypeForm.form.valid\\\" (click)=\\\"createExpectedProperty()\\\">Create</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Data Table -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Value</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Edit</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Delete</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let property of entity.expectedProperties\\\">\\n\\t\\t\\t\\t\\t\\t<td>{{entity.expectedProperties.indexOf(property) + 1 }}</td>\\n\\t\\t\\t\\t\\t    <td>{{ property.id }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ property.name }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ property.value }}</td>\\n\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editExpectedPropertyModal\\\" class=\\\"w3-blue btn\\\" (click)=\\\"setExpectedProperty(property)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteExpectedProperty(property.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Modal for Edit Expected Property-->\\n<div class=\\\"modal fade modal-position\\\" id=editExpectedPropertyModal tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n\\taria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Expected Property</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{editExpectedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{editExpectedProperty.value}}\\\" required>\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateExpectedProperty(nameProperty.value, valueProperty.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/metrics/expectedproperty/expectedproperty.component.html\n// module id = 761\n// module chunks = 0","module.exports = \"<!-- ProvidedProperty Area -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\n\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\n\\t\\t\\t<!-- Header -->\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-6\\\">Provided Properties</h3>\\n\\n\\t\\t\\t\\t<button class=\\\"w3-right w3-green btn\\\" id=\\\"createProperty\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\"\\n\\t\\t\\t\\t\\thref=\\\"#createPropertyArea\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Input Panel -->\\n\\t\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"createPropertyArea\\\">\\n\\t\\t\\t\\t<form #createNodeTypeForm=\\\"ngForm\\\">\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createdProvidedProperty.name\\\" #nameProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{createdProvidedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameProperty.errors && (nameProperty.dirty || nameProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameProperty.errors.required\\\">Name is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty=\\\"ngModel\\\" name=\\\"value\\\" [(ngModel)]=\\\"createdProvidedProperty.value\\\" #valueProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{createdProvidedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"valueProperty.errors && (valueProperty.dirty || valueProperty.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!valueProperty.errors.required\\\">Value is required</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!createNodeTypeForm.form.valid\\\" (click)=\\\"createProvidedProperty()\\\">Create</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<!-- Data Table -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Value</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Edit</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Delete</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let property of entity.providedProperties\\\">\\n\\t\\t\\t\\t\\t\\t<td>{{ entity.providedProperties.indexOf(property) + 1 }}</td>\\n\\t\\t\\t\\t\\t    <td>{{ property.id }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ property.name }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ property.value }}</td>\\n\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editPropertyModal\\\" class=\\\"w3-blue btn\\\" (click)=\\\"setProvidedProperty(property)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteProvidedProperty(property.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Modal for Edit Provided Property-->\\n<div class=\\\"modal fade modal-position\\\" id=editPropertyModal tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n\\taria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Provided Property</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameProperty\\\">Name: </label> <input #nameProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"nameProperty\\\" value=\\\"{{editProvidedProperty.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"valueProperty\\\">Value: </label> <input #valueProperty type=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"valueProperty\\\" value=\\\"{{editProvidedProperty.value}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateProvidedProperty(nameProperty.value, valueProperty.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/metrics/providedproperty/providedproperty.component.html\n// module id = 762\n// module chunks = 0","module.exports = \"<!-- NodeTemplate Component -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\n\\t\\t\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-3\\\">Node Template</h3>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- DataTable -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr routerLink=\\\"/dashboard/nodetemplatedetails\\\" [queryParams]=\\\"{id: nodeTemplate.id}\\\" *ngFor=\\\"let nodeTemplate of currentTopologyTemplate.nodeTemplates\\\">\\n\\t\\t\\t\\t\\t\\t<td><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\n\\t\\t\\t\\t\\t\\t<td>{{ currentTopologyTemplate.nodeTemplates.indexOf(nodeTemplate) + 1 }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ nodeTemplate.name }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ nodeTemplate.id }}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/nodetemplate/nodetemplate.component.html\n// module id = 763\n// module chunks = 0","module.exports = \"<!-- General Data Component currently only for display data but you can extends later this component with update functionality -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div class=\\\"w3-theme-l1 input-panel\\\" id=\\\"createNodeTypeFieldsArea\\\">\\n\\t\\t<form #formCtrl=\\\"ngForm\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.id}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameLevelGraphNode\\\">Name: </label> <input disabled #nameLevelGraphNode type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.name}}\\\" required>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon Path: </label> <input class=\\\"  form-control\\\" #icon value=\\\"{{currentNodeTemplate.icon}}\\\" disabled />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Icon View: </label> <img class=\\\" form-control w3-right icon\\\" src=\\\"{{currentNodeTemplate.icon}}\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>X (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.x}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Y (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.y}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Width (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.width}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Height (in px): </label> <input class=\\\"form-control\\\" value=\\\"{{currentNodeTemplate.height}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Node Type ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentNodeTemplate.nodeTypeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/nodetypedetails\\\" [queryParams]=\\\"{id: currentNodeTemplate.nodeTypeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Level Graph Node ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentNodeTemplate.levelGraphNodeId}}\\\" required disabled>\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"currentNodeTemplate.levelGraphNodeId !== undefined\\\" class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/levelgraphnodedetails\\\" [queryParams]=\\\"{id: currentNodeTemplate.levelGraphNodeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Topology Template ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentNodeTemplate.topologyTemplateId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"currentNodeTemplate.topologyTemplateId !== null\\\" class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/topologymodeller\\\" [queryParams]=\\\"{id: currentNodeTemplate.topologyTemplateId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/generaldata/generaldata.component.html\n// module id = 764\n// module chunks = 0","module.exports = \"<!-- LevelGraphNodeDetails Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tNode Template: <input disabled style=\\\"color: black\\\" value=\\\"{{currentNodeTemplate.name}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tNode Template: <input disabled style=\\\"color: black\\\" value=\\\"{{currentNodeTemplate.id}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Tab Panel for display data -->\\n\\t<div class=\\\"data-panel \\\">\\n\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#generalData\\\" style=\\\"color: white\\\" role=\\\"tab\\\">General Data</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#providedProperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Provided Property</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#expectedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Expected Property</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#outRelation\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Outgoing Relation</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#inRelation\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Incoming Relation</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\n\\t\\t\\t<div id=\\\"generalData\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-generaldata [currentNodeTemplate]=\\\"currentNodeTemplate\\\"></app-generaldata>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"providedProperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the ProvidedPropertyComponent -->\\n\\t\\t\\t\\t<app-providedproperty [entity]=\\\"currentNodeTemplate\\\"></app-providedproperty>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"expectedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the ExpectedPropertyComponent -->\\n\\t\\t\\t\\t<app-expectedproperty [entity]=\\\"currentNodeTemplate\\\"></app-expectedproperty>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"outRelation\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-relationshiptemplate [currentRelationshipTemplates]=\\\"currentNodeTemplate.outRelationshipTemplates\\\"></app-relationshiptemplate>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"inRelation\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-relationshiptemplate [currentRelationshipTemplates]=\\\"currentNodeTemplate.inRelationshipTemplates\\\"></app-relationshiptemplate>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/nodetemplate/nodetemplatedetails/nodetemplatedetails.component.html\n// module id = 765\n// module chunks = 0","module.exports = \"<!-- RelationshipTemplate Component -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\n\\t\\t\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-3\\\">Relationship Template</h3>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- DataTable -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr routerLink=\\\"/dashboard/relationshiptemplatedetails\\\" [queryParams]=\\\"{id: relationshipTemplate.id}\\\" *ngFor=\\\"let relationshipTemplate of currentRelationshipTemplates\\\">\\n\\t\\t\\t\\t\\t\\t<td><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\n\\t\\t\\t\\t\\t\\t<td>{{ currentRelationshipTemplates.indexOf(relationshipTemplate) + 1 }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ relationshipTemplate.name }}</td>\\n\\t\\t\\t\\t\\t\\t<td>{{ relationshipTemplate.id }}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplate.component.html\n// module id = 766\n// module chunks = 0","module.exports = \"<!-- General Data Component currently only for display data but you can extends later this component with update functionality -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div class=\\\"w3-theme-l1 input-panel\\\" id=\\\"createNodeTypeFieldsArea\\\">\\n\\t\\t<form>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentRelationshipTemplate.id}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameLevelGraphNode\\\">Name: </label> <input disabled #nameLevelGraphNode type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentRelationshipTemplate.name}}\\\" required>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon Path: </label> <input class=\\\"  form-control\\\" #icon value=\\\"{{currentRelationshipTemplate.icon}}\\\" disabled />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Icon View: </label> <img class=\\\" form-control w3-right icon\\\" src=\\\"{{currentRelationshipTemplate.icon}}\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Source Node ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentRelationshipTemplate.sourceNodeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/nodetemplatedetails\\\" [queryParams]=\\\"{id: currentRelationshipTemplate.sourceNodeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Target Node ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentRelationshipTemplate.targetNodeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/nodetemplatedetails\\\" [queryParams]=\\\"{id: currentRelationshipTemplate.targetNodeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Relationship Type ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentRelationshipTemplate.relationshipTypeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/relationshiptypedetails\\\" [queryParams]=\\\"{id: currentRelationshipTemplate.relationshipTypeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Level Graph Node ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentRelationshipTemplate.levelGraphNodeId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button [disabled]=\\\"currentRelationshipTemplate.levelGraphNodeId !== undefined\\\" class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/relationshiptypedetails\\\" [queryParams]=\\\"{id: currentRelationshipTemplate.levelGraphNodeId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Topology Template ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentRelationshipTemplate.topologyTemplateId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button *ngIf=\\\"currentRelationshipTemplate.topologyTemplateId !== null\\\" class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/topologymodeller\\\" [queryParams]=\\\"{id: currentRelationshipTemplate.topologyTemplateId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\t</div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/generaldata/generaldata.component.html\n// module id = 767\n// module chunks = 0","module.exports = \"<!-- RelationshipTemplate Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tRelationship Template Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentRelationshipTemplate.name}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tRelationship Template ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentRelationshipTemplate.id}}\\\" />\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Tab Panel for display data -->\\n\\t<div class=\\\"data-panel \\\">\\n\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#generalData\\\" style=\\\"color: white\\\" role=\\\"tab\\\">General Data</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#providedProperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Provided Property</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#expectedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Expected Property</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\n\\t\\t\\t<div id=\\\"generalData\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-generaldata [currentRelationshipTemplate]=\\\"currentRelationshipTemplate\\\"></app-generaldata>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"providedProperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the ProvidedPropertyComponent -->\\n\\t\\t\\t\\t<app-providedproperty [entity]=\\\"currentRelationshipTemplate\\\"></app-providedproperty>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"expectedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the ExpectedPropertyComponent -->\\n\\t\\t\\t\\t<app-expectedproperty [entity]=\\\"currentRelationshipTemplate\\\"></app-expectedproperty>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/relationshiptemplate/relationshiptemplatedetails/relationshiptemplatedetails.component.html\n// module id = 768\n// module chunks = 0","module.exports = \"<!-- RepositoryComponent Area -->\\r\\n<div id=\\\"accordion\\\" class=\\\"panel-group collapsed_area tab-panel\\\">\\r\\n\\r\\n\\t<div class=\\\"panel panel-default \\\">\\r\\n\\r\\n\\t\\t<!-- Header -->\\r\\n\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\r\\n\\t\\t\\t<h3 class=\\\"col-sm-3\\\">Repositories</h3>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<!-- New Button -->\\r\\n\\t\\t\\t<button class=\\\"w3-right w3-green btn btn-primary\\\" id=\\\"addRepository\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#addRepositoriesFieldsArea\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New\\r\\n\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t<!-- Import Button-->\\r\\n\\t\\t\\t<button class=\\\"w3-right w3-theme-l1 btn btn-primary\\\" id=\\\"import\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#importAreaRepository\\\">\\r\\n\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> Import\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- Data panel -->\\r\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"addRepositoriesFieldsArea\\\">\\r\\n\\t\\t\\t<form #createRepositoryForm=\\\"ngForm\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"repositoryName\\\">Name: </label> <input #repositoryName #repositoryName=\\\"ngModel\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"repositoryName\\\" [(ngModel)]=\\\"createdRepository.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{createdRepository.name}}\\\" required>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"repositoryName.errors && (repositoryName.dirty || repositoryName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t<div [hidden]=\\\"!repositoryName.errors.required\\\">Name is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<button type=\\\"submit\\\" [disabled]=\\\"!createRepositoryForm.form.valid\\\" class=\\\"btn btn-success\\\" (click)=\\\"createRepository()\\\">Save</button>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- Import Panel -->\\r\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"importAreaRepository\\\">\\r\\n\\t\\t\\t<form>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<label for=\\\"file\\\">XML-File: </label> <input class=\\\"form-control\\\" #file type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"importRepository()\\\">Upload</button>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t</div>\\r\\n\\r\\n\\t<!-- Data table -->\\r\\n\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\r\\n\\r\\n\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\r\\n\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Edit</th>\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Export</th>\\r\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Delete</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\r\\n\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t<tr class=\\\"height\\\" *ngFor=\\\"let repository of repositories\\\">\\r\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/repository\\\" [queryParams]=\\\"{id: repository.id}\\\"><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\r\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/repository\\\" [queryParams]=\\\"{id: repository.id}\\\">{{ repositories.indexOf(repository) +1 }}</td>\\r\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/repository\\\" [queryParams]=\\\"{id: repository.id}\\\">{{ repository.name }}</td>\\r\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/repository\\\" [queryParams]=\\\"{id: repository.id}\\\">{{ repository.id }}</td>\\r\\n\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editRepositoryModal\\\" class=\\\"w3-blue btn\\\" (click)=setEditRepositoryData(repository)>\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</button></td>\\r\\n\\t\\t\\t\\t\\t<td><button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"exportRepository(repository)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</button></td>\\r\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteRepository(repository.id, $event)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t</button></td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal for Edit Repository-->\\r\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editRepositoryModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Repository</h5>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\r\\n\\t\\t\\t\\t<form>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editName type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value=\\\"{{editedRepository.name}}\\\" required>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateRepository(editName.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/repository/repository.component.html\n// module id = 769\n// module chunks = 0","module.exports = \"<!-- RepositoryDetailsComponent Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tRepository Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentRepository.name}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tRepository ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentRepository.id}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<!-- Tab Panel -->\\n\\t<div class=\\\"data-panel \\\">\\n\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#nodeType\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Node Type</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#relationshipType\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Relationship Type</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\n\\t\\t\\t<div id=\\\"nodeType\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-nodetype [repository]=\\\"currentRepository\\\" [nodeTypes]=\\\"currentRepository.nodeTypes\\\"></app-nodetype>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"relationshipType\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-relationshiptype [repository]=\\\"currentRepository\\\" [relationshipTypes]=\\\"currentRepository.relationshipTypes\\\"></app-relationshiptype>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/repository/repositorydetails/repositorydetails.component.html\n// module id = 770\n// module chunks = 0","module.exports = \"<nav class=\\\"w3-theme-d4 navbar navbar-dark bg-inverse navbar-fixed-top topnav\\\">\\n\\t<div class=\\\"collapse navbar-toggleable-xs clearfix text-center\\\">\\n\\t\\t<a class=\\\"navbar-brand navbar-item\\\" routerLink=\\\"/dashboard/administration\\\" [routerLinkActive]=\\\"['router-link-active']\\\">ArchRef</a> \\n\\t\\t<a class=\\\"navbar-item\\\" routerLink=\\\"/dashboard/topologytemplatetool\\\" [routerLinkActive]=\\\"['router-link-active']\\\"><i class=\\\"fa fa-fw fa-dashboard\\\"></i> Topology-Tool</a>\\n\\t\\t<a class=\\\"navbar-item\\\" routerLink=\\\"/dashboard/levelgraphtool\\\" [routerLinkActive]=\\\"['router-link-active']\\\"><i class=\\\"fa fa-fw fa-dashboard\\\"></i>Level-Graph-Tool</a>\\n\\t\\t<a class=\\\"navbar-item\\\"  routerLink=\\\"/dashboard/administration\\\" [routerLinkActive]=\\\"['router-link-active']\\\"><i class=\\\"fa fa-fw fa-dashboard\\\"></i>Administration Tool</a>\\n\\t</div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/topnav/topnav.html\n// module id = 771\n// module chunks = 0","module.exports = \"<!-- TopologyTemplateComponent Area -->\\n<div id=\\\"accordion\\\" class=\\\"panel-group collapsed_area tab-panel\\\">\\n\\n\\t<div class=\\\"panel panel-default \\\">\\n\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\t\\t\\t<h3 class=\\\"col-sm-6\\\">Topology Templates</h3>\\n\\t\\t\\t\\n\\t\\t\\t<!-- New Button -->\\n\\t\\t\\t<button class=\\\"w3-right w3-green btn btn-primary\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#createTopologyTemplateArea\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New\\n\\t\\t\\t</button>\\n\\t\\t\\t\\n\\t\\t\\t<!-- Import Button-->\\n\\t\\t\\t<button class=\\\"w3-right w3-theme-l1 btn btn-primary\\\" id=\\\"import\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#importAreaTopologyTemplate\\\">\\n\\t\\t\\t\\t<i class=\\\"fa fa-upload\\\" aria-hidden=\\\"true\\\"></i> Import\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\n\\t\\t<!-- Data panel for user input for creating a new TopologyTemplate -->\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"createTopologyTemplateArea\\\">\\n\\t\\t\\t<form #createTopologyTemplateForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t<div class=\\\"col-sm-12 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameTopologyTemplate\\\">Name:</label> <input #nameTopologyTemplate #nameTopologyTemplate=\\\"ngModel\\\" name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"createdTopologyTemplate.name\\\" class=\\\"form-control\\\" id=\\\"nameTopologyTemplate\\\" value=\\\"{{createdTopologyTemplate.name}}\\\" required>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"nameTopologyTemplate.errors && (nameTopologyTemplate.dirty || nameTopologyTemplate.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameTopologyTemplate.errors.required\\\">Name is required</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!createTopologyTemplateForm.form.valid\\\" (click)=\\\"createTopologyTemplate()\\\">Create</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Import Panel -->\\n\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"importAreaTopologyTemplate\\\">\\n\\t\\t\\t<form>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"file\\\">XML-File: </label> <input class=\\\"form-control\\\" #file type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"importTopologyTemplate()\\\">Upload</button>\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n\\t<!-- Data Table -->\\n\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\n\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Modeller</th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Edit</th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Export</th>\\n\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Delete</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let topology of topologyTemplates\\\">\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/topologytemplatedetails\\\" [queryParams]=\\\"{id: topology.id}\\\"><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/topologytemplatedetails\\\" [queryParams]=\\\"{id: topology.id}\\\">{{ topologyTemplates.indexOf(topology) +1 }}</td>\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/topologytemplatedetails\\\" [queryParams]=\\\"{id: topology.id}\\\">{{ topology.name }}</td>\\n\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/topologytemplatedetails\\\" [queryParams]=\\\"{id: topology.id}\\\">{{ topology.id }}</td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-blue btn\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/topologymodeller\\\" [queryParams]=\\\"{name: topology.name, id: topology.id}\\\">Modeller</button></td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-blue btn\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editTopologyTemplateModal\\\" (click)=\\\"setEditTopologyTemplate(topology)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"exportTopologyTemplate(topology)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteTopologyTemplate(topology.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n\\n\\t<div class=\\\"bottom_collapse_area\\\"></div>\\n\\n</div>\\n\\n<!-- Modal for Edit TopologyTemplate -->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editTopologyTemplateModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Topology Template</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"input-panel\\\">\\n\\t\\t\\t\\t<form #editTopologyTemplateForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\n\\t\\t\\t\\t\\t\\t<label for=\\\"editName\\\">Name: </label> <input #editName type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"editName\\\" value=\\\"{{editTopologyTemplate.name}}\\\" required>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"editName.errors && (editName.dirty || editName.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!editName.errors.required\\\">Name is required</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editTopologyTemplateForm.form.valid\\\" (click)=\\\"updateTopologyTemplate(editName.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/topologytemplate/topologytemplate.component.html\n// module id = 772\n// module chunks = 0","module.exports = \"<!-- LevelGraphDetailsComponent -->\\n<div class=\\\"dashboard_area\\\">\\n\\t\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tTopology Template Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentTopologyTemplate.name}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tTopology Template ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentTopologyTemplate.id}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<!-- Tab Panel -->\\n\\t<div class=\\\"data-panel \\\">\\n\\t\\t\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#levelGraphNode\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Node Template</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#levelGraphRelation\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Relationship Template</a></li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content tab-panel\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div id=\\\"levelGraphNode\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!--  Selector for the NodeTypeComponent -->\\n\\t\\t\\t\\t<app-nodetemplate [currentTopologyTemplate]=\\\"currentTopologyTemplate\\\"></app-nodetemplate>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t    <div id=\\\"levelGraphRelation\\\" class=\\\"rounded tab-pane \\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector for the RelationshipTypeComponent -->\\n\\t\\t\\t\\t<app-relationshiptemplate [currentRelationshipTemplates]=\\\"currentTopologyTemplate.relationshipTemplates\\\"></app-relationshiptemplate>\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/topologytemplate/topologytemplatedetails/topologytemplatedetails.component.html\n// module id = 773\n// module chunks = 0","module.exports = \"<!-- NodeTypeComponent Area -->\\r\\n<div class=\\\"tab-panel rounded\\\">\\r\\n\\r\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area \\\">\\r\\n\\r\\n\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<!-- Header -->\\r\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\r\\n\\r\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-3\\\">Node Types</h3>\\r\\n\\r\\n\\t\\t\\t\\t<button class=\\\"w3-right w3-green btn\\\" id=\\\"createNodeType\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\"\\r\\n\\t\\t\\t\\t\\thref=\\\"#createNodeTypeFieldsArea\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New\\r\\n\\t\\t\\t\\t</button>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<!-- Control Panel -->\\r\\n\\t\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"createNodeTypeFieldsArea\\\">\\r\\n\\t\\t\\t\\t<form #createNodeTypeForm=\\\"ngForm\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"nameNodeType\\\">Name: </label> <input #nameNodeType=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"createdNodeType.name\\\" #nameNodeType type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"form-control\\\" id=\\\"nameNodeType\\\" value=\\\"{{createdNodeType.name}}\\\" required>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"nameNodeType.errors && (nameNodeType.dirty || nameNodeType.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!nameNodeType.errors.required\\\">Name is required</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon: </label> <input  class=\\\"form-control\\\" #icon type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!createNodeTypeForm.form.valid\\\" (click)=\\\"createNodeType()\\\">Create</button>\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- Data Table -->\\r\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\r\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\r\\n\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Edit</th>\\r\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Delete</th>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</thead>\\r\\n\\r\\n\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let nodeType of nodeTypes\\\">\\r\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/nodetypedetails\\\" [queryParams]=\\\"{id: nodeType.id}\\\"><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\r\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/nodetypedetails\\\" [queryParams]=\\\"{id: nodeType.id}\\\">{{ nodeTypes.indexOf(nodeType) + 1 }}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/nodetypedetails\\\" [queryParams]=\\\"{id: nodeType.id}\\\">{{ nodeType.name }}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/nodetypedetails\\\" [queryParams]=\\\"{id: nodeType.id}\\\">{{ nodeType.id }}</td>\\r\\n\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editNodeTypeModal\\\" class=\\\"w3-blue btn\\\" (click)=\\\"setEditNodeType(nodeType)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\r\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteNodeType(nodeType.id)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t</table>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Modal for Edit Node Type-->\\r\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editNodeTypeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\r\\n\\taria-hidden=\\\"true\\\">\\r\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\r\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\r\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Node Type</h5>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\r\\n\\t\\t\\t\\t<form>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editName type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value=\\\"{{editNodeType.name}}\\\" required>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateNodeType(editName.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\r\\n\\r\\n\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/nodetype/nodetype.component.html\n// module id = 774\n// module chunks = 0","module.exports = \"<!-- General Data Component -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div class=\\\"w3-theme-l1 input-panel\\\">\\n\\t\\t<form>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentNodeType.id}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameNodeType\\\">Name: </label> <input disabled #nameNodeType type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentNodeType.name}}\\\" required>\\n\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon Path: </label> <input class=\\\"  form-control\\\" #icon value=\\\"{{currentNodeType.icon}}\\\" disabled />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Icon View: </label> <img class=\\\" form-control w3-right icon\\\" src=\\\"{{currentNodeType.icon}}\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Repository ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentNodeType.repositoryId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/repository\\\" [queryParams]=\\\"{id: currentNodeType.repositoryId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\t</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/generaldata/generaldata.component.html\n// module id = 775\n// module chunks = 0","module.exports = \"<!-- NodeTypeDetails Component Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\t\\n\\t<!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tNode Type Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentNodeType.name}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tNode Type ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentNodeType.id}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<!-- Tab Panel -->\\n\\t<div class=\\\"data-panel \\\">\\n\\t\\t\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\t\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#general\\\" style=\\\"color: white\\\" role=\\\"tab\\\">General Data</a></li>\\n\\t\\t    <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#providedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Provided Properties</a></li>\\n<!-- \\t\\t    <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#expectedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Expected Properties</a></li>\\n -->\\t\\t</ul>\\n\\t\\t\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content  tab-panel\\\">\\n\\t\\t\\t\\n\\t\\t\\t<div id=\\\"general\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector GeneralData Component -->\\n\\t\\t\\t\\t<app-generaldata [currentNodeType]=\\\"currentNodeType\\\"></app-generaldata>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div id=\\\"providedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<!-- Selector ProvidedProperty Component -->\\n\\t\\t\\t\\t<app-providedproperty [entity]=\\\"currentNodeType\\\"></app-providedproperty>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<!--  <div id=\\\"expectedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\tSelector ExpectedProperty\\n\\t\\t\\t\\t<app-expectedproperty [entity]=\\\"currentNodeType\\\"></app-expectedproperty>\\n\\t\\t\\t</div> -->\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/nodetype/nodetypedetails/nodetypedetails.component.html\n// module id = 776\n// module chunks = 0","module.exports = \"<!-- RelationshipType Area -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div id=\\\"accordion\\\" class=\\\"w3-theme-d2 panel-group collapsed_area\\\">\\n\\n\\t\\t<div class=\\\"panel panel-default\\\">\\n\\n\\t\\t\\t<!-- Header -->\\n\\t\\t\\t<div class=\\\"row panel-heading control-panel\\\">\\n\\n\\t\\t\\t\\t<h3 class=\\\"col-sm-4\\\">Relationship Types</h3>\\n\\n\\t\\t\\t\\t<button class=\\\"w3-right w3-green btn\\\" id=\\\"createRelationshipType\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" aria-expanded=\\\"true\\\" href=\\\"#createRelationshipTypeFieldsArea\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> New\\n\\t\\t\\t\\t</button>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Control Panel -->\\n\\t\\t\\t<div class=\\\"collapse panel-collapse w3-theme-l1 input-panel\\\" id=\\\"createRelationshipTypeFieldsArea\\\">\\n\\t\\t\\t\\t<form #createRelationshipTypeForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"relationshipTypeName\\\">Name: </label> <input #relationshipTypeName #relationshipTypeName=\\\"ngModel\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"relationshipTypeName\\\" [(ngModel)]=\\\"createdRelationshipType.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{createdRelationshipType.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"relationshipTypeName.errors && (relationshipTypeName.dirty || relationshipTypeName.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"!relationshipTypeName.errors.required\\\">Name is required</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon: </label> <input class=\\\"form-control\\\" #icon type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"submit\\\" [disabled]=\\\"!createRelationshipTypeForm.form.valid\\\" class=\\\"btn btn-success\\\" (click)=\\\"createRelationshipType()\\\">Create</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Data Table -->\\n\\t\\t<div class=\\\"middle_collapse_area col-12-sm w3-responsive w3-theme-l1 table-container\\\">\\n\\t\\t\\t<table class=\\\"w3-table-all table-striped w3-bordered\\\">\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr class=\\\"w3-theme-d3\\\">\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\"></th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Nr.</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Name</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">ID</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Edit</th>\\n\\t\\t\\t\\t\\t\\t<th class=\\\"table-head\\\">Delete</th>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t<tr *ngFor=\\\"let relationshipType of relationshipTypes\\\">\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/relationshiptypedetails\\\" [queryParams]=\\\"{id: relationshipType.id}\\\"><i class=\\\"fa fa-folder-open-o\\\" aria-hidden=\\\"true\\\"></i></td>\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/relationshiptypedetails\\\" [queryParams]=\\\"{id: relationshipType.id}\\\">{{ relationshipTypes.indexOf(relationshipType) + 1 }}</td>\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/relationshiptypedetails\\\" [queryParams]=\\\"{id: relationshipType.id}\\\">{{ relationshipType.name }}</td>\\n\\t\\t\\t\\t\\t\\t<td routerLink=\\\"/dashboard/relationshiptypedetails\\\" [queryParams]=\\\"{id: relationshipType.id}\\\">{{ relationshipType.id }}</td>\\n\\t\\t\\t\\t\\t\\t<td><button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editRelationshipTypeModal\\\" class=\\\"w3-blue btn\\\" (click)=\\\"setEditRelationshipType(relationshipType)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t\\t<td><button class=\\\"w3-red btn\\\" (click)=\\\"deleteRelationshipType(relationshipType.id)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button></td>\\n\\t\\t\\t\\t\\t</tr>\\n\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\\n<!-- Modal for Edit RelationshipType-->\\n<div class=\\\"modal fade modal-position\\\" id=\\\"editRelationshipTypeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"true\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\" w3-theme-l1 modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Edit Relationship Type</h5>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"  input-panel\\\">\\n\\t\\t\\t\\t<form>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name: </label> <input #editName type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" value=\\\"{{editRelationshipType.name}}\\\" required>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateRelationshipType(editName.value)\\\" data-dismiss=\\\"modal\\\">Save</button>\\n\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/relationshiptype/relationshiptype.component.html\n// module id = 777\n// module chunks = 0","module.exports = \"<!-- General Data Component -->\\n<div class=\\\"tab-panel rounded\\\">\\n\\n\\t<div class=\\\"w3-theme-l1 input-panel\\\">\\n\\t\\t<form>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>ID: </label> <input class=\\\"form-control\\\" value=\\\"{{currentRelationshipType.id}}\\\" disabled>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"nameRelationshipType\\\">Name: </label> <input disabled #nameRelationshipType type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{currentRelationshipType.name}}\\\" required>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-4 form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"icon\\\">Icon Path: </label> <input class=\\\"  form-control\\\" #icon value=\\\"{{currentRelationshipType.icon}}\\\" disabled />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-2 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Icon View: </label> <img class=\\\" form-control w3-right icon\\\" src=\\\"{{currentRelationshipType.icon}}\\\" />\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"col-sm-6 form-group\\\">\\n\\t\\t\\t\\t\\t<label>Repository ID: </label> <input class=\\\"form-control col-sm-5\\\" value=\\\"{{currentRelationshipType.repositoryId}}\\\" disabled>\\n\\t\\t\\t\\t\\t<button class=\\\"w3-blue col-sm-1 btn w3-right\\\" type=\\\"button\\\" routerLink=\\\"/dashboard/repository\\\" [queryParams]=\\\"{id: currentRelationshipType.repositoryId}\\\">\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</form>\\n\\t</div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/generaldata/generaldata.component.html\n// module id = 778\n// module chunks = 0","module.exports = \"<!-- RepositoryDetailsComponent Area -->\\n<div class=\\\"dashboard_area\\\">\\n\\n    <!-- Header -->\\n\\t<div class=\\\"w3-theme-d4 row panel-heading control-panel\\\">\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tRelationship Type Name: <input disabled style=\\\"color: black\\\" value=\\\"{{currentRelationshipType.name}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-sm-6\\\">\\n\\t\\t\\t<h2>\\n\\t\\t\\t\\tRelationship Type ID: <input disabled style=\\\"color: black\\\" value=\\\"{{currentRelationshipType.id}}\\\"/>\\n\\t\\t\\t</h2>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t<!-- Tab Panel -->\\n\\t<div class=\\\"data-panel \\\">\\n\\t\\t\\n\\t\\t<!-- Tab Header -->\\n\\t\\t<ul class=\\\"tabrow nav\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#general\\\" style=\\\"color: white\\\" role=\\\"tab\\\">General Data</a></li>\\n\\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#providedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Provided Properties</a></li>\\n<!-- \\t\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#expectedproperty\\\" style=\\\"color: white\\\" role=\\\"tab\\\">Expected Properties</a></li>\\n -->\\t\\t</ul>\\n\\t\\t\\n\\t\\t<!-- Tab Content -->\\n\\t\\t<div class=\\\"tab-content  tab-panel\\\">\\n\\t\\t\\t<div id=\\\"general\\\" class=\\\"rounded tab-pane active\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<app-generaldata [currentRelationshipType]=\\\"currentRelationshipType\\\"></app-generaldata>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id=\\\"providedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<app-providedproperty [entity]=\\\"currentRelationshipType\\\"></app-providedproperty>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- <div id=\\\"expectedproperty\\\" class=\\\"rounded tab-pane\\\" role=\\\"tabpanel\\\">\\n\\t\\t\\t\\t<app-expectedproperty [entity]=\\\"currentRelationshipType\\\"></app-expectedproperty>\\n\\t\\t\\t</div> -->\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/modules/types/relationshiptype/relationshiptypedetails/relationshiptypedetails.component.html\n// module id = 779\n// module chunks = 0","  import { Node } from '../graph/node';\nimport { Level } from './level';\nimport { LevelGraph } from './levelgraph';\nimport { LevelGraphRelation } from './levelgraphrelation';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - LevelGraphNode - A node of a LevelGraph\n *\n * @superclass - Entity\n * @superField - id: number - ID of the LevelGraphNode\n * @superField - name: string - Name of the LevelGraphNode\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the LevelGraphNode\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the LevelGraphNode\n *\n * @superclass - Node\n * @superField - x: number - x Position of the left upper corner of a rectangle\n * @superField - y: number - y Position of the left upper corner of a rectangle\n * @superField - width: number - Width of the rectangle\n * @superField - height: number - Height of the rectangle\n *\n * @field - level: Level - Level of the LevelGraphNode\n * @field - levelId: number - ID of the Level of the LevelGraphNode\n * @field - levelDepth: number - Level depth of the LevelGraphNode\n * @field - levelGraph: LevelGraph - LevelGraph of the LevelGraphNode\n * @field - levelGraphId: number - ID of the LevelGraph of the LevelGraphNode\n * @field - inLevelGraphRelations: LevelGraphRelation[] - Array of all incoming relations of the node\n * @field - outLevelGraphRelations: LevelGraphRelation[] - Array of all outgoing relations of the node\n * @field - levelGraphNodeType: string - Type of the LevelGraphNode;\n * @field - levelGraphNodeTypeId: number - ID of the Type of the LevelGraphNode\n *\n * @author Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class LevelGraphNode extends Node {\n\n  level: Level;\n  levelId: number;\n  levelDepth: number;\n\n  levelGraph: LevelGraph;\n  levelGraphId: number;\n\n  inLevelGraphRelations: LevelGraphRelation[] = [];\n  outLevelGraphRelations: LevelGraphRelation[] = [];\n\n  levelGraphNodeType: string;\n  levelGraphNodeTypeId: number;\n\n  constructor() {\n    super();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/levelgraph/levelgraphnode.ts","import { Relation } from '../graph/relation';\nimport { Path } from '../utility/path';\nimport { Level } from './level';\nimport { LevelGraph } from './levelgraph';\nimport { LevelGraphNode } from './levelgraphnode';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - LevelGraphRelation - A relation of a LevelGraph\n *\n * @Entity\n * @superField - id: number - ID of the LevelGraphNode\n * @superField - name: string - Name of the LevelGraphNode\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the LevelGraphNode\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the LevelGraphNode\n *\n * @Relation\n * @superField - sourceNodeId: number - ID of the Source Node of LevelGraphRelation\n * @superField - targetNodeId: number - ID of the Target Node of LevelGraphRelation\n * @superField - path: Path - Path of the line from source node to target node\n *\n * @field - sourceLevelDepth: number - Depth of the level of the source node\n * @field - targetLevelDepth: number - Depth of the level of the target node\n * @field - sourceLevelId: number - ID of the source level\n * @field - targetLevelId: number - ID of the target level\n * @field - sourceLevel: Level - Source level object\n * @field - targetLevel: Level - Target level object\n * @field - targetLevelGraphNode: LevelGraphNode - Target LevelGraphNode of the levelGraphRelation\n * @field - sourceLevelGraphNode: LevelGraphNode - Source LevelGraphNode of the levelGraphRelation\n * @field - levelGraph: LevelGraph - LevelGraph of the LevelGraphReltation\n * @field - levelGraphId: number - ID of the LevelGraph of the LevelGraphRelation\n * @field - levelGraphRelationType: string - Type of the LevelGraphRelation\n * @hint:    You may decide to implement later the types as a Class for further improvment currently it is enough to implement it as constant Strings\n * @field - entryPoint: boolean - True if a LevelGraphRelation of type REFINE_TO is a outgoing relation of a LevelGraphNode of type NODEFTYPERAGMENT or RELATIONSHIPTYPEFRAGMENT and its target\n *                                LevelGraphNode is a EntryPoint of the Fragment. Default is false.\n * @field - exitPoint: boolean - True if a LevelGraphRelation of type REFINE_TO is a outgoing relation of a LevelGraphNode of type fragment and its target LevelGraphNode is a ExitPoint of the Fragment.\n *                               Default is false.\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class LevelGraphRelation extends Relation {\n\n  sourceLevelDepth: number;\n  targetLevelDepth: number;\n  sourceLevelId: number;\n  targetLevelId: number;\n  sourceLevel: Level;\n  targetLevel: Level;\n\n  targetLevelGraphNode: LevelGraphNode;\n  sourceLevelGraphNode: LevelGraphNode;\n\n  levelGraph: LevelGraph;\n  levelGraphId: number;\n\n  levels: Level[] = [];\n\n  levelGraphRelationType: string;\n\n  entryPoint = false;\n  exitPoint = false;\n\n  constructor(sourceLevelDepth: number, targetLevelDepth: number, sourceNodeId: number, targetNodeId: number, levelGraphId: number, path: Path, levelGraphRelationType: string) {\n    super(sourceNodeId, targetNodeId, path);\n    this.sourceLevelDepth = sourceLevelDepth;\n    this.targetLevelDepth = targetLevelDepth;\n    this.levelGraphId = levelGraphId;\n    this.levelGraphRelationType = levelGraphRelationType;\n  }\n\n  /*******************************************************************************************************************************************************************************************************\n   *\n   * @method - isTargetNodeSourceNodeInSameLevel\n   *\n   ******************************************************************************************************************************************************************************************************/\n  isTargetNodeSourceNodeInSameLevel() {\n    return (this.sourceLevelId === this.targetLevelId);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/levelgraph/levelgraphrelation.ts","import { Entity } from '../entity/entity';\nimport { Property } from './property';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - ExpectedProperty - ExpectedProperties are name value pairs which should be fulfilled by a specific kind of the owner. Inherited from <Entity>\n *\n * @superclass - Property\n * @superField - id: number - Id of the ExpectedProperty\n * @superField - name: string - Name of the ExpectedProperty\n * @superField - value: string - Value of the ExpectedProperty\n *\n * @field - entityProvided: Entity - owner of the ExpectedProperty\n * @field - entityProvidedId: number - ID of the owner of the ExpectedProperty\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class ExpectedProperty extends Property {\n\n  entityExpected: Entity;\n  entityExpectedId: number;\n\n  constructor(name: string, value: string) {\n    super(name, value);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/metrics/expectedproperty.ts","import { Entity } from '../entity/entity';\nimport { Property } from './property';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - ProvidedProperty - ProvidedProperties are name value pairs which are provided through the owner. Inherited from Property\n *\n * @superclass - Property\n * @superField - id: number - Id of the Property\n * @superField - name: string - Name of the Property\n * @superField - value: string - Value of the Property\n *\n * @field - entityProvided: Entity - owner of the Property\n * @field - entityProvidedId: number - ID of the owner of the Property\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class ProvidedProperty extends Property {\n\n  entityProvided: Entity;\n  entityProvidedId: number;\n\n  constructor(name: string, value: string) {\n    super(name, value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/metrics/providedproperty.ts","import { NodeType } from '../types/nodetype';\nimport { Node } from '../graph/node';\nimport { LevelGraphNode } from '../levelgraph/levelgraphnode';\nimport { RelationshipTemplate } from './relationshiptemplate';\nimport { TopologyTemplate } from './topologytemplate';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - NodeTemplate - A node of a TopologyTemplate\n *\n * @Class Entity\n * @superField - id: number - ID of the NodeTemplate\n * @superField - name: string - Name of the NodeTemplate\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the NodeTemplate\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the NodeTemplate\n *\n * @Class Node\n * @superField - x: number - x Position of the left upper corner of a rectangle\n * @superField - y: number - y Position of the left upper corner of a rectangle\n * @superField - width: number - Width of the rectangle\n * @superField - height: number - Height of the rectangle\n *\n * @field - levelGraphNode: LevelGraphNode - LevelGraphNode from which the NodeTemplate was created\n * @field - levelGraphNodeId: number - ID of the LevelGraphNode from which the NodeTemplate was created\n * @field - nodeType: NodeType - NodeType of the NodeTemplate\n * @field - nodeTypeId: number - ID of NodeType of the NodeTemplate\n * @field - inRelationshipTemplates: RelationshipTemplate[] - Array of all outgoing and incoming RelationshipTemplates of the NodeTemplate\n * @field - outRelationshipTemplates: RelationshipTemplate[] - Array of all outgoing and incoming RelationshipTemplates of the NodeTemplate\n * @field - topologyTemplate: TopologyTemplate - TopologyTemplate of the NodeTemplate\n * @field - topologyTemplateId: number - ID of TopologyTemplate of the NodeTemplate\n * @field - abstractionLevel: number - Level of abstraction of the NodeTemplate\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class NodeTemplate extends Node {\n\n  levelGraphNode: LevelGraphNode;\n  levelGraphNodeId: number;\n\n  nodeType: NodeType;\n  nodeTypeId: number;\n\n  inRelationshipTemplates: RelationshipTemplate[] = [];\n  outRelationshipTemplates: RelationshipTemplate[] = [];\n\n  topologyTemplate: TopologyTemplate;\n  topologyTemplateId: number;\n\n  abstractionLevel: number;\n\n  constructor() {\n    super();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/topology/nodetemplate.ts","import { Relation } from '../graph/relation';\nimport { LevelGraphNode } from '../levelgraph/levelgraphnode';\nimport { Path } from '../utility/path';\nimport { NodeTemplate } from './nodetemplate';\nimport { RelationshipType } from '../types/relationshiptype';\nimport { TopologyTemplate } from './topologytemplate';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - RelationshipTemplate - A relation between two NodeTemplates\n *\n * @Class Entity\n * @superField - id: number - ID of the RelationshipTemplate\n * @superField - name: string - Name of the RelationshipTemplate\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the RelationshipTemplate\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the RelationshipTemplate\n *\n * @Class Relation\n * @superField - sourceNodeId: number - ID of the Source Node of RelationshipTemplate\n * @superField - targetNodeId: number - ID of the Target Node of RelationshipTemplate\n * @superField - path: Path - Path of the line from source node to target node\n *\n * @field - levelGraphNode: LevelGraphNode - LevelGraph Node from which this RelationshipTemplate is derived\n * @field - levelGraphNodeId: number - ID of the LevelGraph Node form which the RelationshipTemplate is derived\n * @field - relationshipType: RelationshipType - RelationshipType of the RelationshipTemplate\n * @field - relationshipTypeId: number - ID of the RelationshipType\n * @field - sourceNodeTemplate: NodeTemplate - Source and Target NodeTemplate of the RelationshipTemplate\n * @field - targetNodeTemplate: NodeTemplate - Source and Target NodeTemplate of the RelationshipTemplate\n * @field - topologyTemplate: TopologyTemplate - TopologyTemplate of the RelationshipTemplate\n * @field - topologyTemplateId: number - ID of the TopologyTemplate\n * @field - abstractionLevel: number - Level of abstraction of the RelationshipTemplate\n *\n * @author Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class RelationshipTemplate extends Relation {\n\n  levelGraphNode: LevelGraphNode;\n  levelGraphNodeId: number;\n\n  relationshipType: RelationshipType;\n  relationshipTypeId: number;\n\n  sourceNodeTemplate: NodeTemplate;\n  targetNodeTemplate: NodeTemplate;\n\n  topologyTemplate: TopologyTemplate;\n  topologyTemplateId: number;\n\n  abstractionLevel: number;\n\n  constructor(sourceNodeId: number, targetNodeId: number, path: Path, relationshipTypeId: number, topologyTemplateId: number) {\n    super(sourceNodeId, targetNodeId, path);\n    this.relationshipTypeId = relationshipTypeId;\n    this.topologyTemplateId = topologyTemplateId;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/topology/relationshiptemplate.ts","import {Entity} from '../entity/entity';\nimport {Repository} from '../repository/repository';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - NodeType - NodeType inherited from Entity it is the type of a NodeTemplate or of a LevelGraphNode\n *\n * @superField - id: number - ID of the NodeType\n * @superField - name: string - Name of the NodeType\n * @superField - expectedProperties: ExpectedProperty[] - Array of expected properties of the NodeType\n * @superField - providedProperties: ProvidedProperty[] - Array of provided properties of the NodeType\n * @superField - icon: String - URL of the icon for representation inherited from Entity\n *\n * @field - repository: Repository - Repository of the NodeType\n * @field - repositoryId: string - ID of the Repository of the NodeType\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class NodeType extends Entity {\n\n  // default icon\n  icon = '/assets/img/nodeTypeDefault.png';\n\n  repository: Repository;\n  repositoryId: string;\n\n  constructor() {\n    super();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/types/nodetype.ts","import { Entity } from '../entity/entity';\nimport { Repository } from '../repository/repository';\n\n/*******************************************************************************************************************************************************************************************************\n *\n * @class - RelationshipType - RelationshipType inherited from Entity it is the type of a RelationshipTemplate or of a LevelGraphNode\n *\n * @field - repository: Repository - Repository of the RelationshipType\n * @field - repositoryId: string - ID of the Repository of the RelationshipType\n *\n * @author - Arthur Kaul\n *\n ******************************************************************************************************************************************************************************************************/\nexport class RelationshipType extends Entity {\n\n  // default icon\n  icon = '/assets/img/relationTypeDefault.png';\n\n  repository: Repository;\n  repositoryId: string;\n\n  constructor() {\n    super();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/datamodels/types/relationshiptype.ts","import { Logger } from '../../../../logger/logger';\nimport { Level } from '../../datamodels/levelgraph/level';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - LevelService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for Level Data\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class LevelService {\n\n  // URL of the REST Interface End-Point\n  private levelUrl = '/api/levels';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevel - Send GET Level REQUEST\n   *\n   * @param - id: number - ID of the Level which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevel(id: number): Observable<Level> {\n    Logger.info('[REQUEST - LEVEL]: Send GET Level Request with ID:' + id, LevelService.name);\n    return this.http.get(this.levelUrl + '/' + id).map(this.extractLevel).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createLevel - Send POST Level REQUEST\n   *\n   * @param - level: Level - Level which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createLevel(level: Level): Observable<Level> {\n    Logger.info('[REQUEST - LEVEL]: Send POST Request Level', LevelService.name);\n    Logger.data('[REQUEST - LEVEL]: ' + JSON.stringify(level), LevelService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.levelUrl, level, options).map(this.extractLevel).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateLevel - Send PUT Level REQUEST\n   *\n   * @param - level: Level - Level which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateLevel(level: Level): Observable<Level> {\n    Logger.info('[REQUEST - LEVEL]: Send PUT Request Level', LevelService.name);\n    Logger.data('[REQUEST - LEVEL]: ' + JSON.stringify(level), LevelService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.levelUrl + '/' + level.id, level, options).map(this.extractLevel).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteLevel - Send DELETE Level REQUEST\n   *\n   * @param - id: number - ID of the Level which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteLevel(id: number): Observable<Level> {\n    Logger.info('[REQUEST - LEVEL]: Send DELETE Request Level', LevelService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.levelUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevel- Extract data from response data Level object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractLevel(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - LEVEL]:  Extract Level Data', LevelService.name);\n    Logger.info('[RESPONSE - LEVEL]: ' + JSON.stringify(body), LevelService.name);\n    let level: Level = new Level(body.depth, body.y, body.levelGraphId);\n    level = body;\n    return level || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/levelgraph/level.service.ts","import { Logger } from '../../../../logger/logger';\nimport { LevelGraphNode } from '../../datamodels/levelgraph/levelgraphnode';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n/**********************************************************************************************************************************************************************************************************\n *\n * @service - LevelGraphNodeService implements the calls to the rest interface of the application server and\n *            handle the request construction and response extraction for LevelGraphNodes\n *\n *********************************************************************************************************************************************************************************************************/\n@Injectable()\nexport class LevelGraphNodeService {\n\n  // URL of the REST Interface End-Point\n  private levelGraphNodeUrl = '/api/levelgraphnodes';\n\n  constructor(private http: Http) { }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevelGraphNodes - Send GET all Level Graph Nodes REQUEST\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevelGraphNodes(): Observable<LevelGraphNode[]> {\n    Logger.info('[REQUEST - LEVELGRAPHNODE]: Send GET Level Graph Nodes Request', LevelGraphNodeService.name);\n    return this.http.get(this.levelGraphNodeUrl).map(this.extractLevelGraphNodes).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - getLevelGraphNode - Send GET Level Graph Node REQUEST\n   *\n   * @param - id: number - ID of the LevelGraphNode which should be retrieved from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public getLevelGraphNode(id: number): Observable<LevelGraphNode> {\n    Logger.info('[REQUEST - LEVELGRAPHNODE]: Send GET Level Graph Node Request with ID: ' + id, LevelGraphNodeService.name);\n    return this.http.get(this.levelGraphNodeUrl + '/' + id).map(this.extractLevelGraphNode).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - createLevelGraphNode - Send POST Level Graph Node REQUEST\n   *\n   * @param - levelGraphNode: LevelGraphNode - LevelGraphRelation which should be created\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public createLevelGraphNode(levelGraphNode: LevelGraphNode): Observable<LevelGraphNode> {\n    Logger.info('[REQUEST - LEVELGRAPHNODE]: Send POST Level Graph Node Request', LevelGraphNodeService.name);\n    Logger.data('[REQUEST - LEVELGRAPHNODE]: ' + JSON.stringify(levelGraphNode), LevelGraphNodeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.levelGraphNodeUrl, levelGraphNode, options).map(this.extractLevelGraphNode).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - updateLevelGraphNode - Send PUT Level Graph Node REQUEST\n   *\n   * @param - levelGraphNode: LevelGraphNode - LeveLevelGraphNodelGraphRelation which should be updated\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public updateLevelGraphNode(levelGraphNode: LevelGraphNode): Observable<LevelGraphNode> {\n    Logger.info('[REQUEST - LEVELGRAPHNODE]: Send PUT Level Graph Node Request', LevelGraphNodeService.name);\n    Logger.data('[REQUEST - LEVELGRAPHNODE]: ' + JSON.stringify(levelGraphNode), LevelGraphNodeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.put(this.levelGraphNodeUrl + '/' + levelGraphNode.id, levelGraphNode, options).map(this.extractLevelGraphNode).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @request - deleteLevelGraphNode - Send DELETE Level Graph Node  REQUEST\n   *\n   * @param - id: number - ID of the LevelGraphNode which should be deleted from the database\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public deleteLevelGraphNode(id: number): Observable<LevelGraphNode> {\n    Logger.info('[REQUEST - LEVELGRAPHNODE]: Send DELETE Level Graph Node Request', LevelGraphNodeService.name);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.delete(this.levelGraphNodeUrl + '/' + id, options).map(res => res).catch(this.handleError);\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevelGraphNodes - Extract data from response data list\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  public extractLevelGraphNodes(res: Response) {\n    let body = res.json();\n    let levelGraphList: LevelGraphNode[] = [];\n    Logger.info('[RESPONSE - LEVELGRAPHNODE]: Extract Level Graph Node Data List', LevelGraphNodeService.name);\n    Logger.info('[RESPONSE - LEVELGRAPHNODE]: ' + JSON.stringify(body), LevelGraphNodeService.name);\n    for (let levelGraphNode of body) {\n      let tempLevelGraphNode: LevelGraphNode = new LevelGraphNode();\n      tempLevelGraphNode = levelGraphNode;\n      levelGraphList.push(tempLevelGraphNode);\n    }\n    return levelGraphList || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @response - extractLevelGraphNode - Extract data from response data object\n   *\n   * @param - res: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private extractLevelGraphNode(res: Response) {\n    let body = res.json();\n    Logger.info('[RESPONSE - LEVELGRAPHNODE]: Extract Level Graph Node Data', LevelGraphNodeService.name);\n    Logger.info('[RESPONSE - LEVELGRAPHNODE]: ' + JSON.stringify(body), LevelGraphNodeService.name);\n    let levelGraphNode: LevelGraphNode = new LevelGraphNode();\n    levelGraphNode = body;\n    return levelGraphNode || {};\n  }\n\n  /********************************************************************************************************************************************************************************************************\n   *\n   * @error - handleError - Error Handling\n   *\n   * @param - error: Response - Response Object\n   *\n   *******************************************************************************************************************************************************************************************************/\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/dataservices/levelgraph/levelgraphnode.service.ts"],"sourceRoot":""}