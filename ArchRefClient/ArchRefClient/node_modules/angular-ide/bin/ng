#!/usr/bin/env node
require('../lib/windowsPathResolvePatch')();

const path = require('path');
const semver = require('semver');

const getNGCLIManifest = require('../lib/CLUtils').getNGCLIManifest;
const getNGCLIPath = require('../lib/CLUtils').getNGCLIPath;

const ngCLIPKG = getNGCLIManifest();

const TAG = '[angular-ide]';

if (ngCLIPKG) {
  const normalizePackageVersion = require('../lib/CLUtils').normalizePackageVersion;
  const ngCLIPKGName = ngCLIPKG.name;
  const ngCLIPath = getNGCLIPath(ngCLIPKGName);

  ngCLIPKG.version = normalizePackageVersion(ngCLIPKG.version);

  if (semver.satisfies(ngCLIPKG.version, '>=1.0.0-beta.25') ||
    semver.satisfies(ngCLIPKG.version, '>=1.0.0') ||
    semver.satisfies(ngCLIPKG.version, '>=1.1.0-beta')
  ) {

    // Translate `ng init` to `ng new`
    if (
      (semver.satisfies(ngCLIPKG.version, '>=1.0.0-rc.0') ||
        semver.satisfies(ngCLIPKG.version, '>=1.0.0') ||
        semver.satisfies(ngCLIPKG.version, '>=1.1.0-beta')
      ) &&
      process.argv[1] === 'init'
    ) {
      process.argv[1] = 'new';
      const appName = process.argv[4];
      process.argv[2] = appName;
      process.argv[3] = '--dir=./';
    }
    
    const Project = require(path.normalize(path.resolve(__dirname, `../../${ngCLIPath}/ember-cli/lib/models/project`)));
    // const Project = require(`../../${ngCLIPath}/ember-cli/lib/models/project`);

    Project.prototype.originalInitializeAddons = Project.prototype.initializeAddons;

    Project.prototype.initializeAddons = function monkeyInitializeAddons() {
      this.originalInitializeAddons();

      const cliPkg = require(path.resolve(__dirname, '../package.json'));
      const Addon = require(`../../${ngCLIPath}/ember-cli/lib/models/addon`);
      const angularIDEPath = path.join(__dirname, '../../angular-ide');
      const Constructor = Addon.lookup({
        name: 'angular-ide',
        path: angularIDEPath,
        pkg:  cliPkg,
      });

      const addon = new Constructor(this.addonParent, this);
      this.addons.push(addon);
    };

    // run original ng serve
    require(`${ngCLIPath}/bin/ng`);
  } else {
    console.log(TAG, 'Required version not satisfied, doing nothing!');
  }

  
} else {
  console(TAG, 'Unable to detect Angular CLI!!!');
}