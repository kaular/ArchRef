<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://example.org/archref/2017" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://example.org/archref/2017" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd" />

	<xs:element name="documentation" type="tDocumentation" />
	<xs:complexType name="tImport">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:attribute name="namespace" type="xs:anyURI" />
				<xs:attribute name="location" type="xs:anyURI" />
				<xs:attribute name="importType" type="importedURI" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tDocumentation" mixed="true">
		<xs:sequence>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="source" type="xs:anyURI" />
		<xs:attribute ref="xml:lang" />
	</xs:complexType>

	<xs:element name="Definitions">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tDefinitions" />
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="tDefinitions">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="Import" type="tImport" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="TopologyTemplates" type="tTopologyTemplates" minOccurs="0" maxOccurs="1"></xs:element>
					<xs:element name="Repositories" type="xs:string" minOccurs="0" maxOccurs="1"></xs:element>
					<xs:element name="LevelGraphs" type="xs:string" minOccurs="0" maxOccurs="1"></xs:element>
				</xs:sequence>
				<xs:attribute name="id" type="xs:ID" use="required" />
				<xs:attribute name="name" type="xs:string" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tExtensibleElements">
		<xs:sequence>
			<xs:element ref="documentation" minOccurs="0" maxOccurs="unbounded" />
			<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
		<xs:anyAttribute namespace="##other" processContents="lax" />
	</xs:complexType>

	<xs:complexType name="tEntity" abstract="true">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="ExpectedProperties" type="tExpectedProperties" minOccurs="0" maxOccurs="1"></xs:element>
					<xs:element name="ProvidedProperties" type="tProvidedProperties" minOccurs="0" maxOccurs="1"></xs:element>
				</xs:sequence>
				<xs:attribute name="name" type="xs:NCName" use="required" />
				<xs:attribute name="id" type="xs:ID" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tExpectedProperties">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="ExpectedProperty" type="tProperty" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tProvidedProperties">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="ProvidedProperty" type="tProperty" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tProperty">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:attribute name="value" type="xs:string" use="required" />
				<xs:attribute name="name" type="xs:string" use="required" />
				<xs:attribute name="id" type="xs:ID" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tTopologyTemplates">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="TopologyTemplate" type="tTopologyTemplate" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tTopologyTemplate">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:choice maxOccurs="unbounded">
						<xs:element name="NodeTemplate" type="tNodeTemplate" />
						<xs:element name="RelationshipTemplate" type="tRelationshipTemplate" />
					</xs:choice>
					<xs:element name="AbstractionLevel" type="tAbstractionLevel" minOccurs="1" maxOccurs="1" />
					<xs:element name="ParentTopologyTemplate" type="tTopologyTemplate" minOccurs="0" maxOccurs="1" />
					<xs:element name="ChildTopologyTemplates" type="tTopologyTemplates" minOccurs="0" maxOccurs="1" />
				</xs:sequence>
				<xs:attribute name="name" type="xs:NCName" use="required" />
				<xs:attribute name="id" type="xs:ID" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tNodeTemplate">
		<xs:complexContent>
			<xs:extension base="tEntity">
				<xs:attribute name="typeRef" type="xs:IDREF" use="required" />
				<xs:attribute name="levelGraphNodeRef" type="xs:IDREF" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tRelationshipTemplate">
		<xs:complexContent>
			<xs:extension base="tEntity">
				<xs:sequence>
					<xs:element name="SourceElement" minOccurs="1" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="ref" type="xs:IDREF" use="required" />
						</xs:complexType>
					</xs:element>
					<xs:element name="TargetElement" minOccurs="1" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="ref" type="xs:IDREF" use="required" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="typeRef" type="xs:IDREF" use="required" />
				<xs:attribute name="levelGraphNode" type="xs:QName" use="optional" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tRepositories">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="Repository" type="tRepository" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tRepository">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:choice maxOccurs="unbounded">
					<xs:element name="NodeType" type="tNodeType" />
					<xs:element name="RelationshipType" type="tRelationshipType" />
				</xs:choice>
				<xs:attribute name="name" type="xs:NCName" use="required" />
				<xs:attribute name="id" type="xs:ID" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tRelationshipType">
		<xs:complexContent>
			<xs:extension base="tEntity">

			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tNodeType">
		<xs:complexContent>
			<xs:extension base="tEntity">

			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tLevelGraphs">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="LevelGraph" type="tLevelGraph" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tLevelGraph">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:choice maxOccurs="unbounded">
					<xs:element name="LevelGraphNode" type="tLevelGraphNode" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="LevelGraphRelation" type="tLevelGraphRelation" minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="Level" type="tLevel" minOccurs="2" maxOccurs="unbounded" />
				</xs:choice>
				<xs:attribute name="name" type="xs:NCName" use="required" />
				<xs:attribute name="id" type="xs:ID" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tLevelGraphNode">
		<xs:complexContent>
			<xs:extension base="tEntity">
				<xs:attribute name="type" type="xs:string" use="required" />
				<xs:attribute name="typeRef" type="xs:IDREF" use="optional" />
				<xs:attribute name="abstraktionLevelRef" type="xs:IDREF" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tLevelGraphRelation">
		<xs:complexContent>
			<xs:extension base="tEntity">

				<xs:sequence>

					<xs:element name="SourceElement" minOccurs="1" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="ref" type="xs:IDREF" use="required" />
						</xs:complexType>
					</xs:element>
					<xs:element name="TargetElement" minOccurs="1" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="ref" type="xs:IDREF" use="required" />
						</xs:complexType>
					</xs:element>

					<xs:element name="SourceLevel" minOccurs="1" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="ref" type="xs:IDREF" use="required" />
						</xs:complexType>
					</xs:element>
					<xs:element name="TargetLevel" minOccurs="1" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="ref" type="xs:IDREF" use="required" />
						</xs:complexType>
					</xs:element>

				</xs:sequence>

				<xs:attribute name="type" type="tLevelGraphRelationType" use="required" />
				<xs:attribute name="abstraktionLevel" type="xs:QName" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="tLevel">
		<xs:complexContent>
			<xs:extension base="tExtensibleElements">
				<xs:sequence>
					<xs:element name="AbstractionLevel" type="tAbstractionLevel" />
				</xs:sequence>
				<xs:attribute name="name" type="xs:string" use="required" />
				<xs:attribute name="id" type="xs:string" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="tLevelGraphRelationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="REFINE_TO" />
			<xs:enumeration value="CONNECT_TO" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="tAbstractionLevel">
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="0" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="importedURI">
		<xs:restriction base="xs:anyURI" />
	</xs:simpleType>

</xs:schema>